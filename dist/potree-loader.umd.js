(function(je,yn){typeof exports=="object"&&typeof module!="undefined"?yn(exports):typeof define=="function"&&define.amd?define(["exports"],yn):(je=typeof globalThis!="undefined"?globalThis:je||self,yn(je["potree-loader"]={}))})(this,function(je){"use strict";/**
 * @license
 * Copyright 2010-2022 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const yn="138",sa="300 es";class Oe{addEventListener(t,e){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[t]===void 0&&(n[t]=[]),n[t].indexOf(e)===-1&&n[t].push(e)}hasEventListener(t,e){if(this._listeners===void 0)return!1;const n=this._listeners;return n[t]!==void 0&&n[t].indexOf(e)!==-1}removeEventListener(t,e){if(this._listeners===void 0)return;const i=this._listeners[t];if(i!==void 0){const r=i.indexOf(e);r!==-1&&i.splice(r,1)}}dispatchEvent(t){if(this._listeners===void 0)return;const n=this._listeners[t.type];if(n!==void 0){t.target=this;const i=n.slice(0);for(let r=0,a=i.length;r<a;r++)i[r].call(this,t);t.target=null}}}const pe=[];for(let s=0;s<256;s++)pe[s]=(s<16?"0":"")+s.toString(16);const Is=Math.PI/180,Bs=180/Math.PI;function Te(){const s=Math.random()*4294967295|0,t=Math.random()*4294967295|0,e=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(pe[s&255]+pe[s>>8&255]+pe[s>>16&255]+pe[s>>24&255]+"-"+pe[t&255]+pe[t>>8&255]+"-"+pe[t>>16&15|64]+pe[t>>24&255]+"-"+pe[e&63|128]+pe[e>>8&255]+"-"+pe[e>>16&255]+pe[e>>24&255]+pe[n&255]+pe[n>>8&255]+pe[n>>16&255]+pe[n>>24&255]).toUpperCase()}function we(s,t,e){return Math.max(t,Math.min(e,s))}function Xl(s,t){return(s%t+t)%t}function Cs(s,t,e){return(1-e)*s+e*t}function ra(s){return(s&s-1)===0&&s!==0}function As(s){return Math.pow(2,Math.floor(Math.log(s)/Math.LN2))}class q{constructor(t=0,e=0){this.x=t,this.y=e}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,e){return this.x=t,this.y=e,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t,e){return e!==void 0?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this)}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this}sub(t,e){return e!==void 0?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this)}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const e=this.x,n=this.y,i=t.elements;return this.x=i[0]*e+i[3]*n+i[6],this.y=i[1]*e+i[4]*n+i[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y;return e*e+n*n}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t}fromBufferAttribute(t,e,n){return n!==void 0&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this}rotateAround(t,e){const n=Math.cos(e),i=Math.sin(e),r=this.x-t.x,a=this.y-t.y;return this.x=r*n-a*i+t.x,this.y=r*i+a*n+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}q.prototype.isVector2=!0;class fe{constructor(){this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}set(t,e,n,i,r,a,o,l,c){const d=this.elements;return d[0]=t,d[1]=i,d[2]=o,d[3]=e,d[4]=r,d[5]=l,d[6]=n,d[7]=a,d[8]=c,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],this}extractBasis(t,e,n){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,i=e.elements,r=this.elements,a=n[0],o=n[3],l=n[6],c=n[1],d=n[4],h=n[7],u=n[2],m=n[5],b=n[8],g=i[0],Z=i[3],f=i[6],p=i[1],Y=i[4],y=i[7],x=i[2],M=i[5],N=i[8];return r[0]=a*g+o*p+l*x,r[3]=a*Z+o*Y+l*M,r[6]=a*f+o*y+l*N,r[1]=c*g+d*p+h*x,r[4]=c*Z+d*Y+h*M,r[7]=c*f+d*y+h*N,r[2]=u*g+m*p+b*x,r[5]=u*Z+m*Y+b*M,r[8]=u*f+m*y+b*N,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[1],i=t[2],r=t[3],a=t[4],o=t[5],l=t[6],c=t[7],d=t[8];return e*a*d-e*o*c-n*r*d+n*o*l+i*r*c-i*a*l}invert(){const t=this.elements,e=t[0],n=t[1],i=t[2],r=t[3],a=t[4],o=t[5],l=t[6],c=t[7],d=t[8],h=d*a-o*c,u=o*l-d*r,m=c*r-a*l,b=e*h+n*u+i*m;if(b===0)return this.set(0,0,0,0,0,0,0,0,0);const g=1/b;return t[0]=h*g,t[1]=(i*c-d*n)*g,t[2]=(o*n-i*a)*g,t[3]=u*g,t[4]=(d*e-i*l)*g,t[5]=(i*r-o*e)*g,t[6]=m*g,t[7]=(n*l-c*e)*g,t[8]=(a*e-n*r)*g,this}transpose(){let t;const e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this}setUvTransform(t,e,n,i,r,a,o){const l=Math.cos(r),c=Math.sin(r);return this.set(n*l,n*c,-n*(l*a+c*o)+a+t,-i*c,i*l,-i*(-c*a+l*o)+o+e,0,0,1),this}scale(t,e){const n=this.elements;return n[0]*=t,n[3]*=t,n[6]*=t,n[1]*=e,n[4]*=e,n[7]*=e,this}rotate(t){const e=Math.cos(t),n=Math.sin(t),i=this.elements,r=i[0],a=i[3],o=i[6],l=i[1],c=i[4],d=i[7];return i[0]=e*r+n*l,i[3]=e*a+n*c,i[6]=e*o+n*d,i[1]=-n*r+e*l,i[4]=-n*a+e*c,i[7]=-n*o+e*d,this}translate(t,e){const n=this.elements;return n[0]+=t*n[2],n[3]+=t*n[5],n[6]+=t*n[8],n[1]+=e*n[2],n[4]+=e*n[5],n[7]+=e*n[8],this}equals(t){const e=this.elements,n=t.elements;for(let i=0;i<9;i++)if(e[i]!==n[i])return!1;return!0}fromArray(t,e=0){for(let n=0;n<9;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t}clone(){return new this.constructor().fromArray(this.elements)}}fe.prototype.isMatrix3=!0;function aa(s){for(let t=s.length-1;t>=0;--t)if(s[t]>65535)return!0;return!1}function hi(s){return document.createElementNS("http://www.w3.org/1999/xhtml",s)}const oa={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Be={h:0,s:0,l:0},Di={h:0,s:0,l:0};function _s(s,t,e){return e<0&&(e+=1),e>1&&(e-=1),e<1/6?s+(t-s)*6*e:e<1/2?t:e<2/3?s+(t-s)*6*(2/3-e):s}function Sn(s){return s<.04045?s*.0773993808:Math.pow(s*.9478672986+.0521327014,2.4)}function Js(s){return s<.0031308?s*12.92:1.055*Math.pow(s,.41666)-.055}class D{constructor(t,e,n){return e===void 0&&n===void 0?this.set(t):this.setRGB(t,e,n)}set(t){return t&&t.isColor?this.copy(t):typeof t=="number"?this.setHex(t):typeof t=="string"&&this.setStyle(t),this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(t&255)/255,this}setRGB(t,e,n){return this.r=t,this.g=e,this.b=n,this}setHSL(t,e,n){if(t=Xl(t,1),e=we(e,0,1),n=we(n,0,1),e===0)this.r=this.g=this.b=n;else{const i=n<=.5?n*(1+e):n+e-n*e,r=2*n-i;this.r=_s(r,i,t+1/3),this.g=_s(r,i,t),this.b=_s(r,i,t-1/3)}return this}setStyle(t){function e(i){i!==void 0&&parseFloat(i)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let n;if(n=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(t)){let i;const r=n[1],a=n[2];switch(r){case"rgb":case"rgba":if(i=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return this.r=Math.min(255,parseInt(i[1],10))/255,this.g=Math.min(255,parseInt(i[2],10))/255,this.b=Math.min(255,parseInt(i[3],10))/255,e(i[4]),this;if(i=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return this.r=Math.min(100,parseInt(i[1],10))/100,this.g=Math.min(100,parseInt(i[2],10))/100,this.b=Math.min(100,parseInt(i[3],10))/100,e(i[4]),this;break;case"hsl":case"hsla":if(i=/^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a)){const o=parseFloat(i[1])/360,l=parseInt(i[2],10)/100,c=parseInt(i[3],10)/100;return e(i[4]),this.setHSL(o,l,c)}break}}else if(n=/^\#([A-Fa-f\d]+)$/.exec(t)){const i=n[1],r=i.length;if(r===3)return this.r=parseInt(i.charAt(0)+i.charAt(0),16)/255,this.g=parseInt(i.charAt(1)+i.charAt(1),16)/255,this.b=parseInt(i.charAt(2)+i.charAt(2),16)/255,this;if(r===6)return this.r=parseInt(i.charAt(0)+i.charAt(1),16)/255,this.g=parseInt(i.charAt(2)+i.charAt(3),16)/255,this.b=parseInt(i.charAt(4)+i.charAt(5),16)/255,this}return t&&t.length>0?this.setColorName(t):this}setColorName(t){const e=oa[t.toLowerCase()];return e!==void 0?this.setHex(e):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copySRGBToLinear(t){return this.r=Sn(t.r),this.g=Sn(t.g),this.b=Sn(t.b),this}copyLinearToSRGB(t){return this.r=Js(t.r),this.g=Js(t.g),this.b=Js(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(){return this.r*255<<16^this.g*255<<8^this.b*255<<0}getHexString(){return("000000"+this.getHex().toString(16)).slice(-6)}getHSL(t){const e=this.r,n=this.g,i=this.b,r=Math.max(e,n,i),a=Math.min(e,n,i);let o,l;const c=(a+r)/2;if(a===r)o=0,l=0;else{const d=r-a;switch(l=c<=.5?d/(r+a):d/(2-r-a),r){case e:o=(n-i)/d+(n<i?6:0);break;case n:o=(i-e)/d+2;break;case i:o=(e-n)/d+4;break}o/=6}return t.h=o,t.s=l,t.l=c,t}getStyle(){return"rgb("+(this.r*255|0)+","+(this.g*255|0)+","+(this.b*255|0)+")"}offsetHSL(t,e,n){return this.getHSL(Be),Be.h+=t,Be.s+=e,Be.l+=n,this.setHSL(Be.h,Be.s,Be.l),this}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this}lerpColors(t,e,n){return this.r=t.r+(e.r-t.r)*n,this.g=t.g+(e.g-t.g)*n,this.b=t.b+(e.b-t.b)*n,this}lerpHSL(t,e){this.getHSL(Be),t.getHSL(Di);const n=Cs(Be.h,Di.h,e),i=Cs(Be.s,Di.s,e),r=Cs(Be.l,Di.l,e);return this.setHSL(n,i,r),this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,e=0){return this.r=t[e],this.g=t[e+1],this.b=t[e+2],this}toArray(t=[],e=0){return t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t}fromBufferAttribute(t,e){return this.r=t.getX(e),this.g=t.getY(e),this.b=t.getZ(e),t.normalized===!0&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}}D.NAMES=oa,D.prototype.isColor=!0,D.prototype.r=1,D.prototype.g=1,D.prototype.b=1;let In;class xn{static getDataURL(t){if(/^data:/i.test(t.src)||typeof HTMLCanvasElement=="undefined")return t.src;let e;if(t instanceof HTMLCanvasElement)e=t;else{In===void 0&&(In=hi("canvas")),In.width=t.width,In.height=t.height;const n=In.getContext("2d");t instanceof ImageData?n.putImageData(t,0,0):n.drawImage(t,0,0,t.width,t.height),e=In}return e.width>2048||e.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",t),e.toDataURL("image/jpeg",.6)):e.toDataURL("image/png")}static sRGBToLinear(t){if(typeof HTMLImageElement!="undefined"&&t instanceof HTMLImageElement||typeof HTMLCanvasElement!="undefined"&&t instanceof HTMLCanvasElement||typeof ImageBitmap!="undefined"&&t instanceof ImageBitmap){const e=hi("canvas");e.width=t.width,e.height=t.height;const n=e.getContext("2d");n.drawImage(t,0,0,t.width,t.height);const i=n.getImageData(0,0,t.width,t.height),r=i.data;for(let a=0;a<r.length;a++)r[a]=Sn(r[a]/255)*255;return n.putImageData(i,0,0),e}else if(t.data){const e=t.data.slice(0);for(let n=0;n<e.length;n++)e instanceof Uint8Array||e instanceof Uint8ClampedArray?e[n]=Math.floor(Sn(e[n]/255)*255):e[n]=Sn(e[n]);return{data:e,width:t.width,height:t.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),t}}class la{constructor(t=null){this.uuid=Te(),this.data=t,this.version=0}set needsUpdate(t){t===!0&&this.version++}toJSON(t){const e=t===void 0||typeof t=="string";if(!e&&t.images[this.uuid]!==void 0)return t.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(i!==null){let r;if(Array.isArray(i)){r=[];for(let a=0,o=i.length;a<o;a++)i[a].isDataTexture?r.push(Ts(i[a].image)):r.push(Ts(i[a]))}else r=Ts(i);n.url=r}return e||(t.images[this.uuid]=n),n}}function Ts(s){return typeof HTMLImageElement!="undefined"&&s instanceof HTMLImageElement||typeof HTMLCanvasElement!="undefined"&&s instanceof HTMLCanvasElement||typeof ImageBitmap!="undefined"&&s instanceof ImageBitmap?xn.getDataURL(s):s.data?{data:Array.prototype.slice.call(s.data),width:s.width,height:s.height,type:s.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}la.prototype.isSource=!0;let wl=0;class se extends Oe{constructor(t=se.DEFAULT_IMAGE,e=se.DEFAULT_MAPPING,n=1001,i=1001,r=1006,a=1008,o=1023,l=1009,c=1,d=3e3){super();Object.defineProperty(this,"id",{value:wl++}),this.uuid=Te(),this.name="",this.source=new la(t),this.mipmaps=[],this.mapping=e,this.wrapS=n,this.wrapT=i,this.magFilter=r,this.minFilter=a,this.anisotropy=c,this.format=o,this.internalFormat=null,this.type=l,this.offset=new q(0,0),this.repeat=new q(1,1),this.center=new q(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new fe,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=d,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(t){this.source.data=t}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(t){return this.name=t.name,this.source=t.source,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.encoding=t.encoding,this.userData=JSON.parse(JSON.stringify(t.userData)),this.needsUpdate=!0,this}toJSON(t){const e=t===void 0||typeof t=="string";if(!e&&t.textures[this.uuid]!==void 0)return t.textures[this.uuid];const n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(t).uuid,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return JSON.stringify(this.userData)!=="{}"&&(n.userData=this.userData),e||(t.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(this.mapping!==300)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case 1e3:t.x=t.x-Math.floor(t.x);break;case 1001:t.x=t.x<0?0:1;break;case 1002:Math.abs(Math.floor(t.x)%2)===1?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x);break}if(t.y<0||t.y>1)switch(this.wrapT){case 1e3:t.y=t.y-Math.floor(t.y);break;case 1001:t.y=t.y<0?0:1;break;case 1002:Math.abs(Math.floor(t.y)%2)===1?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y);break}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){t===!0&&(this.version++,this.source.needsUpdate=!0)}}se.DEFAULT_IMAGE=null,se.DEFAULT_MAPPING=300,se.prototype.isTexture=!0;class Mt{constructor(t=0,e=0,n=0,i=1){this.x=t,this.y=e,this.z=n,this.w=i}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,e,n,i){return this.x=t,this.y=e,this.z=n,this.w=i,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w!==void 0?t.w:1,this}add(t,e){return e!==void 0?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this)}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this}sub(t,e){return e!==void 0?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this)}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const e=this.x,n=this.y,i=this.z,r=this.w,a=t.elements;return this.x=a[0]*e+a[4]*n+a[8]*i+a[12]*r,this.y=a[1]*e+a[5]*n+a[9]*i+a[13]*r,this.z=a[2]*e+a[6]*n+a[10]*i+a[14]*r,this.w=a[3]*e+a[7]*n+a[11]*i+a[15]*r,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);const e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this}setAxisAngleFromRotationMatrix(t){let e,n,i,r;const l=t.elements,c=l[0],d=l[4],h=l[8],u=l[1],m=l[5],b=l[9],g=l[2],Z=l[6],f=l[10];if(Math.abs(d-u)<.01&&Math.abs(h-g)<.01&&Math.abs(b-Z)<.01){if(Math.abs(d+u)<.1&&Math.abs(h+g)<.1&&Math.abs(b+Z)<.1&&Math.abs(c+m+f-3)<.1)return this.set(1,0,0,0),this;e=Math.PI;const Y=(c+1)/2,y=(m+1)/2,x=(f+1)/2,M=(d+u)/4,N=(h+g)/4,Q=(b+Z)/4;return Y>y&&Y>x?Y<.01?(n=0,i=.707106781,r=.707106781):(n=Math.sqrt(Y),i=M/n,r=N/n):y>x?y<.01?(n=.707106781,i=0,r=.707106781):(i=Math.sqrt(y),n=M/i,r=Q/i):x<.01?(n=.707106781,i=.707106781,r=0):(r=Math.sqrt(x),n=N/r,i=Q/r),this.set(n,i,r,e),this}let p=Math.sqrt((Z-b)*(Z-b)+(h-g)*(h-g)+(u-d)*(u-d));return Math.abs(p)<.001&&(p=1),this.x=(Z-b)/p,this.y=(h-g)/p,this.z=(u-d)/p,this.w=Math.acos((c+m+f-1)/2),this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this.w=Math.max(t.w,Math.min(e.w,this.w)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this.w=Math.max(t,Math.min(e,this.w)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this.w=t.w+(e.w-t.w)*n,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t}fromBufferAttribute(t,e,n){return n!==void 0&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}Mt.prototype.isVector4=!0;class ye extends Oe{constructor(t,e,n={}){super();this.width=t,this.height=e,this.depth=1,this.scissor=new Mt(0,0,t,e),this.scissorTest=!1,this.viewport=new Mt(0,0,t,e);const i={width:t,height:e,depth:1};this.texture=new se(i,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=n.generateMipmaps!==void 0?n.generateMipmaps:!1,this.texture.internalFormat=n.internalFormat!==void 0?n.internalFormat:null,this.texture.minFilter=n.minFilter!==void 0?n.minFilter:1006,this.depthBuffer=n.depthBuffer!==void 0?n.depthBuffer:!0,this.stencilBuffer=n.stencilBuffer!==void 0?n.stencilBuffer:!1,this.depthTexture=n.depthTexture!==void 0?n.depthTexture:null,this.samples=n.samples!==void 0?n.samples:0}setSize(t,e,n=1){(this.width!==t||this.height!==e||this.depth!==n)&&(this.width=t,this.height=e,this.depth=n,this.texture.image.width=t,this.texture.image.height=e,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)}clone(){return new this.constructor().copy(this)}copy(t){return this.width=t.width,this.height=t.height,this.depth=t.depth,this.viewport.copy(t.viewport),this.texture=t.texture.clone(),this.texture.image=Object.assign({},t.texture.image),this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,t.depthTexture!==null&&(this.depthTexture=t.depthTexture.clone()),this.samples=t.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}ye.prototype.isWebGLRenderTarget=!0;class zi extends se{constructor(t=null,e=1,n=1,i=1){super(null);this.image={data:t,width:e,height:n,depth:i},this.magFilter=1003,this.minFilter=1003,this.wrapR=1001,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}zi.prototype.isDataArrayTexture=!0;class Ml extends ye{constructor(t,e,n){super(t,e);this.depth=n,this.texture=new zi(null,t,e,n),this.texture.isRenderTargetTexture=!0}}Ml.prototype.isWebGLArrayRenderTarget=!0;class Ds extends se{constructor(t=null,e=1,n=1,i=1){super(null);this.image={data:t,width:e,height:n,depth:i},this.magFilter=1003,this.minFilter=1003,this.wrapR=1001,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}Ds.prototype.isData3DTexture=!0;class Nl extends ye{constructor(t,e,n){super(t,e);this.depth=n,this.texture=new Ds(null,t,e,n),this.texture.isRenderTargetTexture=!0}}Nl.prototype.isWebGL3DRenderTarget=!0;class Fl extends ye{constructor(t,e,n,i={}){super(t,e,i);const r=this.texture;this.texture=[];for(let a=0;a<n;a++)this.texture[a]=r.clone(),this.texture[a].isRenderTargetTexture=!0}setSize(t,e,n=1){if(this.width!==t||this.height!==e||this.depth!==n){this.width=t,this.height=e,this.depth=n;for(let i=0,r=this.texture.length;i<r;i++)this.texture[i].image.width=t,this.texture[i].image.height=e,this.texture[i].image.depth=n;this.dispose()}return this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e),this}copy(t){this.dispose(),this.width=t.width,this.height=t.height,this.depth=t.depth,this.viewport.set(0,0,this.width,this.height),this.scissor.set(0,0,this.width,this.height),this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,this.depthTexture=t.depthTexture,this.texture.length=0;for(let e=0,n=t.texture.length;e<n;e++)this.texture[e]=t.texture[e].clone();return this}}Fl.prototype.isWebGLMultipleRenderTargets=!0;class ve{constructor(t=0,e=0,n=0,i=1){this._x=t,this._y=e,this._z=n,this._w=i}static slerp(t,e,n,i){return console.warn("THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead."),n.slerpQuaternions(t,e,i)}static slerpFlat(t,e,n,i,r,a,o){let l=n[i+0],c=n[i+1],d=n[i+2],h=n[i+3];const u=r[a+0],m=r[a+1],b=r[a+2],g=r[a+3];if(o===0){t[e+0]=l,t[e+1]=c,t[e+2]=d,t[e+3]=h;return}if(o===1){t[e+0]=u,t[e+1]=m,t[e+2]=b,t[e+3]=g;return}if(h!==g||l!==u||c!==m||d!==b){let Z=1-o;const f=l*u+c*m+d*b+h*g,p=f>=0?1:-1,Y=1-f*f;if(Y>Number.EPSILON){const x=Math.sqrt(Y),M=Math.atan2(x,f*p);Z=Math.sin(Z*M)/x,o=Math.sin(o*M)/x}const y=o*p;if(l=l*Z+u*y,c=c*Z+m*y,d=d*Z+b*y,h=h*Z+g*y,Z===1-o){const x=1/Math.sqrt(l*l+c*c+d*d+h*h);l*=x,c*=x,d*=x,h*=x}}t[e]=l,t[e+1]=c,t[e+2]=d,t[e+3]=h}static multiplyQuaternionsFlat(t,e,n,i,r,a){const o=n[i],l=n[i+1],c=n[i+2],d=n[i+3],h=r[a],u=r[a+1],m=r[a+2],b=r[a+3];return t[e]=o*b+d*h+l*m-c*u,t[e+1]=l*b+d*u+c*h-o*m,t[e+2]=c*b+d*m+o*u-l*h,t[e+3]=d*b-o*h-l*u-c*m,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,e,n,i){return this._x=t,this._y=e,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,e){if(!(t&&t.isEuler))throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");const n=t._x,i=t._y,r=t._z,a=t._order,o=Math.cos,l=Math.sin,c=o(n/2),d=o(i/2),h=o(r/2),u=l(n/2),m=l(i/2),b=l(r/2);switch(a){case"XYZ":this._x=u*d*h+c*m*b,this._y=c*m*h-u*d*b,this._z=c*d*b+u*m*h,this._w=c*d*h-u*m*b;break;case"YXZ":this._x=u*d*h+c*m*b,this._y=c*m*h-u*d*b,this._z=c*d*b-u*m*h,this._w=c*d*h+u*m*b;break;case"ZXY":this._x=u*d*h-c*m*b,this._y=c*m*h+u*d*b,this._z=c*d*b+u*m*h,this._w=c*d*h-u*m*b;break;case"ZYX":this._x=u*d*h-c*m*b,this._y=c*m*h+u*d*b,this._z=c*d*b-u*m*h,this._w=c*d*h+u*m*b;break;case"YZX":this._x=u*d*h+c*m*b,this._y=c*m*h+u*d*b,this._z=c*d*b-u*m*h,this._w=c*d*h-u*m*b;break;case"XZY":this._x=u*d*h-c*m*b,this._y=c*m*h-u*d*b,this._z=c*d*b+u*m*h,this._w=c*d*h+u*m*b;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+a)}return e!==!1&&this._onChangeCallback(),this}setFromAxisAngle(t,e){const n=e/2,i=Math.sin(n);return this._x=t.x*i,this._y=t.y*i,this._z=t.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(t){const e=t.elements,n=e[0],i=e[4],r=e[8],a=e[1],o=e[5],l=e[9],c=e[2],d=e[6],h=e[10],u=n+o+h;if(u>0){const m=.5/Math.sqrt(u+1);this._w=.25/m,this._x=(d-l)*m,this._y=(r-c)*m,this._z=(a-i)*m}else if(n>o&&n>h){const m=2*Math.sqrt(1+n-o-h);this._w=(d-l)/m,this._x=.25*m,this._y=(i+a)/m,this._z=(r+c)/m}else if(o>h){const m=2*Math.sqrt(1+o-n-h);this._w=(r-c)/m,this._x=(i+a)/m,this._y=.25*m,this._z=(l+d)/m}else{const m=2*Math.sqrt(1+h-n-o);this._w=(a-i)/m,this._x=(r+c)/m,this._y=(l+d)/m,this._z=.25*m}return this._onChangeCallback(),this}setFromUnitVectors(t,e){let n=t.dot(e)+1;return n<Number.EPSILON?(n=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=n):(this._x=0,this._y=-t.z,this._z=t.y,this._w=n)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x,this._w=n),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(we(this.dot(t),-1,1)))}rotateTowards(t,e){const n=this.angleTo(t);if(n===0)return this;const i=Math.min(1,e/n);return this.slerp(t,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return t===0?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t,e){return e!==void 0?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(t,e)):this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,e){const n=t._x,i=t._y,r=t._z,a=t._w,o=e._x,l=e._y,c=e._z,d=e._w;return this._x=n*d+a*o+i*c-r*l,this._y=i*d+a*l+r*o-n*c,this._z=r*d+a*c+n*l-i*o,this._w=a*d-n*o-i*l-r*c,this._onChangeCallback(),this}slerp(t,e){if(e===0)return this;if(e===1)return this.copy(t);const n=this._x,i=this._y,r=this._z,a=this._w;let o=a*t._w+n*t._x+i*t._y+r*t._z;if(o<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,o=-o):this.copy(t),o>=1)return this._w=a,this._x=n,this._y=i,this._z=r,this;const l=1-o*o;if(l<=Number.EPSILON){const m=1-e;return this._w=m*a+e*this._w,this._x=m*n+e*this._x,this._y=m*i+e*this._y,this._z=m*r+e*this._z,this.normalize(),this._onChangeCallback(),this}const c=Math.sqrt(l),d=Math.atan2(c,o),h=Math.sin((1-e)*d)/c,u=Math.sin(e*d)/c;return this._w=a*h+this._w*u,this._x=n*h+this._x*u,this._y=i*h+this._y*u,this._z=r*h+this._z*u,this._onChangeCallback(),this}slerpQuaternions(t,e,n){return this.copy(t).slerp(e,n)}random(){const t=Math.random(),e=Math.sqrt(1-t),n=Math.sqrt(t),i=2*Math.PI*Math.random(),r=2*Math.PI*Math.random();return this.set(e*Math.cos(i),n*Math.sin(r),n*Math.cos(r),e*Math.sin(i))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,e=0){return this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t}fromBufferAttribute(t,e){return this._x=t.getX(e),this._y=t.getY(e),this._z=t.getZ(e),this._w=t.getW(e),this}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}}ve.prototype.isQuaternion=!0;class R{constructor(t=0,e=0,n=0){this.x=t,this.y=e,this.z=n}set(t,e,n){return n===void 0&&(n=this.z),this.x=t,this.y=e,this.z=n,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t,e){return e!==void 0?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this)}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this}sub(t,e){return e!==void 0?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this)}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this}multiply(t,e){return e!==void 0?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(t,e)):(this.x*=t.x,this.y*=t.y,this.z*=t.z,this)}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this}applyEuler(t){return t&&t.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(ca.setFromEuler(t))}applyAxisAngle(t,e){return this.applyQuaternion(ca.setFromAxisAngle(t,e))}applyMatrix3(t){const e=this.x,n=this.y,i=this.z,r=t.elements;return this.x=r[0]*e+r[3]*n+r[6]*i,this.y=r[1]*e+r[4]*n+r[7]*i,this.z=r[2]*e+r[5]*n+r[8]*i,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const e=this.x,n=this.y,i=this.z,r=t.elements,a=1/(r[3]*e+r[7]*n+r[11]*i+r[15]);return this.x=(r[0]*e+r[4]*n+r[8]*i+r[12])*a,this.y=(r[1]*e+r[5]*n+r[9]*i+r[13])*a,this.z=(r[2]*e+r[6]*n+r[10]*i+r[14])*a,this}applyQuaternion(t){const e=this.x,n=this.y,i=this.z,r=t.x,a=t.y,o=t.z,l=t.w,c=l*e+a*i-o*n,d=l*n+o*e-r*i,h=l*i+r*n-a*e,u=-r*e-a*n-o*i;return this.x=c*l+u*-r+d*-o-h*-a,this.y=d*l+u*-a+h*-r-c*-o,this.z=h*l+u*-o+c*-a-d*-r,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const e=this.x,n=this.y,i=this.z,r=t.elements;return this.x=r[0]*e+r[4]*n+r[8]*i,this.y=r[1]*e+r[5]*n+r[9]*i,this.z=r[2]*e+r[6]*n+r[10]*i,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this}cross(t,e){return e!==void 0?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(t,e)):this.crossVectors(this,t)}crossVectors(t,e){const n=t.x,i=t.y,r=t.z,a=e.x,o=e.y,l=e.z;return this.x=i*l-r*o,this.y=r*a-n*l,this.z=n*o-i*a,this}projectOnVector(t){const e=t.lengthSq();if(e===0)return this.set(0,0,0);const n=t.dot(this)/e;return this.copy(t).multiplyScalar(n)}projectOnPlane(t){return zs.copy(this).projectOnVector(t),this.sub(zs)}reflect(t){return this.sub(zs.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(e===0)return Math.PI/2;const n=this.dot(t)/e;return Math.acos(we(n,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y,i=this.z-t.z;return e*e+n*n+i*i}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,e,n){const i=Math.sin(e)*t;return this.x=i*Math.sin(n),this.y=Math.cos(e)*t,this.z=i*Math.cos(n),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,e,n){return this.x=t*Math.sin(e),this.y=n,this.z=t*Math.cos(e),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(t){const e=this.setFromMatrixColumn(t,0).length(),n=this.setFromMatrixColumn(t,1).length(),i=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=n,this.z=i,this}setFromMatrixColumn(t,e){return this.fromArray(t.elements,e*4)}setFromMatrix3Column(t,e){return this.fromArray(t.elements,e*3)}setFromEuler(t){return this.x=t._x,this.y=t._y,this.z=t._z,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}fromBufferAttribute(t,e,n){return n!==void 0&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const t=(Math.random()-.5)*2,e=Math.random()*Math.PI*2,n=Math.sqrt(1-t**2);return this.x=n*Math.cos(e),this.y=n*Math.sin(e),this.z=t,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}R.prototype.isVector3=!0;const zs=new R,ca=new ve;class ae{constructor(t=new R(1/0,1/0,1/0),e=new R(-1/0,-1/0,-1/0)){this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromArray(t){let e=1/0,n=1/0,i=1/0,r=-1/0,a=-1/0,o=-1/0;for(let l=0,c=t.length;l<c;l+=3){const d=t[l],h=t[l+1],u=t[l+2];d<e&&(e=d),h<n&&(n=h),u<i&&(i=u),d>r&&(r=d),h>a&&(a=h),u>o&&(o=u)}return this.min.set(e,n,i),this.max.set(r,a,o),this}setFromBufferAttribute(t){let e=1/0,n=1/0,i=1/0,r=-1/0,a=-1/0,o=-1/0;for(let l=0,c=t.count;l<c;l++){const d=t.getX(l),h=t.getY(l),u=t.getZ(l);d<e&&(e=d),h<n&&(n=h),u<i&&(i=u),d>r&&(r=d),h>a&&(a=h),u>o&&(o=u)}return this.min.set(e,n,i),this.max.set(r,a,o),this}setFromPoints(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const n=Vn.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}setFromObject(t,e=!1){return this.makeEmpty(),this.expandByObject(t,e)}clone(){return new this.constructor().copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t,e=!1){t.updateWorldMatrix(!1,!1);const n=t.geometry;if(n!==void 0)if(e&&n.attributes!=null&&n.attributes.position!==void 0){const r=n.attributes.position;for(let a=0,o=r.count;a<o;a++)Vn.fromBufferAttribute(r,a).applyMatrix4(t.matrixWorld),this.expandByPoint(Vn)}else n.boundingBox===null&&n.computeBoundingBox(),Es.copy(n.boundingBox),Es.applyMatrix4(t.matrixWorld),this.union(Es);const i=t.children;for(let r=0,a=i.length;r<a;r++)this.expandByObject(i[r],e);return this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)}intersectsSphere(t){return this.clampPoint(t.center,Vn),Vn.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let e,n;return t.normal.x>0?(e=t.normal.x*this.min.x,n=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,n=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,n+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,n+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,n+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,n+=t.normal.z*this.min.z),e<=-t.constant&&n>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(ui),Ei.subVectors(this.max,ui),Bn.subVectors(t.a,ui),Cn.subVectors(t.b,ui),An.subVectors(t.c,ui),rn.subVectors(Cn,Bn),an.subVectors(An,Cn),vn.subVectors(Bn,An);let e=[0,-rn.z,rn.y,0,-an.z,an.y,0,-vn.z,vn.y,rn.z,0,-rn.x,an.z,0,-an.x,vn.z,0,-vn.x,-rn.y,rn.x,0,-an.y,an.x,0,-vn.y,vn.x,0];return!Hs(e,Bn,Cn,An,Ei)||(e=[1,0,0,0,1,0,0,0,1],!Hs(e,Bn,Cn,An,Ei))?!1:(Hi.crossVectors(rn,an),e=[Hi.x,Hi.y,Hi.z],Hs(e,Bn,Cn,An,Ei))}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return Vn.copy(t).clamp(this.min,this.max).sub(t).length()}getBoundingSphere(t){return this.getCenter(t.center),t.radius=this.getSize(Vn).length()*.5,t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()?this:(Ke[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),Ke[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),Ke[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),Ke[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),Ke[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),Ke[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),Ke[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),Ke[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(Ke),this)}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}ae.prototype.isBox3=!0;const Ke=[new R,new R,new R,new R,new R,new R,new R,new R],Vn=new R,Es=new ae,Bn=new R,Cn=new R,An=new R,rn=new R,an=new R,vn=new R,ui=new R,Ei=new R,Hi=new R,Rn=new R;function Hs(s,t,e,n,i){for(let r=0,a=s.length-3;r<=a;r+=3){Rn.fromArray(s,r);const o=i.x*Math.abs(Rn.x)+i.y*Math.abs(Rn.y)+i.z*Math.abs(Rn.z),l=t.dot(Rn),c=e.dot(Rn),d=n.dot(Rn);if(Math.max(-Math.max(l,c,d),Math.min(l,c,d))>o)return!1}return!0}const Sl=new ae,da=new R,Ui=new R,Us=new R;class Re{constructor(t=new R,e=-1){this.center=t,this.radius=e}set(t,e){return this.center.copy(t),this.radius=e,this}setFromPoints(t,e){const n=this.center;e!==void 0?n.copy(e):Sl.setFromPoints(t).getCenter(n);let i=0;for(let r=0,a=t.length;r<a;r++)i=Math.max(i,n.distanceToSquared(t[r]));return this.radius=Math.sqrt(i),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,e){const n=this.center.distanceToSquared(t);return e.copy(t),n>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e}getBoundingBox(t){return this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){Us.subVectors(t,this.center);const e=Us.lengthSq();if(e>this.radius*this.radius){const n=Math.sqrt(e),i=(n-this.radius)*.5;this.center.add(Us.multiplyScalar(i/n)),this.radius+=i}return this}union(t){return this.center.equals(t.center)===!0?Ui.set(0,0,1).multiplyScalar(t.radius):Ui.subVectors(t.center,this.center).normalize().multiplyScalar(t.radius),this.expandByPoint(da.copy(t.center).add(Ui)),this.expandByPoint(da.copy(t.center).sub(Ui)),this}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return new this.constructor().copy(this)}}const qe=new R,ks=new R,ki=new R,on=new R,Ps=new R,Pi=new R,Ls=new R;class _n{constructor(t=new R,e=new R(0,0,-1)){this.origin=t,this.direction=e}set(t,e){return this.origin.copy(t),this.direction.copy(e),this}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,e){return e.copy(this.direction).multiplyScalar(t).add(this.origin)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,qe)),this}closestPointToPoint(t,e){e.subVectors(t,this.origin);const n=e.dot(this.direction);return n<0?e.copy(this.origin):e.copy(this.direction).multiplyScalar(n).add(this.origin)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const e=qe.subVectors(t,this.origin).dot(this.direction);return e<0?this.origin.distanceToSquared(t):(qe.copy(this.direction).multiplyScalar(e).add(this.origin),qe.distanceToSquared(t))}distanceSqToSegment(t,e,n,i){ks.copy(t).add(e).multiplyScalar(.5),ki.copy(e).sub(t).normalize(),on.copy(this.origin).sub(ks);const r=t.distanceTo(e)*.5,a=-this.direction.dot(ki),o=on.dot(this.direction),l=-on.dot(ki),c=on.lengthSq(),d=Math.abs(1-a*a);let h,u,m,b;if(d>0)if(h=a*l-o,u=a*o-l,b=r*d,h>=0)if(u>=-b)if(u<=b){const g=1/d;h*=g,u*=g,m=h*(h+a*u+2*o)+u*(a*h+u+2*l)+c}else u=r,h=Math.max(0,-(a*u+o)),m=-h*h+u*(u+2*l)+c;else u=-r,h=Math.max(0,-(a*u+o)),m=-h*h+u*(u+2*l)+c;else u<=-b?(h=Math.max(0,-(-a*r+o)),u=h>0?-r:Math.min(Math.max(-r,-l),r),m=-h*h+u*(u+2*l)+c):u<=b?(h=0,u=Math.min(Math.max(-r,-l),r),m=u*(u+2*l)+c):(h=Math.max(0,-(a*r+o)),u=h>0?r:Math.min(Math.max(-r,-l),r),m=-h*h+u*(u+2*l)+c);else u=a>0?-r:r,h=Math.max(0,-(a*u+o)),m=-h*h+u*(u+2*l)+c;return n&&n.copy(this.direction).multiplyScalar(h).add(this.origin),i&&i.copy(ki).multiplyScalar(u).add(ks),m}intersectSphere(t,e){qe.subVectors(t.center,this.origin);const n=qe.dot(this.direction),i=qe.dot(qe)-n*n,r=t.radius*t.radius;if(i>r)return null;const a=Math.sqrt(r-i),o=n-a,l=n+a;return o<0&&l<0?null:o<0?this.at(l,e):this.at(o,e)}intersectsSphere(t){return this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const e=t.normal.dot(this.direction);if(e===0)return t.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(t.normal)+t.constant)/e;return n>=0?n:null}intersectPlane(t,e){const n=this.distanceToPlane(t);return n===null?null:this.at(n,e)}intersectsPlane(t){const e=t.distanceToPoint(this.origin);return e===0||t.normal.dot(this.direction)*e<0}intersectBox(t,e){let n,i,r,a,o,l;const c=1/this.direction.x,d=1/this.direction.y,h=1/this.direction.z,u=this.origin;return c>=0?(n=(t.min.x-u.x)*c,i=(t.max.x-u.x)*c):(n=(t.max.x-u.x)*c,i=(t.min.x-u.x)*c),d>=0?(r=(t.min.y-u.y)*d,a=(t.max.y-u.y)*d):(r=(t.max.y-u.y)*d,a=(t.min.y-u.y)*d),n>a||r>i||((r>n||n!==n)&&(n=r),(a<i||i!==i)&&(i=a),h>=0?(o=(t.min.z-u.z)*h,l=(t.max.z-u.z)*h):(o=(t.max.z-u.z)*h,l=(t.min.z-u.z)*h),n>l||o>i)||((o>n||n!==n)&&(n=o),(l<i||i!==i)&&(i=l),i<0)?null:this.at(n>=0?n:i,e)}intersectsBox(t){return this.intersectBox(t,qe)!==null}intersectTriangle(t,e,n,i,r){Ps.subVectors(e,t),Pi.subVectors(n,t),Ls.crossVectors(Ps,Pi);let a=this.direction.dot(Ls),o;if(a>0){if(i)return null;o=1}else if(a<0)o=-1,a=-a;else return null;on.subVectors(this.origin,t);const l=o*this.direction.dot(Pi.crossVectors(on,Pi));if(l<0)return null;const c=o*this.direction.dot(Ps.cross(on));if(c<0||l+c>a)return null;const d=-o*on.dot(Ls);return d<0?null:this.at(d/a,r)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class ft{constructor(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}set(t,e,n,i,r,a,o,l,c,d,h,u,m,b,g,Z){const f=this.elements;return f[0]=t,f[4]=e,f[8]=n,f[12]=i,f[1]=r,f[5]=a,f[9]=o,f[13]=l,f[2]=c,f[6]=d,f[10]=h,f[14]=u,f[3]=m,f[7]=b,f[11]=g,f[15]=Z,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new ft().fromArray(this.elements)}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],e[9]=n[9],e[10]=n[10],e[11]=n[11],e[12]=n[12],e[13]=n[13],e[14]=n[14],e[15]=n[15],this}copyPosition(t){const e=this.elements,n=t.elements;return e[12]=n[12],e[13]=n[13],e[14]=n[14],this}setFromMatrix3(t){const e=t.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(t,e,n){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(t,e,n){return this.set(t.x,e.x,n.x,0,t.y,e.y,n.y,0,t.z,e.z,n.z,0,0,0,0,1),this}extractRotation(t){const e=this.elements,n=t.elements,i=1/Jn.setFromMatrixColumn(t,0).length(),r=1/Jn.setFromMatrixColumn(t,1).length(),a=1/Jn.setFromMatrixColumn(t,2).length();return e[0]=n[0]*i,e[1]=n[1]*i,e[2]=n[2]*i,e[3]=0,e[4]=n[4]*r,e[5]=n[5]*r,e[6]=n[6]*r,e[7]=0,e[8]=n[8]*a,e[9]=n[9]*a,e[10]=n[10]*a,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromEuler(t){t&&t.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");const e=this.elements,n=t.x,i=t.y,r=t.z,a=Math.cos(n),o=Math.sin(n),l=Math.cos(i),c=Math.sin(i),d=Math.cos(r),h=Math.sin(r);if(t.order==="XYZ"){const u=a*d,m=a*h,b=o*d,g=o*h;e[0]=l*d,e[4]=-l*h,e[8]=c,e[1]=m+b*c,e[5]=u-g*c,e[9]=-o*l,e[2]=g-u*c,e[6]=b+m*c,e[10]=a*l}else if(t.order==="YXZ"){const u=l*d,m=l*h,b=c*d,g=c*h;e[0]=u+g*o,e[4]=b*o-m,e[8]=a*c,e[1]=a*h,e[5]=a*d,e[9]=-o,e[2]=m*o-b,e[6]=g+u*o,e[10]=a*l}else if(t.order==="ZXY"){const u=l*d,m=l*h,b=c*d,g=c*h;e[0]=u-g*o,e[4]=-a*h,e[8]=b+m*o,e[1]=m+b*o,e[5]=a*d,e[9]=g-u*o,e[2]=-a*c,e[6]=o,e[10]=a*l}else if(t.order==="ZYX"){const u=a*d,m=a*h,b=o*d,g=o*h;e[0]=l*d,e[4]=b*c-m,e[8]=u*c+g,e[1]=l*h,e[5]=g*c+u,e[9]=m*c-b,e[2]=-c,e[6]=o*l,e[10]=a*l}else if(t.order==="YZX"){const u=a*l,m=a*c,b=o*l,g=o*c;e[0]=l*d,e[4]=g-u*h,e[8]=b*h+m,e[1]=h,e[5]=a*d,e[9]=-o*d,e[2]=-c*d,e[6]=m*h+b,e[10]=u-g*h}else if(t.order==="XZY"){const u=a*l,m=a*c,b=o*l,g=o*c;e[0]=l*d,e[4]=-h,e[8]=c*d,e[1]=u*h+g,e[5]=a*d,e[9]=m*h-b,e[2]=b*h-m,e[6]=o*d,e[10]=g*h+u}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(t){return this.compose(Il,t,Bl)}lookAt(t,e,n){const i=this.elements;return Me.subVectors(t,e),Me.lengthSq()===0&&(Me.z=1),Me.normalize(),ln.crossVectors(n,Me),ln.lengthSq()===0&&(Math.abs(n.z)===1?Me.x+=1e-4:Me.z+=1e-4,Me.normalize(),ln.crossVectors(n,Me)),ln.normalize(),Li.crossVectors(Me,ln),i[0]=ln.x,i[4]=Li.x,i[8]=Me.x,i[1]=ln.y,i[5]=Li.y,i[9]=Me.y,i[2]=ln.z,i[6]=Li.z,i[10]=Me.z,this}multiply(t,e){return e!==void 0?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(t,e)):this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,i=e.elements,r=this.elements,a=n[0],o=n[4],l=n[8],c=n[12],d=n[1],h=n[5],u=n[9],m=n[13],b=n[2],g=n[6],Z=n[10],f=n[14],p=n[3],Y=n[7],y=n[11],x=n[15],M=i[0],N=i[4],Q=i[8],rt=i[12],E=i[1],G=i[5],w=i[9],I=i[13],C=i[2],T=i[6],A=i[10],z=i[14],S=i[3],P=i[7],$=i[11],K=i[15];return r[0]=a*M+o*E+l*C+c*S,r[4]=a*N+o*G+l*T+c*P,r[8]=a*Q+o*w+l*A+c*$,r[12]=a*rt+o*I+l*z+c*K,r[1]=d*M+h*E+u*C+m*S,r[5]=d*N+h*G+u*T+m*P,r[9]=d*Q+h*w+u*A+m*$,r[13]=d*rt+h*I+u*z+m*K,r[2]=b*M+g*E+Z*C+f*S,r[6]=b*N+g*G+Z*T+f*P,r[10]=b*Q+g*w+Z*A+f*$,r[14]=b*rt+g*I+Z*z+f*K,r[3]=p*M+Y*E+y*C+x*S,r[7]=p*N+Y*G+y*T+x*P,r[11]=p*Q+Y*w+y*A+x*$,r[15]=p*rt+Y*I+y*z+x*K,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[4],i=t[8],r=t[12],a=t[1],o=t[5],l=t[9],c=t[13],d=t[2],h=t[6],u=t[10],m=t[14],b=t[3],g=t[7],Z=t[11],f=t[15];return b*(+r*l*h-i*c*h-r*o*u+n*c*u+i*o*m-n*l*m)+g*(+e*l*m-e*c*u+r*a*u-i*a*m+i*c*d-r*l*d)+Z*(+e*c*h-e*o*m-r*a*h+n*a*m+r*o*d-n*c*d)+f*(-i*o*d-e*l*h+e*o*u+i*a*h-n*a*u+n*l*d)}transpose(){const t=this.elements;let e;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(t,e,n){const i=this.elements;return t.isVector3?(i[12]=t.x,i[13]=t.y,i[14]=t.z):(i[12]=t,i[13]=e,i[14]=n),this}invert(){const t=this.elements,e=t[0],n=t[1],i=t[2],r=t[3],a=t[4],o=t[5],l=t[6],c=t[7],d=t[8],h=t[9],u=t[10],m=t[11],b=t[12],g=t[13],Z=t[14],f=t[15],p=h*Z*c-g*u*c+g*l*m-o*Z*m-h*l*f+o*u*f,Y=b*u*c-d*Z*c-b*l*m+a*Z*m+d*l*f-a*u*f,y=d*g*c-b*h*c+b*o*m-a*g*m-d*o*f+a*h*f,x=b*h*l-d*g*l-b*o*u+a*g*u+d*o*Z-a*h*Z,M=e*p+n*Y+i*y+r*x;if(M===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const N=1/M;return t[0]=p*N,t[1]=(g*u*r-h*Z*r-g*i*m+n*Z*m+h*i*f-n*u*f)*N,t[2]=(o*Z*r-g*l*r+g*i*c-n*Z*c-o*i*f+n*l*f)*N,t[3]=(h*l*r-o*u*r-h*i*c+n*u*c+o*i*m-n*l*m)*N,t[4]=Y*N,t[5]=(d*Z*r-b*u*r+b*i*m-e*Z*m-d*i*f+e*u*f)*N,t[6]=(b*l*r-a*Z*r-b*i*c+e*Z*c+a*i*f-e*l*f)*N,t[7]=(a*u*r-d*l*r+d*i*c-e*u*c-a*i*m+e*l*m)*N,t[8]=y*N,t[9]=(b*h*r-d*g*r-b*n*m+e*g*m+d*n*f-e*h*f)*N,t[10]=(a*g*r-b*o*r+b*n*c-e*g*c-a*n*f+e*o*f)*N,t[11]=(d*o*r-a*h*r-d*n*c+e*h*c+a*n*m-e*o*m)*N,t[12]=x*N,t[13]=(d*g*i-b*h*i+b*n*u-e*g*u-d*n*Z+e*h*Z)*N,t[14]=(b*o*i-a*g*i-b*n*l+e*g*l+a*n*Z-e*o*Z)*N,t[15]=(a*h*i-d*o*i+d*n*l-e*h*l-a*n*u+e*o*u)*N,this}scale(t){const e=this.elements,n=t.x,i=t.y,r=t.z;return e[0]*=n,e[4]*=i,e[8]*=r,e[1]*=n,e[5]*=i,e[9]*=r,e[2]*=n,e[6]*=i,e[10]*=r,e[3]*=n,e[7]*=i,e[11]*=r,this}getMaxScaleOnAxis(){const t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],n=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],i=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,n,i))}makeTranslation(t,e,n){return this.set(1,0,0,t,0,1,0,e,0,0,1,n,0,0,0,1),this}makeRotationX(t){const e=Math.cos(t),n=Math.sin(t);return this.set(1,0,0,0,0,e,-n,0,0,n,e,0,0,0,0,1),this}makeRotationY(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,0,n,0,0,1,0,0,-n,0,e,0,0,0,0,1),this}makeRotationZ(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,0,n,e,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,e){const n=Math.cos(e),i=Math.sin(e),r=1-n,a=t.x,o=t.y,l=t.z,c=r*a,d=r*o;return this.set(c*a+n,c*o-i*l,c*l+i*o,0,c*o+i*l,d*o+n,d*l-i*a,0,c*l-i*o,d*l+i*a,r*l*l+n,0,0,0,0,1),this}makeScale(t,e,n){return this.set(t,0,0,0,0,e,0,0,0,0,n,0,0,0,0,1),this}makeShear(t,e,n,i,r,a){return this.set(1,n,r,0,t,1,a,0,e,i,1,0,0,0,0,1),this}compose(t,e,n){const i=this.elements,r=e._x,a=e._y,o=e._z,l=e._w,c=r+r,d=a+a,h=o+o,u=r*c,m=r*d,b=r*h,g=a*d,Z=a*h,f=o*h,p=l*c,Y=l*d,y=l*h,x=n.x,M=n.y,N=n.z;return i[0]=(1-(g+f))*x,i[1]=(m+y)*x,i[2]=(b-Y)*x,i[3]=0,i[4]=(m-y)*M,i[5]=(1-(u+f))*M,i[6]=(Z+p)*M,i[7]=0,i[8]=(b+Y)*N,i[9]=(Z-p)*N,i[10]=(1-(u+g))*N,i[11]=0,i[12]=t.x,i[13]=t.y,i[14]=t.z,i[15]=1,this}decompose(t,e,n){const i=this.elements;let r=Jn.set(i[0],i[1],i[2]).length();const a=Jn.set(i[4],i[5],i[6]).length(),o=Jn.set(i[8],i[9],i[10]).length();this.determinant()<0&&(r=-r),t.x=i[12],t.y=i[13],t.z=i[14],Ce.copy(this);const c=1/r,d=1/a,h=1/o;return Ce.elements[0]*=c,Ce.elements[1]*=c,Ce.elements[2]*=c,Ce.elements[4]*=d,Ce.elements[5]*=d,Ce.elements[6]*=d,Ce.elements[8]*=h,Ce.elements[9]*=h,Ce.elements[10]*=h,e.setFromRotationMatrix(Ce),n.x=r,n.y=a,n.z=o,this}makePerspective(t,e,n,i,r,a){a===void 0&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");const o=this.elements,l=2*r/(e-t),c=2*r/(n-i),d=(e+t)/(e-t),h=(n+i)/(n-i),u=-(a+r)/(a-r),m=-2*a*r/(a-r);return o[0]=l,o[4]=0,o[8]=d,o[12]=0,o[1]=0,o[5]=c,o[9]=h,o[13]=0,o[2]=0,o[6]=0,o[10]=u,o[14]=m,o[3]=0,o[7]=0,o[11]=-1,o[15]=0,this}makeOrthographic(t,e,n,i,r,a){const o=this.elements,l=1/(e-t),c=1/(n-i),d=1/(a-r),h=(e+t)*l,u=(n+i)*c,m=(a+r)*d;return o[0]=2*l,o[4]=0,o[8]=0,o[12]=-h,o[1]=0,o[5]=2*c,o[9]=0,o[13]=-u,o[2]=0,o[6]=0,o[10]=-2*d,o[14]=-m,o[3]=0,o[7]=0,o[11]=0,o[15]=1,this}equals(t){const e=this.elements,n=t.elements;for(let i=0;i<16;i++)if(e[i]!==n[i])return!1;return!0}fromArray(t,e=0){for(let n=0;n<16;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t[e+9]=n[9],t[e+10]=n[10],t[e+11]=n[11],t[e+12]=n[12],t[e+13]=n[13],t[e+14]=n[14],t[e+15]=n[15],t}}ft.prototype.isMatrix4=!0;const Jn=new R,Ce=new ft,Il=new R(0,0,0),Bl=new R(1,1,1),ln=new R,Li=new R,Me=new R,ha=new ft,ua=new ve;class Yn{constructor(t=0,e=0,n=0,i=Yn.DefaultOrder){this._x=t,this._y=e,this._z=n,this._order=i}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,e,n,i=this._order){return this._x=t,this._y=e,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,e=this._order,n=!0){const i=t.elements,r=i[0],a=i[4],o=i[8],l=i[1],c=i[5],d=i[9],h=i[2],u=i[6],m=i[10];switch(e){case"XYZ":this._y=Math.asin(we(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-d,m),this._z=Math.atan2(-a,r)):(this._x=Math.atan2(u,c),this._z=0);break;case"YXZ":this._x=Math.asin(-we(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(o,m),this._z=Math.atan2(l,c)):(this._y=Math.atan2(-h,r),this._z=0);break;case"ZXY":this._x=Math.asin(we(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(-h,m),this._z=Math.atan2(-a,c)):(this._y=0,this._z=Math.atan2(l,r));break;case"ZYX":this._y=Math.asin(-we(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(u,m),this._z=Math.atan2(l,r)):(this._x=0,this._z=Math.atan2(-a,c));break;case"YZX":this._z=Math.asin(we(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-d,c),this._y=Math.atan2(-h,r)):(this._x=0,this._y=Math.atan2(o,m));break;case"XZY":this._z=Math.asin(-we(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(u,c),this._y=Math.atan2(o,r)):(this._x=Math.atan2(-d,m),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+e)}return this._order=e,n===!0&&this._onChangeCallback(),this}setFromQuaternion(t,e,n){return ha.makeRotationFromQuaternion(t),this.setFromRotationMatrix(ha,e,n)}setFromVector3(t,e=this._order){return this.set(t.x,t.y,t.z,e)}reorder(t){return ua.setFromEuler(this),this.setFromQuaternion(ua,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],t[3]!==void 0&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}}Yn.prototype.isEuler=!0,Yn.DefaultOrder="XYZ",Yn.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class ma{constructor(){this.mask=1}set(t){this.mask=(1<<t|0)>>>0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return(this.mask&t.mask)!==0}isEnabled(t){return(this.mask&(1<<t|0))!==0}}let Cl=0;const pa=new R,Tn=new ve,$e=new ft,Qi=new R,mi=new R,Al=new R,_l=new ve,fa=new R(1,0,0),ba=new R(0,1,0),ga=new R(0,0,1),Jl={type:"added"},Za={type:"removed"};class Ht extends Oe{constructor(){super();Object.defineProperty(this,"id",{value:Cl++}),this.uuid=Te(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Ht.DefaultUp.clone();const t=new R,e=new Yn,n=new ve,i=new R(1,1,1);function r(){n.setFromEuler(e,!1)}function a(){e.setFromQuaternion(n,void 0,!1)}e._onChange(r),n._onChange(a),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new ft},normalMatrix:{value:new fe}}),this.matrix=new ft,this.matrixWorld=new ft,this.matrixAutoUpdate=Ht.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new ma,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(t){return this.quaternion.premultiply(t),this}setRotationFromAxisAngle(t,e){this.quaternion.setFromAxisAngle(t,e)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(t){this.quaternion.copy(t)}rotateOnAxis(t,e){return Tn.setFromAxisAngle(t,e),this.quaternion.multiply(Tn),this}rotateOnWorldAxis(t,e){return Tn.setFromAxisAngle(t,e),this.quaternion.premultiply(Tn),this}rotateX(t){return this.rotateOnAxis(fa,t)}rotateY(t){return this.rotateOnAxis(ba,t)}rotateZ(t){return this.rotateOnAxis(ga,t)}translateOnAxis(t,e){return pa.copy(t).applyQuaternion(this.quaternion),this.position.add(pa.multiplyScalar(e)),this}translateX(t){return this.translateOnAxis(fa,t)}translateY(t){return this.translateOnAxis(ba,t)}translateZ(t){return this.translateOnAxis(ga,t)}localToWorld(t){return t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return t.applyMatrix4($e.copy(this.matrixWorld).invert())}lookAt(t,e,n){t.isVector3?Qi.copy(t):Qi.set(t,e,n);const i=this.parent;this.updateWorldMatrix(!0,!1),mi.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?$e.lookAt(mi,Qi,this.up):$e.lookAt(Qi,mi,this.up),this.quaternion.setFromRotationMatrix($e),i&&($e.extractRotation(i.matrixWorld),Tn.setFromRotationMatrix($e),this.quaternion.premultiply(Tn.invert()))}add(t){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(t.parent!==null&&t.parent.remove(t),t.parent=this,this.children.push(t),t.dispatchEvent(Jl)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)}remove(t){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const e=this.children.indexOf(t);return e!==-1&&(t.parent=null,this.children.splice(e,1),t.dispatchEvent(Za)),this}removeFromParent(){const t=this.parent;return t!==null&&t.remove(this),this}clear(){for(let t=0;t<this.children.length;t++){const e=this.children[t];e.parent=null,e.dispatchEvent(Za)}return this.children.length=0,this}attach(t){return this.updateWorldMatrix(!0,!1),$e.copy(this.matrixWorld).invert(),t.parent!==null&&(t.parent.updateWorldMatrix(!0,!1),$e.multiply(t.parent.matrixWorld)),t.applyMatrix4($e),this.add(t),t.updateWorldMatrix(!1,!0),this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,e){if(this[t]===e)return this;for(let n=0,i=this.children.length;n<i;n++){const a=this.children[n].getObjectByProperty(t,e);if(a!==void 0)return a}}getWorldPosition(t){return this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(mi,t,Al),t}getWorldScale(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(mi,_l,t),t}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()}raycast(){}traverse(t){t(this);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].traverse(t)}traverseVisible(t){if(this.visible===!1)return;t(this);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].traverseVisible(t)}traverseAncestors(t){const e=this.parent;e!==null&&(t(e),e.traverseAncestors(t))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].updateMatrixWorld(t)}updateWorldMatrix(t,e){const n=this.parent;if(t===!0&&n!==null&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),e===!0){const i=this.children;for(let r=0,a=i.length;r<a;r++)i[r].updateWorldMatrix(!1,!0)}}toJSON(t){const e=t===void 0||typeof t=="string",n={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),JSON.stringify(this.userData)!=="{}"&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(i.instanceColor=this.instanceColor.toJSON()));function r(o,l){return o[l.uuid]===void 0&&(o[l.uuid]=l.toJSON(t)),l.uuid}if(this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(t).uuid)),this.environment&&this.environment.isTexture&&(i.environment=this.environment.toJSON(t).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=r(t.geometries,this.geometry);const o=this.geometry.parameters;if(o!==void 0&&o.shapes!==void 0){const l=o.shapes;if(Array.isArray(l))for(let c=0,d=l.length;c<d;c++){const h=l[c];r(t.shapes,h)}else r(t.shapes,l)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(r(t.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const o=[];for(let l=0,c=this.material.length;l<c;l++)o.push(r(t.materials,this.material[l]));i.material=o}else i.material=r(t.materials,this.material);if(this.children.length>0){i.children=[];for(let o=0;o<this.children.length;o++)i.children.push(this.children[o].toJSON(t).object)}if(this.animations.length>0){i.animations=[];for(let o=0;o<this.animations.length;o++){const l=this.animations[o];i.animations.push(r(t.animations,l))}}if(e){const o=a(t.geometries),l=a(t.materials),c=a(t.textures),d=a(t.images),h=a(t.shapes),u=a(t.skeletons),m=a(t.animations),b=a(t.nodes);o.length>0&&(n.geometries=o),l.length>0&&(n.materials=l),c.length>0&&(n.textures=c),d.length>0&&(n.images=d),h.length>0&&(n.shapes=h),u.length>0&&(n.skeletons=u),m.length>0&&(n.animations=m),b.length>0&&(n.nodes=b)}return n.object=i,n;function a(o){const l=[];for(const c in o){const d=o[c];delete d.metadata,l.push(d)}return l}}clone(t){return new this.constructor().copy(this,t)}copy(t,e=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.userData=JSON.parse(JSON.stringify(t.userData)),e===!0)for(let n=0;n<t.children.length;n++){const i=t.children[n];this.add(i.clone())}return this}}Ht.DefaultUp=new R(0,1,0),Ht.DefaultMatrixAutoUpdate=!0,Ht.prototype.isObject3D=!0;const Ae=new R,tn=new R,Qs=new R,en=new R,Dn=new R,zn=new R,Ga=new R,js=new R,Os=new R,Ks=new R;class oe{constructor(t=new R,e=new R,n=new R){this.a=t,this.b=e,this.c=n}static getNormal(t,e,n,i){i.subVectors(n,e),Ae.subVectors(t,e),i.cross(Ae);const r=i.lengthSq();return r>0?i.multiplyScalar(1/Math.sqrt(r)):i.set(0,0,0)}static getBarycoord(t,e,n,i,r){Ae.subVectors(i,e),tn.subVectors(n,e),Qs.subVectors(t,e);const a=Ae.dot(Ae),o=Ae.dot(tn),l=Ae.dot(Qs),c=tn.dot(tn),d=tn.dot(Qs),h=a*c-o*o;if(h===0)return r.set(-2,-1,-1);const u=1/h,m=(c*l-o*d)*u,b=(a*d-o*l)*u;return r.set(1-m-b,b,m)}static containsPoint(t,e,n,i){return this.getBarycoord(t,e,n,i,en),en.x>=0&&en.y>=0&&en.x+en.y<=1}static getUV(t,e,n,i,r,a,o,l){return this.getBarycoord(t,e,n,i,en),l.set(0,0),l.addScaledVector(r,en.x),l.addScaledVector(a,en.y),l.addScaledVector(o,en.z),l}static isFrontFacing(t,e,n,i){return Ae.subVectors(n,e),tn.subVectors(t,e),Ae.cross(tn).dot(i)<0}set(t,e,n){return this.a.copy(t),this.b.copy(e),this.c.copy(n),this}setFromPointsAndIndices(t,e,n,i){return this.a.copy(t[e]),this.b.copy(t[n]),this.c.copy(t[i]),this}setFromAttributeAndIndices(t,e,n,i){return this.a.fromBufferAttribute(t,e),this.b.fromBufferAttribute(t,n),this.c.fromBufferAttribute(t,i),this}clone(){return new this.constructor().copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return Ae.subVectors(this.c,this.b),tn.subVectors(this.a,this.b),Ae.cross(tn).length()*.5}getMidpoint(t){return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return oe.getNormal(this.a,this.b,this.c,t)}getPlane(t){return t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,e){return oe.getBarycoord(t,this.a,this.b,this.c,e)}getUV(t,e,n,i,r){return oe.getUV(t,this.a,this.b,this.c,e,n,i,r)}containsPoint(t){return oe.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return oe.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,e){const n=this.a,i=this.b,r=this.c;let a,o;Dn.subVectors(i,n),zn.subVectors(r,n),js.subVectors(t,n);const l=Dn.dot(js),c=zn.dot(js);if(l<=0&&c<=0)return e.copy(n);Os.subVectors(t,i);const d=Dn.dot(Os),h=zn.dot(Os);if(d>=0&&h<=d)return e.copy(i);const u=l*h-d*c;if(u<=0&&l>=0&&d<=0)return a=l/(l-d),e.copy(n).addScaledVector(Dn,a);Ks.subVectors(t,r);const m=Dn.dot(Ks),b=zn.dot(Ks);if(b>=0&&m<=b)return e.copy(r);const g=m*c-l*b;if(g<=0&&c>=0&&b<=0)return o=c/(c-b),e.copy(n).addScaledVector(zn,o);const Z=d*b-m*h;if(Z<=0&&h-d>=0&&m-b>=0)return Ga.subVectors(r,i),o=(h-d)/(h-d+(m-b)),e.copy(i).addScaledVector(Ga,o);const f=1/(Z+g+u);return a=g*f,o=u*f,e.copy(n).addScaledVector(Dn,a).addScaledVector(zn,o)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}let Tl=0;class ce extends Oe{constructor(){super();Object.defineProperty(this,"id",{value:Tl++}),this.uuid=Te(),this.name="",this.type="Material",this.fog=!0,this.blending=1,this.side=0,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=204,this.blendDst=205,this.blendEquation=100,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=3,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=519,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=7680,this.stencilZFail=7680,this.stencilZPass=7680,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(t){this._alphaTest>0!=t>0&&this.version++,this._alphaTest=t}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(t){if(t!==void 0)for(const e in t){const n=t[e];if(n===void 0){console.warn("THREE.Material: '"+e+"' parameter is undefined.");continue}if(e==="shading"){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=n===1;continue}const i=this[e];if(i===void 0){console.warn("THREE."+this.type+": '"+e+"' is not a property of this material.");continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[e]=n}}toJSON(t){const e=t===void 0||typeof t=="string";e&&(t={textures:{},images:{}});const n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(t).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(t).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(t).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(t).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(t).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(t).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(t).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(t).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(t).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(t).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(t).uuid),this.attenuationDistance!==void 0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==1&&(n.blending=this.blending),this.side!==0&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.colorWrite=this.colorWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaToCoverage===!0&&(n.alphaToCoverage=this.alphaToCoverage),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=this.premultipliedAlpha),this.wireframe===!0&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=this.flatShading),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),JSON.stringify(this.userData)!=="{}"&&(n.userData=this.userData);function i(r){const a=[];for(const o in r){const l=r[o];delete l.metadata,a.push(l)}return a}if(e){const r=i(t.textures),a=i(t.images);r.length>0&&(n.textures=r),a.length>0&&(n.images=a)}return n}clone(){return new this.constructor().copy(this)}copy(t){this.name=t.name,this.fog=t.fog,this.blending=t.blending,this.side=t.side,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;const e=t.clippingPlanes;let n=null;if(e!==null){const i=e.length;n=new Array(i);for(let r=0;r!==i;++r)n[r]=e[r].clone()}return this.clippingPlanes=n,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.alphaToCoverage=t.alphaToCoverage,this.premultipliedAlpha=t.premultipliedAlpha,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(t){t===!0&&this.version++}}ce.prototype.isMaterial=!0,ce.fromType=function(){return null};class ji extends ce{constructor(t){super();this.type="MeshBasicMaterial",this.color=new D(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this}}ji.prototype.isMeshBasicMaterial=!0;const $t=new R,Oi=new q;class _t{constructor(t,e,n){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=t,this.itemSize=e,this.count=t!==void 0?t.length/e:0,this.normalized=n===!0,this.usage=35044,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(t){t===!0&&this.version++}setUsage(t){return this.usage=t,this}copy(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this}copyAt(t,e,n){t*=this.itemSize,n*=e.itemSize;for(let i=0,r=this.itemSize;i<r;i++)this.array[t+i]=e.array[n+i];return this}copyArray(t){return this.array.set(t),this}copyColorsArray(t){const e=this.array;let n=0;for(let i=0,r=t.length;i<r;i++){let a=t[i];a===void 0&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",i),a=new D),e[n++]=a.r,e[n++]=a.g,e[n++]=a.b}return this}copyVector2sArray(t){const e=this.array;let n=0;for(let i=0,r=t.length;i<r;i++){let a=t[i];a===void 0&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",i),a=new q),e[n++]=a.x,e[n++]=a.y}return this}copyVector3sArray(t){const e=this.array;let n=0;for(let i=0,r=t.length;i<r;i++){let a=t[i];a===void 0&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",i),a=new R),e[n++]=a.x,e[n++]=a.y,e[n++]=a.z}return this}copyVector4sArray(t){const e=this.array;let n=0;for(let i=0,r=t.length;i<r;i++){let a=t[i];a===void 0&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",i),a=new Mt),e[n++]=a.x,e[n++]=a.y,e[n++]=a.z,e[n++]=a.w}return this}applyMatrix3(t){if(this.itemSize===2)for(let e=0,n=this.count;e<n;e++)Oi.fromBufferAttribute(this,e),Oi.applyMatrix3(t),this.setXY(e,Oi.x,Oi.y);else if(this.itemSize===3)for(let e=0,n=this.count;e<n;e++)$t.fromBufferAttribute(this,e),$t.applyMatrix3(t),this.setXYZ(e,$t.x,$t.y,$t.z);return this}applyMatrix4(t){for(let e=0,n=this.count;e<n;e++)$t.x=this.getX(e),$t.y=this.getY(e),$t.z=this.getZ(e),$t.applyMatrix4(t),this.setXYZ(e,$t.x,$t.y,$t.z);return this}applyNormalMatrix(t){for(let e=0,n=this.count;e<n;e++)$t.x=this.getX(e),$t.y=this.getY(e),$t.z=this.getZ(e),$t.applyNormalMatrix(t),this.setXYZ(e,$t.x,$t.y,$t.z);return this}transformDirection(t){for(let e=0,n=this.count;e<n;e++)$t.x=this.getX(e),$t.y=this.getY(e),$t.z=this.getZ(e),$t.transformDirection(t),this.setXYZ(e,$t.x,$t.y,$t.z);return this}set(t,e=0){return this.array.set(t,e),this}getX(t){return this.array[t*this.itemSize]}setX(t,e){return this.array[t*this.itemSize]=e,this}getY(t){return this.array[t*this.itemSize+1]}setY(t,e){return this.array[t*this.itemSize+1]=e,this}getZ(t){return this.array[t*this.itemSize+2]}setZ(t,e){return this.array[t*this.itemSize+2]=e,this}getW(t){return this.array[t*this.itemSize+3]}setW(t,e){return this.array[t*this.itemSize+3]=e,this}setXY(t,e,n){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this}setXYZ(t,e,n,i){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this}setXYZW(t,e,n,i,r){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this.array[t+3]=r,this}onUpload(t){return this.onUploadCallback=t,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized};return this.name!==""&&(t.name=this.name),this.usage!==35044&&(t.usage=this.usage),(this.updateRange.offset!==0||this.updateRange.count!==-1)&&(t.updateRange=this.updateRange),t}}_t.prototype.isBufferAttribute=!0;class Dl extends _t{constructor(t,e,n){super(new Uint8Array(t),e,n)}}class Wa extends _t{constructor(t,e,n){super(new Uint16Array(t),e,n)}}class ya extends _t{constructor(t,e,n){super(new Uint32Array(t),e,n)}}class zl extends _t{constructor(t,e,n){super(new Uint16Array(t),e,n)}}zl.prototype.isFloat16BufferAttribute=!0;class he extends _t{constructor(t,e,n){super(new Float32Array(t),e,n)}}let El=0;const Se=new ft,qs=new Ht,En=new R,Ne=new ae,pi=new ae,ue=new R;class Ot extends Oe{constructor(){super();Object.defineProperty(this,"id",{value:El++}),this.uuid=Te(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(t){return Array.isArray(t)?this.index=new(aa(t)?ya:Wa)(t,1):this.index=t,this}getAttribute(t){return this.attributes[t]}setAttribute(t,e){return this.attributes[t]=e,this}deleteAttribute(t){return delete this.attributes[t],this}hasAttribute(t){return this.attributes[t]!==void 0}addGroup(t,e,n=0){this.groups.push({start:t,count:e,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(t,e){this.drawRange.start=t,this.drawRange.count=e}applyMatrix4(t){const e=this.attributes.position;e!==void 0&&(e.applyMatrix4(t),e.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const r=new fe().getNormalMatrix(t);n.applyNormalMatrix(r),n.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(t),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(t){return Se.makeRotationFromQuaternion(t),this.applyMatrix4(Se),this}rotateX(t){return Se.makeRotationX(t),this.applyMatrix4(Se),this}rotateY(t){return Se.makeRotationY(t),this.applyMatrix4(Se),this}rotateZ(t){return Se.makeRotationZ(t),this.applyMatrix4(Se),this}translate(t,e,n){return Se.makeTranslation(t,e,n),this.applyMatrix4(Se),this}scale(t,e,n){return Se.makeScale(t,e,n),this.applyMatrix4(Se),this}lookAt(t){return qs.lookAt(t),qs.updateMatrix(),this.applyMatrix4(qs.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(En).negate(),this.translate(En.x,En.y,En.z),this}setFromPoints(t){const e=[];for(let n=0,i=t.length;n<i;n++){const r=t[n];e.push(r.x,r.y,r.z||0)}return this.setAttribute("position",new he(e,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new ae);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new R(-1/0,-1/0,-1/0),new R(1/0,1/0,1/0));return}if(t!==void 0){if(this.boundingBox.setFromBufferAttribute(t),e)for(let n=0,i=e.length;n<i;n++){const r=e[n];Ne.setFromBufferAttribute(r),this.morphTargetsRelative?(ue.addVectors(this.boundingBox.min,Ne.min),this.boundingBox.expandByPoint(ue),ue.addVectors(this.boundingBox.max,Ne.max),this.boundingBox.expandByPoint(ue)):(this.boundingBox.expandByPoint(Ne.min),this.boundingBox.expandByPoint(Ne.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Re);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new R,1/0);return}if(t){const n=this.boundingSphere.center;if(Ne.setFromBufferAttribute(t),e)for(let r=0,a=e.length;r<a;r++){const o=e[r];pi.setFromBufferAttribute(o),this.morphTargetsRelative?(ue.addVectors(Ne.min,pi.min),Ne.expandByPoint(ue),ue.addVectors(Ne.max,pi.max),Ne.expandByPoint(ue)):(Ne.expandByPoint(pi.min),Ne.expandByPoint(pi.max))}Ne.getCenter(n);let i=0;for(let r=0,a=t.count;r<a;r++)ue.fromBufferAttribute(t,r),i=Math.max(i,n.distanceToSquared(ue));if(e)for(let r=0,a=e.length;r<a;r++){const o=e[r],l=this.morphTargetsRelative;for(let c=0,d=o.count;c<d;c++)ue.fromBufferAttribute(o,c),l&&(En.fromBufferAttribute(t,c),ue.add(En)),i=Math.max(i,n.distanceToSquared(ue))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const t=this.index,e=this.attributes;if(t===null||e.position===void 0||e.normal===void 0||e.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=t.array,i=e.position.array,r=e.normal.array,a=e.uv.array,o=i.length/3;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new _t(new Float32Array(4*o),4));const l=this.getAttribute("tangent").array,c=[],d=[];for(let E=0;E<o;E++)c[E]=new R,d[E]=new R;const h=new R,u=new R,m=new R,b=new q,g=new q,Z=new q,f=new R,p=new R;function Y(E,G,w){h.fromArray(i,E*3),u.fromArray(i,G*3),m.fromArray(i,w*3),b.fromArray(a,E*2),g.fromArray(a,G*2),Z.fromArray(a,w*2),u.sub(h),m.sub(h),g.sub(b),Z.sub(b);const I=1/(g.x*Z.y-Z.x*g.y);!isFinite(I)||(f.copy(u).multiplyScalar(Z.y).addScaledVector(m,-g.y).multiplyScalar(I),p.copy(m).multiplyScalar(g.x).addScaledVector(u,-Z.x).multiplyScalar(I),c[E].add(f),c[G].add(f),c[w].add(f),d[E].add(p),d[G].add(p),d[w].add(p))}let y=this.groups;y.length===0&&(y=[{start:0,count:n.length}]);for(let E=0,G=y.length;E<G;++E){const w=y[E],I=w.start,C=w.count;for(let T=I,A=I+C;T<A;T+=3)Y(n[T+0],n[T+1],n[T+2])}const x=new R,M=new R,N=new R,Q=new R;function rt(E){N.fromArray(r,E*3),Q.copy(N);const G=c[E];x.copy(G),x.sub(N.multiplyScalar(N.dot(G))).normalize(),M.crossVectors(Q,G);const I=M.dot(d[E])<0?-1:1;l[E*4]=x.x,l[E*4+1]=x.y,l[E*4+2]=x.z,l[E*4+3]=I}for(let E=0,G=y.length;E<G;++E){const w=y[E],I=w.start,C=w.count;for(let T=I,A=I+C;T<A;T+=3)rt(n[T+0]),rt(n[T+1]),rt(n[T+2])}}computeVertexNormals(){const t=this.index,e=this.getAttribute("position");if(e!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new _t(new Float32Array(e.count*3),3),this.setAttribute("normal",n);else for(let u=0,m=n.count;u<m;u++)n.setXYZ(u,0,0,0);const i=new R,r=new R,a=new R,o=new R,l=new R,c=new R,d=new R,h=new R;if(t)for(let u=0,m=t.count;u<m;u+=3){const b=t.getX(u+0),g=t.getX(u+1),Z=t.getX(u+2);i.fromBufferAttribute(e,b),r.fromBufferAttribute(e,g),a.fromBufferAttribute(e,Z),d.subVectors(a,r),h.subVectors(i,r),d.cross(h),o.fromBufferAttribute(n,b),l.fromBufferAttribute(n,g),c.fromBufferAttribute(n,Z),o.add(d),l.add(d),c.add(d),n.setXYZ(b,o.x,o.y,o.z),n.setXYZ(g,l.x,l.y,l.z),n.setXYZ(Z,c.x,c.y,c.z)}else for(let u=0,m=e.count;u<m;u+=3)i.fromBufferAttribute(e,u+0),r.fromBufferAttribute(e,u+1),a.fromBufferAttribute(e,u+2),d.subVectors(a,r),h.subVectors(i,r),d.cross(h),n.setXYZ(u+0,d.x,d.y,d.z),n.setXYZ(u+1,d.x,d.y,d.z),n.setXYZ(u+2,d.x,d.y,d.z);this.normalizeNormals(),n.needsUpdate=!0}}merge(t,e){if(!(t&&t.isBufferGeometry)){console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",t);return}e===void 0&&(e=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));const n=this.attributes;for(const i in n){if(t.attributes[i]===void 0)continue;const a=n[i].array,o=t.attributes[i],l=o.array,c=o.itemSize*e,d=Math.min(l.length,a.length-c);for(let h=0,u=c;h<d;h++,u++)a[u]=l[h]}return this}normalizeNormals(){const t=this.attributes.normal;for(let e=0,n=t.count;e<n;e++)ue.fromBufferAttribute(t,e),ue.normalize(),t.setXYZ(e,ue.x,ue.y,ue.z)}toNonIndexed(){function t(o,l){const c=o.array,d=o.itemSize,h=o.normalized,u=new c.constructor(l.length*d);let m=0,b=0;for(let g=0,Z=l.length;g<Z;g++){o.isInterleavedBufferAttribute?m=l[g]*o.data.stride+o.offset:m=l[g]*d;for(let f=0;f<d;f++)u[b++]=c[m++]}return new _t(u,d,h)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const e=new Ot,n=this.index.array,i=this.attributes;for(const o in i){const l=i[o],c=t(l,n);e.setAttribute(o,c)}const r=this.morphAttributes;for(const o in r){const l=[],c=r[o];for(let d=0,h=c.length;d<h;d++){const u=c[d],m=t(u,n);l.push(m)}e.morphAttributes[o]=l}e.morphTargetsRelative=this.morphTargetsRelative;const a=this.groups;for(let o=0,l=a.length;o<l;o++){const c=a[o];e.addGroup(c.start,c.count,c.materialIndex)}return e}toJSON(){const t={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,this.name!==""&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),this.parameters!==void 0){const l=this.parameters;for(const c in l)l[c]!==void 0&&(t[c]=l[c]);return t}t.data={attributes:{}};const e=this.index;e!==null&&(t.data.index={type:e.array.constructor.name,array:Array.prototype.slice.call(e.array)});const n=this.attributes;for(const l in n){const c=n[l];t.data.attributes[l]=c.toJSON(t.data)}const i={};let r=!1;for(const l in this.morphAttributes){const c=this.morphAttributes[l],d=[];for(let h=0,u=c.length;h<u;h++){const m=c[h];d.push(m.toJSON(t.data))}d.length>0&&(i[l]=d,r=!0)}r&&(t.data.morphAttributes=i,t.data.morphTargetsRelative=this.morphTargetsRelative);const a=this.groups;a.length>0&&(t.data.groups=JSON.parse(JSON.stringify(a)));const o=this.boundingSphere;return o!==null&&(t.data.boundingSphere={center:o.center.toArray(),radius:o.radius}),t}clone(){return new this.constructor().copy(this)}copy(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const e={};this.name=t.name;const n=t.index;n!==null&&this.setIndex(n.clone(e));const i=t.attributes;for(const c in i){const d=i[c];this.setAttribute(c,d.clone(e))}const r=t.morphAttributes;for(const c in r){const d=[],h=r[c];for(let u=0,m=h.length;u<m;u++)d.push(h[u].clone(e));this.morphAttributes[c]=d}this.morphTargetsRelative=t.morphTargetsRelative;const a=t.groups;for(let c=0,d=a.length;c<d;c++){const h=a[c];this.addGroup(h.start,h.count,h.materialIndex)}const o=t.boundingBox;o!==null&&(this.boundingBox=o.clone());const l=t.boundingSphere;return l!==null&&(this.boundingSphere=l.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,t.parameters!==void 0&&(this.parameters=Object.assign({},t.parameters)),this}dispose(){this.dispatchEvent({type:"dispose"})}}Ot.prototype.isBufferGeometry=!0;const xa=new ft,Hn=new _n,$s=new Re,cn=new R,dn=new R,hn=new R,tr=new R,er=new R,nr=new R,Ki=new R,qi=new R,$i=new R,ts=new q,es=new q,ns=new q,ir=new R,is=new R;class Ye extends Ht{constructor(t=new Ot,e=new ji){super();this.type="Mesh",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t){return super.copy(t),t.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),t.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this.material=t.material,this.geometry=t.geometry,this}updateMorphTargets(){const t=this.geometry;if(t.isBufferGeometry){const e=t.morphAttributes,n=Object.keys(e);if(n.length>0){const i=e[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,a=i.length;r<a;r++){const o=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=r}}}}else{const e=t.morphTargets;e!==void 0&&e.length>0&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}raycast(t,e){const n=this.geometry,i=this.material,r=this.matrixWorld;if(i===void 0||(n.boundingSphere===null&&n.computeBoundingSphere(),$s.copy(n.boundingSphere),$s.applyMatrix4(r),t.ray.intersectsSphere($s)===!1)||(xa.copy(r).invert(),Hn.copy(t.ray).applyMatrix4(xa),n.boundingBox!==null&&Hn.intersectsBox(n.boundingBox)===!1))return;let a;if(n.isBufferGeometry){const o=n.index,l=n.attributes.position,c=n.morphAttributes.position,d=n.morphTargetsRelative,h=n.attributes.uv,u=n.attributes.uv2,m=n.groups,b=n.drawRange;if(o!==null)if(Array.isArray(i))for(let g=0,Z=m.length;g<Z;g++){const f=m[g],p=i[f.materialIndex],Y=Math.max(f.start,b.start),y=Math.min(o.count,Math.min(f.start+f.count,b.start+b.count));for(let x=Y,M=y;x<M;x+=3){const N=o.getX(x),Q=o.getX(x+1),rt=o.getX(x+2);a=ss(this,p,t,Hn,l,c,d,h,u,N,Q,rt),a&&(a.faceIndex=Math.floor(x/3),a.face.materialIndex=f.materialIndex,e.push(a))}}else{const g=Math.max(0,b.start),Z=Math.min(o.count,b.start+b.count);for(let f=g,p=Z;f<p;f+=3){const Y=o.getX(f),y=o.getX(f+1),x=o.getX(f+2);a=ss(this,i,t,Hn,l,c,d,h,u,Y,y,x),a&&(a.faceIndex=Math.floor(f/3),e.push(a))}}else if(l!==void 0)if(Array.isArray(i))for(let g=0,Z=m.length;g<Z;g++){const f=m[g],p=i[f.materialIndex],Y=Math.max(f.start,b.start),y=Math.min(l.count,Math.min(f.start+f.count,b.start+b.count));for(let x=Y,M=y;x<M;x+=3){const N=x,Q=x+1,rt=x+2;a=ss(this,p,t,Hn,l,c,d,h,u,N,Q,rt),a&&(a.faceIndex=Math.floor(x/3),a.face.materialIndex=f.materialIndex,e.push(a))}}else{const g=Math.max(0,b.start),Z=Math.min(l.count,b.start+b.count);for(let f=g,p=Z;f<p;f+=3){const Y=f,y=f+1,x=f+2;a=ss(this,i,t,Hn,l,c,d,h,u,Y,y,x),a&&(a.faceIndex=Math.floor(f/3),e.push(a))}}}else n.isGeometry&&console.error("THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}Ye.prototype.isMesh=!0;function Hl(s,t,e,n,i,r,a,o){let l;if(t.side===1?l=n.intersectTriangle(a,r,i,!0,o):l=n.intersectTriangle(i,r,a,t.side!==2,o),l===null)return null;is.copy(o),is.applyMatrix4(s.matrixWorld);const c=e.ray.origin.distanceTo(is);return c<e.near||c>e.far?null:{distance:c,point:is.clone(),object:s}}function ss(s,t,e,n,i,r,a,o,l,c,d,h){cn.fromBufferAttribute(i,c),dn.fromBufferAttribute(i,d),hn.fromBufferAttribute(i,h);const u=s.morphTargetInfluences;if(r&&u){Ki.set(0,0,0),qi.set(0,0,0),$i.set(0,0,0);for(let b=0,g=r.length;b<g;b++){const Z=u[b],f=r[b];Z!==0&&(tr.fromBufferAttribute(f,c),er.fromBufferAttribute(f,d),nr.fromBufferAttribute(f,h),a?(Ki.addScaledVector(tr,Z),qi.addScaledVector(er,Z),$i.addScaledVector(nr,Z)):(Ki.addScaledVector(tr.sub(cn),Z),qi.addScaledVector(er.sub(dn),Z),$i.addScaledVector(nr.sub(hn),Z)))}cn.add(Ki),dn.add(qi),hn.add($i)}s.isSkinnedMesh&&(s.boneTransform(c,cn),s.boneTransform(d,dn),s.boneTransform(h,hn));const m=Hl(s,t,e,n,cn,dn,hn,ir);if(m){o&&(ts.fromBufferAttribute(o,c),es.fromBufferAttribute(o,d),ns.fromBufferAttribute(o,h),m.uv=oe.getUV(ir,cn,dn,hn,ts,es,ns,new q)),l&&(ts.fromBufferAttribute(l,c),es.fromBufferAttribute(l,d),ns.fromBufferAttribute(l,h),m.uv2=oe.getUV(ir,cn,dn,hn,ts,es,ns,new q));const b={a:c,b:d,c:h,normal:new R,materialIndex:0};oe.getNormal(cn,dn,hn,b.normal),m.face=b}return m}class fi extends Ot{constructor(t=1,e=1,n=1,i=1,r=1,a=1){super();this.type="BoxGeometry",this.parameters={width:t,height:e,depth:n,widthSegments:i,heightSegments:r,depthSegments:a};const o=this;i=Math.floor(i),r=Math.floor(r),a=Math.floor(a);const l=[],c=[],d=[],h=[];let u=0,m=0;b("z","y","x",-1,-1,n,e,t,a,r,0),b("z","y","x",1,-1,n,e,-t,a,r,1),b("x","z","y",1,1,t,n,e,i,a,2),b("x","z","y",1,-1,t,n,-e,i,a,3),b("x","y","z",1,-1,t,e,n,i,r,4),b("x","y","z",-1,-1,t,e,-n,i,r,5),this.setIndex(l),this.setAttribute("position",new he(c,3)),this.setAttribute("normal",new he(d,3)),this.setAttribute("uv",new he(h,2));function b(g,Z,f,p,Y,y,x,M,N,Q,rt){const E=y/N,G=x/Q,w=y/2,I=x/2,C=M/2,T=N+1,A=Q+1;let z=0,S=0;const P=new R;for(let $=0;$<A;$++){const K=$*G-I;for(let tt=0;tt<T;tt++){const Gt=tt*E-w;P[g]=Gt*p,P[Z]=K*Y,P[f]=C,c.push(P.x,P.y,P.z),P[g]=0,P[Z]=0,P[f]=M>0?1:-1,d.push(P.x,P.y,P.z),h.push(tt/N),h.push(1-$/Q),z+=1}}for(let $=0;$<Q;$++)for(let K=0;K<N;K++){const tt=u+K+T*$,Gt=u+K+T*($+1),Ut=u+(K+1)+T*($+1),Vt=u+(K+1)+T*$;l.push(tt,Gt,Vt),l.push(Gt,Ut,Vt),S+=6}o.addGroup(m,S,rt),m+=S,u+=z}}static fromJSON(t){return new fi(t.width,t.height,t.depth,t.widthSegments,t.heightSegments,t.depthSegments)}}function Un(s){const t={};for(const e in s){t[e]={};for(const n in s[e]){const i=s[e][n];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?t[e][n]=i.clone():Array.isArray(i)?t[e][n]=i.slice():t[e][n]=i}}return t}function Ze(s){const t={};for(let e=0;e<s.length;e++){const n=Un(s[e]);for(const i in n)t[i]=n[i]}return t}const Ul={clone:Un,merge:Ze};var kl=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,Pl=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class _e extends ce{constructor(t){super();this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader=kl,this.fragmentShader=Pl,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,t!==void 0&&(t.attributes!==void 0&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(t))}copy(t){return super.copy(t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=Un(t.uniforms),this.defines=Object.assign({},t.defines),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.lights=t.lights,this.clipping=t.clipping,this.extensions=Object.assign({},t.extensions),this.glslVersion=t.glslVersion,this}toJSON(t){const e=super.toJSON(t);e.glslVersion=this.glslVersion,e.uniforms={};for(const i in this.uniforms){const a=this.uniforms[i].value;a&&a.isTexture?e.uniforms[i]={type:"t",value:a.toJSON(t).uuid}:a&&a.isColor?e.uniforms[i]={type:"c",value:a.getHex()}:a&&a.isVector2?e.uniforms[i]={type:"v2",value:a.toArray()}:a&&a.isVector3?e.uniforms[i]={type:"v3",value:a.toArray()}:a&&a.isVector4?e.uniforms[i]={type:"v4",value:a.toArray()}:a&&a.isMatrix3?e.uniforms[i]={type:"m3",value:a.toArray()}:a&&a.isMatrix4?e.uniforms[i]={type:"m4",value:a.toArray()}:e.uniforms[i]={value:a}}Object.keys(this.defines).length>0&&(e.defines=this.defines),e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader;const n={};for(const i in this.extensions)this.extensions[i]===!0&&(n[i]=!0);return Object.keys(n).length>0&&(e.extensions=n),e}}_e.prototype.isShaderMaterial=!0;class sr extends Ht{constructor(){super();this.type="Camera",this.matrixWorldInverse=new ft,this.projectionMatrix=new ft,this.projectionMatrixInverse=new ft}copy(t,e){return super.copy(t,e),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this.projectionMatrixInverse.copy(t.projectionMatrixInverse),this}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(-e[8],-e[9],-e[10]).normalize()}updateMatrixWorld(t){super.updateMatrixWorld(t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(t,e){super.updateWorldMatrix(t,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}sr.prototype.isCamera=!0;class Xe extends sr{constructor(t=50,e=1,n=.1,i=2e3){super();this.type="PerspectiveCamera",this.fov=t,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=e,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=t.view===null?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this}setFocalLength(t){const e=.5*this.getFilmHeight()/t;this.fov=Bs*2*Math.atan(e),this.updateProjectionMatrix()}getFocalLength(){const t=Math.tan(Is*.5*this.fov);return .5*this.getFilmHeight()/t}getEffectiveFOV(){return Bs*2*Math.atan(Math.tan(Is*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(t,e,n,i,r,a){this.aspect=t/e,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=this.near;let e=t*Math.tan(Is*.5*this.fov)/this.zoom,n=2*e,i=this.aspect*n,r=-.5*i;const a=this.view;if(this.view!==null&&this.view.enabled){const l=a.fullWidth,c=a.fullHeight;r+=a.offsetX*i/l,e-=a.offsetY*n/c,i*=a.width/l,n*=a.height/c}const o=this.filmOffset;o!==0&&(r+=t*o/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+i,e,e-n,t,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,this.view!==null&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}}Xe.prototype.isPerspectiveCamera=!0;const kn=90,Pn=1;class rr extends Ht{constructor(t,e,n){super();if(this.type="CubeCamera",n.isWebGLCubeRenderTarget!==!0){console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");return}this.renderTarget=n;const i=new Xe(kn,Pn,t,e);i.layers=this.layers,i.up.set(0,-1,0),i.lookAt(new R(1,0,0)),this.add(i);const r=new Xe(kn,Pn,t,e);r.layers=this.layers,r.up.set(0,-1,0),r.lookAt(new R(-1,0,0)),this.add(r);const a=new Xe(kn,Pn,t,e);a.layers=this.layers,a.up.set(0,0,1),a.lookAt(new R(0,1,0)),this.add(a);const o=new Xe(kn,Pn,t,e);o.layers=this.layers,o.up.set(0,0,-1),o.lookAt(new R(0,-1,0)),this.add(o);const l=new Xe(kn,Pn,t,e);l.layers=this.layers,l.up.set(0,-1,0),l.lookAt(new R(0,0,1)),this.add(l);const c=new Xe(kn,Pn,t,e);c.layers=this.layers,c.up.set(0,-1,0),c.lookAt(new R(0,0,-1)),this.add(c)}update(t,e){this.parent===null&&this.updateMatrixWorld();const n=this.renderTarget,[i,r,a,o,l,c]=this.children,d=t.xr.enabled,h=t.getRenderTarget();t.xr.enabled=!1;const u=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,t.setRenderTarget(n,0),t.render(e,i),t.setRenderTarget(n,1),t.render(e,r),t.setRenderTarget(n,2),t.render(e,a),t.setRenderTarget(n,3),t.render(e,o),t.setRenderTarget(n,4),t.render(e,l),n.texture.generateMipmaps=u,t.setRenderTarget(n,5),t.render(e,c),t.setRenderTarget(h),t.xr.enabled=d,n.texture.needsPMREMUpdate=!0}}class rs extends se{constructor(t,e,n,i,r,a,o,l,c,d){t=t!==void 0?t:[],e=e!==void 0?e:301;super(t,e,n,i,r,a,o,l,c,d);this.flipY=!1}get images(){return this.image}set images(t){this.image=t}}rs.prototype.isCubeTexture=!0;class Va extends ye{constructor(t,e={}){super(t,t,e);const n={width:t,height:t,depth:1},i=[n,n,n,n,n,n];this.texture=new rs(i,e.mapping,e.wrapS,e.wrapT,e.magFilter,e.minFilter,e.format,e.type,e.anisotropy,e.encoding),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=e.generateMipmaps!==void 0?e.generateMipmaps:!1,this.texture.minFilter=e.minFilter!==void 0?e.minFilter:1006}fromEquirectangularTexture(t,e){this.texture.type=e.type,this.texture.format=1023,this.texture.encoding=e.encoding,this.texture.generateMipmaps=e.generateMipmaps,this.texture.minFilter=e.minFilter,this.texture.magFilter=e.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},i=new fi(5,5,5),r=new _e({name:"CubemapFromEquirect",uniforms:Un(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:1,blending:0});r.uniforms.tEquirect.value=e;const a=new Ye(i,r),o=e.minFilter;return e.minFilter===1008&&(e.minFilter=1006),new rr(1,10,this).update(t,a),e.minFilter=o,a.geometry.dispose(),a.material.dispose(),this}clear(t,e,n,i){const r=t.getRenderTarget();for(let a=0;a<6;a++)t.setRenderTarget(this,a),t.clear(e,n,i);t.setRenderTarget(r)}}Va.prototype.isWebGLCubeRenderTarget=!0;const ar=new R,Ll=new R,Ql=new fe;class nn{constructor(t=new R(1,0,0),e=0){this.normal=t,this.constant=e}set(t,e){return this.normal.copy(t),this.constant=e,this}setComponents(t,e,n,i){return this.normal.set(t,e,n),this.constant=i,this}setFromNormalAndCoplanarPoint(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this}setFromCoplanarPoints(t,e,n){const i=ar.subVectors(n,e).cross(Ll.subVectors(t,e)).normalize();return this.setFromNormalAndCoplanarPoint(i,t),this}copy(t){return this.normal.copy(t.normal),this.constant=t.constant,this}normalize(){const t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(t){return this.normal.dot(t)+this.constant}distanceToSphere(t){return this.distanceToPoint(t.center)-t.radius}projectPoint(t,e){return e.copy(this.normal).multiplyScalar(-this.distanceToPoint(t)).add(t)}intersectLine(t,e){const n=t.delta(ar),i=this.normal.dot(n);if(i===0)return this.distanceToPoint(t.start)===0?e.copy(t.start):null;const r=-(t.start.dot(this.normal)+this.constant)/i;return r<0||r>1?null:e.copy(n).multiplyScalar(r).add(t.start)}intersectsLine(t){const e=this.distanceToPoint(t.start),n=this.distanceToPoint(t.end);return e<0&&n>0||n<0&&e>0}intersectsBox(t){return t.intersectsPlane(this)}intersectsSphere(t){return t.intersectsPlane(this)}coplanarPoint(t){return t.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(t,e){const n=e||Ql.getNormalMatrix(t),i=this.coplanarPoint(ar).applyMatrix4(t),r=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(r),this}translate(t){return this.constant-=t.dot(this.normal),this}equals(t){return t.normal.equals(this.normal)&&t.constant===this.constant}clone(){return new this.constructor().copy(this)}}nn.prototype.isPlane=!0;const Ln=new Re,as=new R;class bi{constructor(t=new nn,e=new nn,n=new nn,i=new nn,r=new nn,a=new nn){this.planes=[t,e,n,i,r,a]}set(t,e,n,i,r,a){const o=this.planes;return o[0].copy(t),o[1].copy(e),o[2].copy(n),o[3].copy(i),o[4].copy(r),o[5].copy(a),this}copy(t){const e=this.planes;for(let n=0;n<6;n++)e[n].copy(t.planes[n]);return this}setFromProjectionMatrix(t){const e=this.planes,n=t.elements,i=n[0],r=n[1],a=n[2],o=n[3],l=n[4],c=n[5],d=n[6],h=n[7],u=n[8],m=n[9],b=n[10],g=n[11],Z=n[12],f=n[13],p=n[14],Y=n[15];return e[0].setComponents(o-i,h-l,g-u,Y-Z).normalize(),e[1].setComponents(o+i,h+l,g+u,Y+Z).normalize(),e[2].setComponents(o+r,h+c,g+m,Y+f).normalize(),e[3].setComponents(o-r,h-c,g-m,Y-f).normalize(),e[4].setComponents(o-a,h-d,g-b,Y-p).normalize(),e[5].setComponents(o+a,h+d,g+b,Y+p).normalize(),this}intersectsObject(t){const e=t.geometry;return e.boundingSphere===null&&e.computeBoundingSphere(),Ln.copy(e.boundingSphere).applyMatrix4(t.matrixWorld),this.intersectsSphere(Ln)}intersectsSprite(t){return Ln.center.set(0,0,0),Ln.radius=.7071067811865476,Ln.applyMatrix4(t.matrixWorld),this.intersectsSphere(Ln)}intersectsSphere(t){const e=this.planes,n=t.center,i=-t.radius;for(let r=0;r<6;r++)if(e[r].distanceToPoint(n)<i)return!1;return!0}intersectsBox(t){const e=this.planes;for(let n=0;n<6;n++){const i=e[n];if(as.x=i.normal.x>0?t.max.x:t.min.x,as.y=i.normal.y>0?t.max.y:t.min.y,as.z=i.normal.z>0?t.max.z:t.min.z,i.distanceToPoint(as)<0)return!1}return!0}containsPoint(t){const e=this.planes;for(let n=0;n<6;n++)if(e[n].distanceToPoint(t)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function va(){let s=null,t=!1,e=null,n=null;function i(r,a){e(r,a),n=s.requestAnimationFrame(i)}return{start:function(){t!==!0&&e!==null&&(n=s.requestAnimationFrame(i),t=!0)},stop:function(){s.cancelAnimationFrame(n),t=!1},setAnimationLoop:function(r){e=r},setContext:function(r){s=r}}}function jl(s,t){const e=t.isWebGL2,n=new WeakMap;function i(c,d){const h=c.array,u=c.usage,m=s.createBuffer();s.bindBuffer(d,m),s.bufferData(d,h,u),c.onUploadCallback();let b;if(h instanceof Float32Array)b=5126;else if(h instanceof Uint16Array)if(c.isFloat16BufferAttribute)if(e)b=5131;else throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");else b=5123;else if(h instanceof Int16Array)b=5122;else if(h instanceof Uint32Array)b=5125;else if(h instanceof Int32Array)b=5124;else if(h instanceof Int8Array)b=5120;else if(h instanceof Uint8Array)b=5121;else if(h instanceof Uint8ClampedArray)b=5121;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+h);return{buffer:m,type:b,bytesPerElement:h.BYTES_PER_ELEMENT,version:c.version}}function r(c,d,h){const u=d.array,m=d.updateRange;s.bindBuffer(h,c),m.count===-1?s.bufferSubData(h,0,u):(e?s.bufferSubData(h,m.offset*u.BYTES_PER_ELEMENT,u,m.offset,m.count):s.bufferSubData(h,m.offset*u.BYTES_PER_ELEMENT,u.subarray(m.offset,m.offset+m.count)),m.count=-1)}function a(c){return c.isInterleavedBufferAttribute&&(c=c.data),n.get(c)}function o(c){c.isInterleavedBufferAttribute&&(c=c.data);const d=n.get(c);d&&(s.deleteBuffer(d.buffer),n.delete(c))}function l(c,d){if(c.isGLBufferAttribute){const u=n.get(c);(!u||u.version<c.version)&&n.set(c,{buffer:c.buffer,type:c.type,bytesPerElement:c.elementSize,version:c.version});return}c.isInterleavedBufferAttribute&&(c=c.data);const h=n.get(c);h===void 0?n.set(c,i(c,d)):h.version<c.version&&(r(h.buffer,c,d),h.version=c.version)}return{get:a,remove:o,update:l}}class or extends Ot{constructor(t=1,e=1,n=1,i=1){super();this.type="PlaneGeometry",this.parameters={width:t,height:e,widthSegments:n,heightSegments:i};const r=t/2,a=e/2,o=Math.floor(n),l=Math.floor(i),c=o+1,d=l+1,h=t/o,u=e/l,m=[],b=[],g=[],Z=[];for(let f=0;f<d;f++){const p=f*u-a;for(let Y=0;Y<c;Y++){const y=Y*h-r;b.push(y,-p,0),g.push(0,0,1),Z.push(Y/o),Z.push(1-f/l)}}for(let f=0;f<l;f++)for(let p=0;p<o;p++){const Y=p+c*f,y=p+c*(f+1),x=p+1+c*(f+1),M=p+1+c*f;m.push(Y,y,M),m.push(y,x,M)}this.setIndex(m),this.setAttribute("position",new he(b,3)),this.setAttribute("normal",new he(g,3)),this.setAttribute("uv",new he(Z,2))}static fromJSON(t){return new or(t.width,t.height,t.widthSegments,t.heightSegments)}}var Ol=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vUv ).g;
#endif`,Kl=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,ql=`#ifdef USE_ALPHATEST
	if ( diffuseColor.a < alphaTest ) discard;
#endif`,$l=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,tc=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,ec=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,nc="vec3 transformed = vec3( position );",ic=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,sc=`vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
	float D = D_GGX( alpha, dotNH );
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif`,rc=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vUv );
		vec2 dSTdy = dFdy( vUv );
		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );
		vec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,ac=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,oc=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,lc=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,cc=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,dc=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,hc=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,uc=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,mc=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,pc=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float linearToRelativeLuminance( const in vec3 color ) {
	vec3 weights = vec3( 0.2126, 0.7152, 0.0722 );
	return dot( weights, color.rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}`,fc=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		vec2 uv = getUV( direction, face ) * ( faceSize - 1.0 ) + 0.5;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define r0 1.0
	#define v0 0.339
	#define m0 - 2.0
	#define r1 0.8
	#define v1 0.276
	#define m1 - 1.0
	#define r4 0.4
	#define v4 0.046
	#define m4 2.0
	#define r5 0.305
	#define v5 0.016
	#define m5 3.0
	#define r6 0.21
	#define v6 0.0038
	#define m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= r1 ) {
			mip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;
		} else if ( roughness >= r4 ) {
			mip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;
		} else if ( roughness >= r5 ) {
			mip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;
		} else if ( roughness >= r6 ) {
			mip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,bc=`vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,gc=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,Zc=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );
#endif`,Gc=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,Wc=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,yc="gl_FragColor = linearToOutputTexel( gl_FragColor );",xc=`vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,Vc=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,vc=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,Rc=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,Yc=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,Xc=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,wc=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,Mc=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,Nc=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,Fc=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,Sc=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		return ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );
	#endif
}`,Ic=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vUv2 );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		lightMapIrradiance *= PI;
	#endif
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,Bc=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,Cc=`vec3 diffuse = vec3( 1.0 );
GeometricContext geometry;
geometry.position = mvPosition.xyz;
geometry.normal = normalize( transformedNormal );
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );
GeometricContext backGeometry;
backGeometry.position = geometry.position;
backGeometry.normal = -geometry.normal;
backGeometry.viewDir = geometry.viewDir;
vLightFront = vec3( 0.0 );
vIndirectFront = vec3( 0.0 );
#ifdef DOUBLE_SIDED
	vLightBack = vec3( 0.0 );
	vIndirectBack = vec3( 0.0 );
#endif
IncidentLight directLight;
float dotNL;
vec3 directLightColor_Diffuse;
vIndirectFront += getAmbientLightIrradiance( ambientLightColor );
vIndirectFront += getLightProbeIrradiance( lightProbe, geometry.normal );
#ifdef DOUBLE_SIDED
	vIndirectBack += getAmbientLightIrradiance( ambientLightColor );
	vIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry.normal );
#endif
#if NUM_POINT_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		getPointLightInfo( pointLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_SPOT_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		getSpotLightInfo( spotLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_DIR_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		getDirectionalLightInfo( directionalLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_HEMI_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
		vIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		#ifdef DOUBLE_SIDED
			vIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry.normal );
		#endif
	}
	#pragma unroll_loop_end
#endif`,Ac=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( PHYSICALLY_CORRECT_LIGHTS )
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#else
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometry.position;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometry.position;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,_c=`#if defined( USE_ENVMAP )
	#ifdef ENVMAP_MODE_REFRACTION
		uniform float refractionRatio;
	#endif
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 reflectVec;
			#ifdef ENVMAP_MODE_REFLECTION
				reflectVec = reflect( - viewDir, normal );
				reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			#else
				reflectVec = refract( - viewDir, normal, refractionRatio );
			#endif
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
#endif`,Jc=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,Tc=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon
#define Material_LightProbeLOD( material )	(0)`,Dc=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,zc=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong
#define Material_LightProbeLOD( material )	(0)`,Ec=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	#ifdef SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULARINTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;
		#endif
		#ifdef USE_SPECULARCOLORMAP
			specularColorFactor *= texture2D( specularColorMap, vUv ).rgb;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( ior - 1.0 ) / ( ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEENCOLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEENROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;
	#endif
#endif`,Hc=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
};
vec3 clearcoatSpecular = vec3( 0.0 );
vec3 sheenSpecular = vec3( 0.0 );
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	vec3 FssEss = specularColor * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	computeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	vec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,Uc=`
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef USE_CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,kc=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		#ifndef PHYSICALLY_CORRECT_LIGHTS
			lightMapIrradiance *= PI;
		#endif
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometry.normal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	radiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,Pc=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`,Lc=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,Qc=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,jc=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,Oc=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,Kc=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,qc=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,$c=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,td=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	uniform mat3 uvTransform;
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,ed=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vUv );
	metalnessFactor *= texelMetalness.b;
#endif`,nd=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,id=`#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ]
		#endif
	}
#endif`,sd=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,rd=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform vec2 morphTargetsTextureSize;
		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
			float texelIndex = float( vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset );
			float y = floor( texelIndex / morphTargetsTextureSize.x );
			float x = texelIndex - y * morphTargetsTextureSize.x;
			vec3 morphUV = vec3( ( x + 0.5 ) / morphTargetsTextureSize.x, y / morphTargetsTextureSize.y, morphTargetIndex );
			return texture( morphTargetsTexture, morphUV );
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,ad=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,od=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );
	vec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	#ifdef USE_TANGENT
		vec3 tangent = normalize( vTangent );
		vec3 bitangent = normalize( vBitangent );
		#ifdef DOUBLE_SIDED
			tangent = tangent * faceDirection;
			bitangent = bitangent * faceDirection;
		#endif
		#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )
			mat3 vTBN = mat3( tangent, bitangent, normal );
		#endif
	#endif
#endif
vec3 geometryNormal = normal;`,ld=`#ifdef OBJECTSPACE_NORMALMAP
	normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( TANGENTSPACE_NORMALMAP )
	vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	#ifdef USE_TANGENT
		normal = normalize( vTBN * mapN );
	#else
		normal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );
	#endif
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,cd=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,dd=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,hd=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,ud=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef OBJECTSPACE_NORMALMAP
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )
	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {
		vec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );
		vec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );
		vec2 st0 = dFdx( vUv.st );
		vec2 st1 = dFdy( vUv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );
		return normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );
	}
#endif`,md=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`,pd=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	#ifdef USE_TANGENT
		clearcoatNormal = normalize( vTBN * clearcoatMapN );
	#else
		clearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );
	#endif
#endif`,fd=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif`,bd=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= transmissionAlpha + 0.1;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,gd=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {
	return linearClipZ * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * invClipZ - far );
}`,Zd=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,Gd=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,Wd=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,yd=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,xd=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vUv );
	roughnessFactor *= texelRoughness.g;
#endif`,Vd=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,vd=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );
		bool inFrustum = all( inFrustumVec );
		bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );
		bool frustumTest = all( frustumTestVec );
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), 
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), 
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,Rd=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,Yd=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0
		vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		vec4 shadowWorldPosition;
	#endif
	#if NUM_DIR_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
		vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );
		vSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
		vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
#endif`,Xd=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,wd=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,Md=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	#ifdef BONE_TEXTURE
		uniform highp sampler2D boneTexture;
		uniform int boneTextureSize;
		mat4 getBoneMatrix( const in float i ) {
			float j = i * 4.0;
			float x = mod( j, float( boneTextureSize ) );
			float y = floor( j / float( boneTextureSize ) );
			float dx = 1.0 / float( boneTextureSize );
			float dy = 1.0 / float( boneTextureSize );
			y = dy * ( y + 0.5 );
			vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
			vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
			vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
			vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
			mat4 bone = mat4( v1, v2, v3, v4 );
			return bone;
		}
	#else
		uniform mat4 boneMatrices[ MAX_BONES ];
		mat4 getBoneMatrix( const in float i ) {
			mat4 bone = boneMatrices[ int(i) ];
			return bone;
		}
	#endif
#endif`,Nd=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,Fd=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,Sd=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,Id=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,Bd=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,Cd=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return toneMappingExposure * color;
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,Ad=`#ifdef USE_TRANSMISSION
	float transmissionAlpha = 1.0;
	float transmissionFactor = transmission;
	float thicknessFactor = thickness;
	#ifdef USE_TRANSMISSIONMAP
		transmissionFactor *= texture2D( transmissionMap, vUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		thicknessFactor *= texture2D( thicknessMap, vUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmission = getIBLVolumeRefraction(
		n, v, roughnessFactor, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,
		attenuationColor, attenuationDistance );
	totalDiffuse = mix( totalDiffuse, transmission.rgb, transmissionFactor );
	transmissionAlpha = mix( transmissionAlpha, transmission.a, transmissionFactor );
#endif`,_d=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		#ifdef texture2DLodEXT
			return texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#else
			return texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#endif
	}
	vec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( attenuationDistance == 0.0 ) {
			return radiance;
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance * radiance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		return vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );
	}
#endif`,Jd=`#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )
	varying vec2 vUv;
#endif`,Td=`#ifdef USE_UV
	#ifdef UVS_VERTEX_ONLY
		vec2 vUv;
	#else
		varying vec2 vUv;
	#endif
	uniform mat3 uvTransform;
#endif`,Dd=`#ifdef USE_UV
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
#endif`,zd=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	varying vec2 vUv2;
#endif`,Ed=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	attribute vec2 uv2;
	varying vec2 vUv2;
	uniform mat3 uv2Transform;
#endif`,Hd=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	vUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;
#endif`,Ud=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const At={alphamap_fragment:Ol,alphamap_pars_fragment:Kl,alphatest_fragment:ql,alphatest_pars_fragment:$l,aomap_fragment:tc,aomap_pars_fragment:ec,begin_vertex:nc,beginnormal_vertex:ic,bsdfs:sc,bumpmap_pars_fragment:rc,clipping_planes_fragment:ac,clipping_planes_pars_fragment:oc,clipping_planes_pars_vertex:lc,clipping_planes_vertex:cc,color_fragment:dc,color_pars_fragment:hc,color_pars_vertex:uc,color_vertex:mc,common:pc,cube_uv_reflection_fragment:fc,defaultnormal_vertex:bc,displacementmap_pars_vertex:gc,displacementmap_vertex:Zc,emissivemap_fragment:Gc,emissivemap_pars_fragment:Wc,encodings_fragment:yc,encodings_pars_fragment:xc,envmap_fragment:Vc,envmap_common_pars_fragment:vc,envmap_pars_fragment:Rc,envmap_pars_vertex:Yc,envmap_physical_pars_fragment:_c,envmap_vertex:Xc,fog_vertex:wc,fog_pars_vertex:Mc,fog_fragment:Nc,fog_pars_fragment:Fc,gradientmap_pars_fragment:Sc,lightmap_fragment:Ic,lightmap_pars_fragment:Bc,lights_lambert_vertex:Cc,lights_pars_begin:Ac,lights_toon_fragment:Jc,lights_toon_pars_fragment:Tc,lights_phong_fragment:Dc,lights_phong_pars_fragment:zc,lights_physical_fragment:Ec,lights_physical_pars_fragment:Hc,lights_fragment_begin:Uc,lights_fragment_maps:kc,lights_fragment_end:Pc,logdepthbuf_fragment:Lc,logdepthbuf_pars_fragment:Qc,logdepthbuf_pars_vertex:jc,logdepthbuf_vertex:Oc,map_fragment:Kc,map_pars_fragment:qc,map_particle_fragment:$c,map_particle_pars_fragment:td,metalnessmap_fragment:ed,metalnessmap_pars_fragment:nd,morphcolor_vertex:id,morphnormal_vertex:sd,morphtarget_pars_vertex:rd,morphtarget_vertex:ad,normal_fragment_begin:od,normal_fragment_maps:ld,normal_pars_fragment:cd,normal_pars_vertex:dd,normal_vertex:hd,normalmap_pars_fragment:ud,clearcoat_normal_fragment_begin:md,clearcoat_normal_fragment_maps:pd,clearcoat_pars_fragment:fd,output_fragment:bd,packing:gd,premultiplied_alpha_fragment:Zd,project_vertex:Gd,dithering_fragment:Wd,dithering_pars_fragment:yd,roughnessmap_fragment:xd,roughnessmap_pars_fragment:Vd,shadowmap_pars_fragment:vd,shadowmap_pars_vertex:Rd,shadowmap_vertex:Yd,shadowmask_pars_fragment:Xd,skinbase_vertex:wd,skinning_pars_vertex:Md,skinning_vertex:Nd,skinnormal_vertex:Fd,specularmap_fragment:Sd,specularmap_pars_fragment:Id,tonemapping_fragment:Bd,tonemapping_pars_fragment:Cd,transmission_fragment:Ad,transmission_pars_fragment:_d,uv_pars_fragment:Jd,uv_pars_vertex:Td,uv_vertex:Dd,uv2_pars_fragment:zd,uv2_pars_vertex:Ed,uv2_vertex:Hd,worldpos_vertex:Ud,background_vert:`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,background_frag:`uniform sampler2D t2D;
varying vec2 vUv;
void main() {
	gl_FragColor = texture2D( t2D, vUv );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,cube_vert:`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,cube_frag:`#include <envmap_common_pars_fragment>
uniform float opacity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	vec3 vReflect = vWorldDirection;
	#include <envmap_fragment>
	gl_FragColor = envColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,depth_vert:`#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,depth_frag:`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,distanceRGBA_vert:`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,distanceRGBA_frag:`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,equirect_vert:`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,equirect_frag:`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,linedashed_vert:`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,linedashed_frag:`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,meshbasic_vert:`#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,meshbasic_frag:`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel= texture2D( lightMap, vUv2 );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,meshlambert_vert:`#define LAMBERT
varying vec3 vLightFront;
varying vec3 vIndirectFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <bsdfs>
#include <lights_pars_begin>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <lights_lambert_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,meshlambert_frag:`uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
varying vec3 vLightFront;
varying vec3 vIndirectFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <fog_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <emissivemap_fragment>
	#ifdef DOUBLE_SIDED
		reflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;
	#else
		reflectedLight.indirectDiffuse += vIndirectFront;
	#endif
	#include <lightmap_fragment>
	reflectedLight.indirectDiffuse *= BRDF_Lambert( diffuseColor.rgb );
	#ifdef DOUBLE_SIDED
		reflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;
	#else
		reflectedLight.directDiffuse = vLightFront;
	#endif
	reflectedLight.directDiffuse *= BRDF_Lambert( diffuseColor.rgb ) * getShadowMask();
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,meshmatcap_vert:`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,meshmatcap_frag:`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,meshnormal_vert:`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	vViewPosition = - mvPosition.xyz;
#endif
}`,meshnormal_frag:`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,meshphong_vert:`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,meshphong_frag:`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,meshphysical_vert:`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,meshphysical_frag:`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULARINTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
	#ifdef USE_SPECULARCOLORMAP
		uniform sampler2D specularColorMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEENCOLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEENROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <bsdfs>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;
	#endif
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,meshtoon_vert:`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,meshtoon_frag:`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,points_vert:`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,points_frag:`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,shadow_vert:`#include <common>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,shadow_frag:`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,sprite_vert:`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,sprite_frag:`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`},st={common:{diffuse:{value:new D(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new fe},uv2Transform:{value:new fe},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new q(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new D(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new D(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new fe}},sprite:{diffuse:{value:new D(16777215)},opacity:{value:1},center:{value:new q(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new fe}}},De={basic:{uniforms:Ze([st.common,st.specularmap,st.envmap,st.aomap,st.lightmap,st.fog]),vertexShader:At.meshbasic_vert,fragmentShader:At.meshbasic_frag},lambert:{uniforms:Ze([st.common,st.specularmap,st.envmap,st.aomap,st.lightmap,st.emissivemap,st.fog,st.lights,{emissive:{value:new D(0)}}]),vertexShader:At.meshlambert_vert,fragmentShader:At.meshlambert_frag},phong:{uniforms:Ze([st.common,st.specularmap,st.envmap,st.aomap,st.lightmap,st.emissivemap,st.bumpmap,st.normalmap,st.displacementmap,st.fog,st.lights,{emissive:{value:new D(0)},specular:{value:new D(1118481)},shininess:{value:30}}]),vertexShader:At.meshphong_vert,fragmentShader:At.meshphong_frag},standard:{uniforms:Ze([st.common,st.envmap,st.aomap,st.lightmap,st.emissivemap,st.bumpmap,st.normalmap,st.displacementmap,st.roughnessmap,st.metalnessmap,st.fog,st.lights,{emissive:{value:new D(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:At.meshphysical_vert,fragmentShader:At.meshphysical_frag},toon:{uniforms:Ze([st.common,st.aomap,st.lightmap,st.emissivemap,st.bumpmap,st.normalmap,st.displacementmap,st.gradientmap,st.fog,st.lights,{emissive:{value:new D(0)}}]),vertexShader:At.meshtoon_vert,fragmentShader:At.meshtoon_frag},matcap:{uniforms:Ze([st.common,st.bumpmap,st.normalmap,st.displacementmap,st.fog,{matcap:{value:null}}]),vertexShader:At.meshmatcap_vert,fragmentShader:At.meshmatcap_frag},points:{uniforms:Ze([st.points,st.fog]),vertexShader:At.points_vert,fragmentShader:At.points_frag},dashed:{uniforms:Ze([st.common,st.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:At.linedashed_vert,fragmentShader:At.linedashed_frag},depth:{uniforms:Ze([st.common,st.displacementmap]),vertexShader:At.depth_vert,fragmentShader:At.depth_frag},normal:{uniforms:Ze([st.common,st.bumpmap,st.normalmap,st.displacementmap,{opacity:{value:1}}]),vertexShader:At.meshnormal_vert,fragmentShader:At.meshnormal_frag},sprite:{uniforms:Ze([st.sprite,st.fog]),vertexShader:At.sprite_vert,fragmentShader:At.sprite_frag},background:{uniforms:{uvTransform:{value:new fe},t2D:{value:null}},vertexShader:At.background_vert,fragmentShader:At.background_frag},cube:{uniforms:Ze([st.envmap,{opacity:{value:1}}]),vertexShader:At.cube_vert,fragmentShader:At.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:At.equirect_vert,fragmentShader:At.equirect_frag},distanceRGBA:{uniforms:Ze([st.common,st.displacementmap,{referencePosition:{value:new R},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:At.distanceRGBA_vert,fragmentShader:At.distanceRGBA_frag},shadow:{uniforms:Ze([st.lights,st.fog,{color:{value:new D(0)},opacity:{value:1}}]),vertexShader:At.shadow_vert,fragmentShader:At.shadow_frag}};De.physical={uniforms:Ze([De.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new q(1,1)},clearcoatNormalMap:{value:null},sheen:{value:0},sheenColor:{value:new D(0)},sheenColorMap:{value:null},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new q},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new D(0)},specularIntensity:{value:1},specularIntensityMap:{value:null},specularColor:{value:new D(1,1,1)},specularColorMap:{value:null}}]),vertexShader:At.meshphysical_vert,fragmentShader:At.meshphysical_frag};function kd(s,t,e,n,i,r){const a=new D(0);let o=i===!0?0:1,l,c,d=null,h=0,u=null;function m(g,Z){let f=!1,p=Z.isScene===!0?Z.background:null;p&&p.isTexture&&(p=t.get(p));const Y=s.xr,y=Y.getSession&&Y.getSession();y&&y.environmentBlendMode==="additive"&&(p=null),p===null?b(a,o):p&&p.isColor&&(b(p,1),f=!0),(s.autoClear||f)&&s.clear(s.autoClearColor,s.autoClearDepth,s.autoClearStencil),p&&(p.isCubeTexture||p.mapping===306)?(c===void 0&&(c=new Ye(new fi(1,1,1),new _e({name:"BackgroundCubeMaterial",uniforms:Un(De.cube.uniforms),vertexShader:De.cube.vertexShader,fragmentShader:De.cube.fragmentShader,side:1,depthTest:!1,depthWrite:!1,fog:!1})),c.geometry.deleteAttribute("normal"),c.geometry.deleteAttribute("uv"),c.onBeforeRender=function(x,M,N){this.matrixWorld.copyPosition(N.matrixWorld)},Object.defineProperty(c.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),n.update(c)),c.material.uniforms.envMap.value=p,c.material.uniforms.flipEnvMap.value=p.isCubeTexture&&p.isRenderTargetTexture===!1?-1:1,(d!==p||h!==p.version||u!==s.toneMapping)&&(c.material.needsUpdate=!0,d=p,h=p.version,u=s.toneMapping),g.unshift(c,c.geometry,c.material,0,0,null)):p&&p.isTexture&&(l===void 0&&(l=new Ye(new or(2,2),new _e({name:"BackgroundMaterial",uniforms:Un(De.background.uniforms),vertexShader:De.background.vertexShader,fragmentShader:De.background.fragmentShader,side:0,depthTest:!1,depthWrite:!1,fog:!1})),l.geometry.deleteAttribute("normal"),Object.defineProperty(l.material,"map",{get:function(){return this.uniforms.t2D.value}}),n.update(l)),l.material.uniforms.t2D.value=p,p.matrixAutoUpdate===!0&&p.updateMatrix(),l.material.uniforms.uvTransform.value.copy(p.matrix),(d!==p||h!==p.version||u!==s.toneMapping)&&(l.material.needsUpdate=!0,d=p,h=p.version,u=s.toneMapping),g.unshift(l,l.geometry,l.material,0,0,null))}function b(g,Z){e.buffers.color.setClear(g.r,g.g,g.b,Z,r)}return{getClearColor:function(){return a},setClearColor:function(g,Z=1){a.set(g),o=Z,b(a,o)},getClearAlpha:function(){return o},setClearAlpha:function(g){o=g,b(a,o)},render:m}}function Pd(s,t,e,n){const i=s.getParameter(34921),r=n.isWebGL2?null:t.get("OES_vertex_array_object"),a=n.isWebGL2||r!==null,o={},l=g(null);let c=l;function d(I,C,T,A,z){let S=!1;if(a){const P=b(A,T,C);c!==P&&(c=P,u(c.object)),S=Z(A,z),S&&f(A,z)}else{const P=C.wireframe===!0;(c.geometry!==A.id||c.program!==T.id||c.wireframe!==P)&&(c.geometry=A.id,c.program=T.id,c.wireframe=P,S=!0)}I.isInstancedMesh===!0&&(S=!0),z!==null&&e.update(z,34963),S&&(N(I,C,T,A),z!==null&&s.bindBuffer(34963,e.get(z).buffer))}function h(){return n.isWebGL2?s.createVertexArray():r.createVertexArrayOES()}function u(I){return n.isWebGL2?s.bindVertexArray(I):r.bindVertexArrayOES(I)}function m(I){return n.isWebGL2?s.deleteVertexArray(I):r.deleteVertexArrayOES(I)}function b(I,C,T){const A=T.wireframe===!0;let z=o[I.id];z===void 0&&(z={},o[I.id]=z);let S=z[C.id];S===void 0&&(S={},z[C.id]=S);let P=S[A];return P===void 0&&(P=g(h()),S[A]=P),P}function g(I){const C=[],T=[],A=[];for(let z=0;z<i;z++)C[z]=0,T[z]=0,A[z]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:C,enabledAttributes:T,attributeDivisors:A,object:I,attributes:{},index:null}}function Z(I,C){const T=c.attributes,A=I.attributes;let z=0;for(const S in A){const P=T[S],$=A[S];if(P===void 0||P.attribute!==$||P.data!==$.data)return!0;z++}return c.attributesNum!==z||c.index!==C}function f(I,C){const T={},A=I.attributes;let z=0;for(const S in A){const P=A[S],$={};$.attribute=P,P.data&&($.data=P.data),T[S]=$,z++}c.attributes=T,c.attributesNum=z,c.index=C}function p(){const I=c.newAttributes;for(let C=0,T=I.length;C<T;C++)I[C]=0}function Y(I){y(I,0)}function y(I,C){const T=c.newAttributes,A=c.enabledAttributes,z=c.attributeDivisors;T[I]=1,A[I]===0&&(s.enableVertexAttribArray(I),A[I]=1),z[I]!==C&&((n.isWebGL2?s:t.get("ANGLE_instanced_arrays"))[n.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](I,C),z[I]=C)}function x(){const I=c.newAttributes,C=c.enabledAttributes;for(let T=0,A=C.length;T<A;T++)C[T]!==I[T]&&(s.disableVertexAttribArray(T),C[T]=0)}function M(I,C,T,A,z,S){n.isWebGL2===!0&&(T===5124||T===5125)?s.vertexAttribIPointer(I,C,T,z,S):s.vertexAttribPointer(I,C,T,A,z,S)}function N(I,C,T,A){if(n.isWebGL2===!1&&(I.isInstancedMesh||A.isInstancedBufferGeometry)&&t.get("ANGLE_instanced_arrays")===null)return;p();const z=A.attributes,S=T.getAttributes(),P=C.defaultAttributeValues;for(const $ in S){const K=S[$];if(K.location>=0){let tt=z[$];if(tt===void 0&&($==="instanceMatrix"&&I.instanceMatrix&&(tt=I.instanceMatrix),$==="instanceColor"&&I.instanceColor&&(tt=I.instanceColor)),tt!==void 0){const Gt=tt.normalized,Ut=tt.itemSize,Vt=e.get(tt);if(Vt===void 0)continue;const L=Vt.buffer,kt=Vt.type,St=Vt.bytesPerElement;if(tt.isInterleavedBufferAttribute){const ut=tt.data,mt=ut.stride,Jt=tt.offset;if(ut.isInstancedInterleavedBuffer){for(let _=0;_<K.locationSize;_++)y(K.location+_,ut.meshPerAttribute);I.isInstancedMesh!==!0&&A._maxInstanceCount===void 0&&(A._maxInstanceCount=ut.meshPerAttribute*ut.count)}else for(let _=0;_<K.locationSize;_++)Y(K.location+_);s.bindBuffer(34962,L);for(let _=0;_<K.locationSize;_++)M(K.location+_,Ut/K.locationSize,kt,Gt,mt*St,(Jt+Ut/K.locationSize*_)*St)}else{if(tt.isInstancedBufferAttribute){for(let ut=0;ut<K.locationSize;ut++)y(K.location+ut,tt.meshPerAttribute);I.isInstancedMesh!==!0&&A._maxInstanceCount===void 0&&(A._maxInstanceCount=tt.meshPerAttribute*tt.count)}else for(let ut=0;ut<K.locationSize;ut++)Y(K.location+ut);s.bindBuffer(34962,L);for(let ut=0;ut<K.locationSize;ut++)M(K.location+ut,Ut/K.locationSize,kt,Gt,Ut*St,Ut/K.locationSize*ut*St)}}else if(P!==void 0){const Gt=P[$];if(Gt!==void 0)switch(Gt.length){case 2:s.vertexAttrib2fv(K.location,Gt);break;case 3:s.vertexAttrib3fv(K.location,Gt);break;case 4:s.vertexAttrib4fv(K.location,Gt);break;default:s.vertexAttrib1fv(K.location,Gt)}}}}x()}function Q(){G();for(const I in o){const C=o[I];for(const T in C){const A=C[T];for(const z in A)m(A[z].object),delete A[z];delete C[T]}delete o[I]}}function rt(I){if(o[I.id]===void 0)return;const C=o[I.id];for(const T in C){const A=C[T];for(const z in A)m(A[z].object),delete A[z];delete C[T]}delete o[I.id]}function E(I){for(const C in o){const T=o[C];if(T[I.id]===void 0)continue;const A=T[I.id];for(const z in A)m(A[z].object),delete A[z];delete T[I.id]}}function G(){w(),c!==l&&(c=l,u(c.object))}function w(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:d,reset:G,resetDefaultState:w,dispose:Q,releaseStatesOfGeometry:rt,releaseStatesOfProgram:E,initAttributes:p,enableAttribute:Y,disableUnusedAttributes:x}}function Ld(s,t,e,n){const i=n.isWebGL2;let r;function a(c){r=c}function o(c,d){s.drawArrays(r,c,d),e.update(d,r,1)}function l(c,d,h){if(h===0)return;let u,m;if(i)u=s,m="drawArraysInstanced";else if(u=t.get("ANGLE_instanced_arrays"),m="drawArraysInstancedANGLE",u===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}u[m](r,c,d,h),e.update(d,r,h)}this.setMode=a,this.render=o,this.renderInstances=l}function Qd(s,t,e){let n;function i(){if(n!==void 0)return n;if(t.has("EXT_texture_filter_anisotropic")===!0){const N=t.get("EXT_texture_filter_anisotropic");n=s.getParameter(N.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n}function r(N){if(N==="highp"){if(s.getShaderPrecisionFormat(35633,36338).precision>0&&s.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";N="mediump"}return N==="mediump"&&s.getShaderPrecisionFormat(35633,36337).precision>0&&s.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const a=typeof WebGL2RenderingContext!="undefined"&&s instanceof WebGL2RenderingContext||typeof WebGL2ComputeRenderingContext!="undefined"&&s instanceof WebGL2ComputeRenderingContext;let o=e.precision!==void 0?e.precision:"highp";const l=r(o);l!==o&&(console.warn("THREE.WebGLRenderer:",o,"not supported, using",l,"instead."),o=l);const c=a||t.has("WEBGL_draw_buffers"),d=e.logarithmicDepthBuffer===!0,h=s.getParameter(34930),u=s.getParameter(35660),m=s.getParameter(3379),b=s.getParameter(34076),g=s.getParameter(34921),Z=s.getParameter(36347),f=s.getParameter(36348),p=s.getParameter(36349),Y=u>0,y=a||t.has("OES_texture_float"),x=Y&&y,M=a?s.getParameter(36183):0;return{isWebGL2:a,drawBuffers:c,getMaxAnisotropy:i,getMaxPrecision:r,precision:o,logarithmicDepthBuffer:d,maxTextures:h,maxVertexTextures:u,maxTextureSize:m,maxCubemapSize:b,maxAttributes:g,maxVertexUniforms:Z,maxVaryings:f,maxFragmentUniforms:p,vertexTextures:Y,floatFragmentTextures:y,floatVertexTextures:x,maxSamples:M}}function jd(s){const t=this;let e=null,n=0,i=!1,r=!1;const a=new nn,o=new fe,l={value:null,needsUpdate:!1};this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(h,u,m){const b=h.length!==0||u||n!==0||i;return i=u,e=d(h,m,0),n=h.length,b},this.beginShadows=function(){r=!0,d(null)},this.endShadows=function(){r=!1,c()},this.setState=function(h,u,m){const b=h.clippingPlanes,g=h.clipIntersection,Z=h.clipShadows,f=s.get(h);if(!i||b===null||b.length===0||r&&!Z)r?d(null):c();else{const p=r?0:n,Y=p*4;let y=f.clippingState||null;l.value=y,y=d(b,u,Y,m);for(let x=0;x!==Y;++x)y[x]=e[x];f.clippingState=y,this.numIntersection=g?this.numPlanes:0,this.numPlanes+=p}};function c(){l.value!==e&&(l.value=e,l.needsUpdate=n>0),t.numPlanes=n,t.numIntersection=0}function d(h,u,m,b){const g=h!==null?h.length:0;let Z=null;if(g!==0){if(Z=l.value,b!==!0||Z===null){const f=m+g*4,p=u.matrixWorldInverse;o.getNormalMatrix(p),(Z===null||Z.length<f)&&(Z=new Float32Array(f));for(let Y=0,y=m;Y!==g;++Y,y+=4)a.copy(h[Y]).applyMatrix4(p,o),a.normal.toArray(Z,y),Z[y+3]=a.constant}l.value=Z,l.needsUpdate=!0}return t.numPlanes=g,t.numIntersection=0,Z}}function Od(s){let t=new WeakMap;function e(a,o){return o===303?a.mapping=301:o===304&&(a.mapping=302),a}function n(a){if(a&&a.isTexture&&a.isRenderTargetTexture===!1){const o=a.mapping;if(o===303||o===304)if(t.has(a)){const l=t.get(a).texture;return e(l,a.mapping)}else{const l=a.image;if(l&&l.height>0){const c=new Va(l.height/2);return c.fromEquirectangularTexture(s,a),t.set(a,c),a.addEventListener("dispose",i),e(c.texture,a.mapping)}else return null}}return a}function i(a){const o=a.target;o.removeEventListener("dispose",i);const l=t.get(o);l!==void 0&&(t.delete(o),l.dispose())}function r(){t=new WeakMap}return{get:n,dispose:r}}class lr extends sr{constructor(t=-1,e=1,n=1,i=-1,r=.1,a=2e3){super();this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=t,this.right=e,this.top=n,this.bottom=i,this.near=r,this.far=a,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=t.view===null?null:Object.assign({},t.view),this}setViewOffset(t,e,n,i,r,a){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let r=n-t,a=n+t,o=i+e,l=i-e;if(this.view!==null&&this.view.enabled){const c=(this.right-this.left)/this.view.fullWidth/this.zoom,d=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=c*this.view.offsetX,a=r+c*this.view.width,o-=d*this.view.offsetY,l=o-d*this.view.height}this.projectionMatrix.makeOrthographic(r,a,o,l,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,this.view!==null&&(e.object.view=Object.assign({},this.view)),e}}lr.prototype.isOrthographicCamera=!0;const Qn=4,Ra=[.125,.215,.35,.446,.526,.582],Xn=20,cr=new lr,Ya=new D;let dr=null;const wn=(1+Math.sqrt(5))/2,jn=1/wn,Xa=[new R(1,1,1),new R(-1,1,1),new R(1,1,-1),new R(-1,1,-1),new R(0,wn,jn),new R(0,wn,-jn),new R(jn,0,wn),new R(-jn,0,wn),new R(wn,jn,0),new R(-wn,jn,0)];class wa{constructor(t){this._renderer=t,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(t,e=0,n=.1,i=100){dr=this._renderer.getRenderTarget(),this._setSize(256);const r=this._allocateTargets();return r.depthBuffer=!0,this._sceneToCubeUV(t,n,i,r),e>0&&this._blur(r,0,0,e),this._applyPMREM(r),this._cleanup(r),r}fromEquirectangular(t,e=null){return this._fromTexture(t,e)}fromCubemap(t,e=null){return this._fromTexture(t,e)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=Fa(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=Na(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(t){this._lodMax=Math.floor(Math.log2(t)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let t=0;t<this._lodPlanes.length;t++)this._lodPlanes[t].dispose()}_cleanup(t){this._renderer.setRenderTarget(dr),t.scissorTest=!1,os(t,0,0,t.width,t.height)}_fromTexture(t,e){t.mapping===301||t.mapping===302?this._setSize(t.image.length===0?16:t.image[0].width||t.image[0].image.width):this._setSize(t.image.width/4),dr=this._renderer.getRenderTarget();const n=e||this._allocateTargets();return this._textureToCubeUV(t,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const t=3*Math.max(this._cubeSize,112),e=4*this._cubeSize-32,n={magFilter:1006,minFilter:1006,generateMipmaps:!1,type:1016,format:1023,encoding:3e3,depthBuffer:!1},i=Ma(t,e,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==t){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=Ma(t,e,n);const{_lodMax:r}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=Kd(r)),this._blurMaterial=qd(r,t,e)}return i}_compileMaterial(t){const e=new Ye(this._lodPlanes[0],t);this._renderer.compile(e,cr)}_sceneToCubeUV(t,e,n,i){const o=new Xe(90,1,e,n),l=[1,-1,1,1,1,1],c=[1,1,1,-1,-1,-1],d=this._renderer,h=d.autoClear,u=d.toneMapping;d.getClearColor(Ya),d.toneMapping=0,d.autoClear=!1;const m=new ji({name:"PMREM.Background",side:1,depthWrite:!1,depthTest:!1}),b=new Ye(new fi,m);let g=!1;const Z=t.background;Z?Z.isColor&&(m.color.copy(Z),t.background=null,g=!0):(m.color.copy(Ya),g=!0);for(let f=0;f<6;f++){const p=f%3;p===0?(o.up.set(0,l[f],0),o.lookAt(c[f],0,0)):p===1?(o.up.set(0,0,l[f]),o.lookAt(0,c[f],0)):(o.up.set(0,l[f],0),o.lookAt(0,0,c[f]));const Y=this._cubeSize;os(i,p*Y,f>2?Y:0,Y,Y),d.setRenderTarget(i),g&&d.render(b,o),d.render(t,o)}b.geometry.dispose(),b.material.dispose(),d.toneMapping=u,d.autoClear=h,t.background=Z}_textureToCubeUV(t,e){const n=this._renderer,i=t.mapping===301||t.mapping===302;i?(this._cubemapMaterial===null&&(this._cubemapMaterial=Fa()),this._cubemapMaterial.uniforms.flipEnvMap.value=t.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=Na());const r=i?this._cubemapMaterial:this._equirectMaterial,a=new Ye(this._lodPlanes[0],r),o=r.uniforms;o.envMap.value=t;const l=this._cubeSize;os(e,0,0,3*l,2*l),n.setRenderTarget(e),n.render(a,cr)}_applyPMREM(t){const e=this._renderer,n=e.autoClear;e.autoClear=!1;for(let i=1;i<this._lodPlanes.length;i++){const r=Math.sqrt(this._sigmas[i]*this._sigmas[i]-this._sigmas[i-1]*this._sigmas[i-1]),a=Xa[(i-1)%Xa.length];this._blur(t,i-1,i,r,a)}e.autoClear=n}_blur(t,e,n,i,r){const a=this._pingPongRenderTarget;this._halfBlur(t,a,e,n,i,"latitudinal",r),this._halfBlur(a,t,n,n,i,"longitudinal",r)}_halfBlur(t,e,n,i,r,a,o){const l=this._renderer,c=this._blurMaterial;a!=="latitudinal"&&a!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const d=3,h=new Ye(this._lodPlanes[i],c),u=c.uniforms,m=this._sizeLods[n]-1,b=isFinite(r)?Math.PI/(2*m):2*Math.PI/(2*Xn-1),g=r/b,Z=isFinite(r)?1+Math.floor(d*g):Xn;Z>Xn&&console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${Z} samples when the maximum is set to ${Xn}`);const f=[];let p=0;for(let N=0;N<Xn;++N){const Q=N/g,rt=Math.exp(-Q*Q/2);f.push(rt),N===0?p+=rt:N<Z&&(p+=2*rt)}for(let N=0;N<f.length;N++)f[N]=f[N]/p;u.envMap.value=t.texture,u.samples.value=Z,u.weights.value=f,u.latitudinal.value=a==="latitudinal",o&&(u.poleAxis.value=o);const{_lodMax:Y}=this;u.dTheta.value=b,u.mipInt.value=Y-n;const y=this._sizeLods[i],x=3*y*(i>Y-Qn?i-Y+Qn:0),M=4*(this._cubeSize-y);os(e,x,M,3*y,2*y),l.setRenderTarget(e),l.render(h,cr)}}function Kd(s){const t=[],e=[],n=[];let i=s;const r=s-Qn+1+Ra.length;for(let a=0;a<r;a++){const o=Math.pow(2,i);e.push(o);let l=1/o;a>s-Qn?l=Ra[a-s+Qn-1]:a===0&&(l=0),n.push(l);const c=1/(o-1),d=-c/2,h=1+c/2,u=[d,d,h,d,h,h,d,d,h,h,d,h],m=6,b=6,g=3,Z=2,f=1,p=new Float32Array(g*b*m),Y=new Float32Array(Z*b*m),y=new Float32Array(f*b*m);for(let M=0;M<m;M++){const N=M%3*2/3-1,Q=M>2?0:-1,rt=[N,Q,0,N+2/3,Q,0,N+2/3,Q+1,0,N,Q,0,N+2/3,Q+1,0,N,Q+1,0];p.set(rt,g*b*M),Y.set(u,Z*b*M);const E=[M,M,M,M,M,M];y.set(E,f*b*M)}const x=new Ot;x.setAttribute("position",new _t(p,g)),x.setAttribute("uv",new _t(Y,Z)),x.setAttribute("faceIndex",new _t(y,f)),t.push(x),i>Qn&&i--}return{lodPlanes:t,sizeLods:e,sigmas:n}}function Ma(s,t,e){const n=new ye(s,t,e);return n.texture.mapping=306,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function os(s,t,e,n,i){s.viewport.set(t,e,n,i),s.scissor.set(t,e,n,i)}function qd(s,t,e){const n=new Float32Array(Xn),i=new R(0,1,0);return new _e({name:"SphericalGaussianBlur",defines:{n:Xn,CUBEUV_TEXEL_WIDTH:1/t,CUBEUV_TEXEL_HEIGHT:1/e,CUBEUV_MAX_MIP:`${s}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:i}},vertexShader:hr(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:0,depthTest:!1,depthWrite:!1})}function Na(){return new _e({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:hr(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:0,depthTest:!1,depthWrite:!1})}function Fa(){return new _e({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:hr(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:0,depthTest:!1,depthWrite:!1})}function hr(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function $d(s){let t=new WeakMap,e=null;function n(o){if(o&&o.isTexture){const l=o.mapping,c=l===303||l===304,d=l===301||l===302;if(c||d)if(o.isRenderTargetTexture&&o.needsPMREMUpdate===!0){o.needsPMREMUpdate=!1;let h=t.get(o);return e===null&&(e=new wa(s)),h=c?e.fromEquirectangular(o,h):e.fromCubemap(o,h),t.set(o,h),h.texture}else{if(t.has(o))return t.get(o).texture;{const h=o.image;if(c&&h&&h.height>0||d&&h&&i(h)){e===null&&(e=new wa(s));const u=c?e.fromEquirectangular(o):e.fromCubemap(o);return t.set(o,u),o.addEventListener("dispose",r),u.texture}else return null}}}return o}function i(o){let l=0;const c=6;for(let d=0;d<c;d++)o[d]!==void 0&&l++;return l===c}function r(o){const l=o.target;l.removeEventListener("dispose",r);const c=t.get(l);c!==void 0&&(t.delete(l),c.dispose())}function a(){t=new WeakMap,e!==null&&(e.dispose(),e=null)}return{get:n,dispose:a}}function th(s){const t={};function e(n){if(t[n]!==void 0)return t[n];let i;switch(n){case"WEBGL_depth_texture":i=s.getExtension("WEBGL_depth_texture")||s.getExtension("MOZ_WEBGL_depth_texture")||s.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=s.getExtension("EXT_texture_filter_anisotropic")||s.getExtension("MOZ_EXT_texture_filter_anisotropic")||s.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=s.getExtension("WEBGL_compressed_texture_s3tc")||s.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||s.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=s.getExtension("WEBGL_compressed_texture_pvrtc")||s.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=s.getExtension(n)}return t[n]=i,i}return{has:function(n){return e(n)!==null},init:function(n){n.isWebGL2?e("EXT_color_buffer_float"):(e("WEBGL_depth_texture"),e("OES_texture_float"),e("OES_texture_half_float"),e("OES_texture_half_float_linear"),e("OES_standard_derivatives"),e("OES_element_index_uint"),e("OES_vertex_array_object"),e("ANGLE_instanced_arrays")),e("OES_texture_float_linear"),e("EXT_color_buffer_half_float"),e("WEBGL_multisampled_render_to_texture")},get:function(n){const i=e(n);return i===null&&console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),i}}}function eh(s,t,e,n){const i={},r=new WeakMap;function a(h){const u=h.target;u.index!==null&&t.remove(u.index);for(const b in u.attributes)t.remove(u.attributes[b]);u.removeEventListener("dispose",a),delete i[u.id];const m=r.get(u);m&&(t.remove(m),r.delete(u)),n.releaseStatesOfGeometry(u),u.isInstancedBufferGeometry===!0&&delete u._maxInstanceCount,e.memory.geometries--}function o(h,u){return i[u.id]===!0||(u.addEventListener("dispose",a),i[u.id]=!0,e.memory.geometries++),u}function l(h){const u=h.attributes;for(const b in u)t.update(u[b],34962);const m=h.morphAttributes;for(const b in m){const g=m[b];for(let Z=0,f=g.length;Z<f;Z++)t.update(g[Z],34962)}}function c(h){const u=[],m=h.index,b=h.attributes.position;let g=0;if(m!==null){const p=m.array;g=m.version;for(let Y=0,y=p.length;Y<y;Y+=3){const x=p[Y+0],M=p[Y+1],N=p[Y+2];u.push(x,M,M,N,N,x)}}else{const p=b.array;g=b.version;for(let Y=0,y=p.length/3-1;Y<y;Y+=3){const x=Y+0,M=Y+1,N=Y+2;u.push(x,M,M,N,N,x)}}const Z=new(aa(u)?ya:Wa)(u,1);Z.version=g;const f=r.get(h);f&&t.remove(f),r.set(h,Z)}function d(h){const u=r.get(h);if(u){const m=h.index;m!==null&&u.version<m.version&&c(h)}else c(h);return r.get(h)}return{get:o,update:l,getWireframeAttribute:d}}function nh(s,t,e,n){const i=n.isWebGL2;let r;function a(u){r=u}let o,l;function c(u){o=u.type,l=u.bytesPerElement}function d(u,m){s.drawElements(r,m,o,u*l),e.update(m,r,1)}function h(u,m,b){if(b===0)return;let g,Z;if(i)g=s,Z="drawElementsInstanced";else if(g=t.get("ANGLE_instanced_arrays"),Z="drawElementsInstancedANGLE",g===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}g[Z](r,m,o,u*l,b),e.update(m,r,b)}this.setMode=a,this.setIndex=c,this.render=d,this.renderInstances=h}function ih(s){const t={geometries:0,textures:0},e={frame:0,calls:0,triangles:0,points:0,lines:0};function n(r,a,o){switch(e.calls++,a){case 4:e.triangles+=o*(r/3);break;case 1:e.lines+=o*(r/2);break;case 3:e.lines+=o*(r-1);break;case 2:e.lines+=o*r;break;case 0:e.points+=o*r;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",a);break}}function i(){e.frame++,e.calls=0,e.triangles=0,e.points=0,e.lines=0}return{memory:t,render:e,programs:null,autoReset:!0,reset:i,update:n}}function sh(s,t){return s[0]-t[0]}function rh(s,t){return Math.abs(t[1])-Math.abs(s[1])}function ur(s,t){let e=1;const n=t.isInterleavedBufferAttribute?t.data.array:t.array;n instanceof Int8Array?e=127:n instanceof Int16Array?e=32767:n instanceof Int32Array?e=2147483647:console.error("THREE.WebGLMorphtargets: Unsupported morph attribute data type: ",n),s.divideScalar(e)}function ah(s,t,e){const n={},i=new Float32Array(8),r=new WeakMap,a=new Mt,o=[];for(let c=0;c<8;c++)o[c]=[c,0];function l(c,d,h,u){const m=c.morphTargetInfluences;if(t.isWebGL2===!0){const b=d.morphAttributes.position||d.morphAttributes.normal||d.morphAttributes.color,g=b!==void 0?b.length:0;let Z=r.get(d);if(Z===void 0||Z.count!==g){let T=function(){I.dispose(),r.delete(d),d.removeEventListener("dispose",T)};Z!==void 0&&Z.texture.dispose();const Y=d.morphAttributes.position!==void 0,y=d.morphAttributes.normal!==void 0,x=d.morphAttributes.color!==void 0,M=d.morphAttributes.position||[],N=d.morphAttributes.normal||[],Q=d.morphAttributes.color||[];let rt=0;Y===!0&&(rt=1),y===!0&&(rt=2),x===!0&&(rt=3);let E=d.attributes.position.count*rt,G=1;E>t.maxTextureSize&&(G=Math.ceil(E/t.maxTextureSize),E=t.maxTextureSize);const w=new Float32Array(E*G*4*g),I=new zi(w,E,G,g);I.format=1023,I.type=1015,I.needsUpdate=!0;const C=rt*4;for(let A=0;A<g;A++){const z=M[A],S=N[A],P=Q[A],$=E*G*4*A;for(let K=0;K<z.count;K++){const tt=K*C;Y===!0&&(a.fromBufferAttribute(z,K),z.normalized===!0&&ur(a,z),w[$+tt+0]=a.x,w[$+tt+1]=a.y,w[$+tt+2]=a.z,w[$+tt+3]=0),y===!0&&(a.fromBufferAttribute(S,K),S.normalized===!0&&ur(a,S),w[$+tt+4]=a.x,w[$+tt+5]=a.y,w[$+tt+6]=a.z,w[$+tt+7]=0),x===!0&&(a.fromBufferAttribute(P,K),P.normalized===!0&&ur(a,S),w[$+tt+8]=a.x,w[$+tt+9]=a.y,w[$+tt+10]=a.z,w[$+tt+11]=P.itemSize===4?a.w:1)}}Z={count:g,texture:I,size:new q(E,G)},r.set(d,Z),d.addEventListener("dispose",T)}let f=0;for(let Y=0;Y<m.length;Y++)f+=m[Y];const p=d.morphTargetsRelative?1:1-f;u.getUniforms().setValue(s,"morphTargetBaseInfluence",p),u.getUniforms().setValue(s,"morphTargetInfluences",m),u.getUniforms().setValue(s,"morphTargetsTexture",Z.texture,e),u.getUniforms().setValue(s,"morphTargetsTextureSize",Z.size)}else{const b=m===void 0?0:m.length;let g=n[d.id];if(g===void 0||g.length!==b){g=[];for(let y=0;y<b;y++)g[y]=[y,0];n[d.id]=g}for(let y=0;y<b;y++){const x=g[y];x[0]=y,x[1]=m[y]}g.sort(rh);for(let y=0;y<8;y++)y<b&&g[y][1]?(o[y][0]=g[y][0],o[y][1]=g[y][1]):(o[y][0]=Number.MAX_SAFE_INTEGER,o[y][1]=0);o.sort(sh);const Z=d.morphAttributes.position,f=d.morphAttributes.normal;let p=0;for(let y=0;y<8;y++){const x=o[y],M=x[0],N=x[1];M!==Number.MAX_SAFE_INTEGER&&N?(Z&&d.getAttribute("morphTarget"+y)!==Z[M]&&d.setAttribute("morphTarget"+y,Z[M]),f&&d.getAttribute("morphNormal"+y)!==f[M]&&d.setAttribute("morphNormal"+y,f[M]),i[y]=N,p+=N):(Z&&d.hasAttribute("morphTarget"+y)===!0&&d.deleteAttribute("morphTarget"+y),f&&d.hasAttribute("morphNormal"+y)===!0&&d.deleteAttribute("morphNormal"+y),i[y]=0)}const Y=d.morphTargetsRelative?1:1-p;u.getUniforms().setValue(s,"morphTargetBaseInfluence",Y),u.getUniforms().setValue(s,"morphTargetInfluences",i)}}return{update:l}}function oh(s,t,e,n){let i=new WeakMap;function r(l){const c=n.render.frame,d=l.geometry,h=t.get(l,d);return i.get(h)!==c&&(t.update(h),i.set(h,c)),l.isInstancedMesh&&(l.hasEventListener("dispose",o)===!1&&l.addEventListener("dispose",o),e.update(l.instanceMatrix,34962),l.instanceColor!==null&&e.update(l.instanceColor,34962)),h}function a(){i=new WeakMap}function o(l){const c=l.target;c.removeEventListener("dispose",o),e.remove(c.instanceMatrix),c.instanceColor!==null&&e.remove(c.instanceColor)}return{update:r,dispose:a}}const Sa=new se,Ia=new zi,Ba=new Ds,Ca=new rs,Aa=[],_a=[],Ja=new Float32Array(16),Ta=new Float32Array(9),Da=new Float32Array(4);function On(s,t,e){const n=s[0];if(n<=0||n>0)return s;const i=t*e;let r=Aa[i];if(r===void 0&&(r=new Float32Array(i),Aa[i]=r),t!==0){n.toArray(r,0);for(let a=1,o=0;a!==t;++a)o+=e,s[a].toArray(r,o)}return r}function xe(s,t){if(s.length!==t.length)return!1;for(let e=0,n=s.length;e<n;e++)if(s[e]!==t[e])return!1;return!0}function Ge(s,t){for(let e=0,n=t.length;e<n;e++)s[e]=t[e]}function ls(s,t){let e=_a[t];e===void 0&&(e=new Int32Array(t),_a[t]=e);for(let n=0;n!==t;++n)e[n]=s.allocateTextureUnit();return e}function lh(s,t){const e=this.cache;e[0]!==t&&(s.uniform1f(this.addr,t),e[0]=t)}function ch(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y)&&(s.uniform2f(this.addr,t.x,t.y),e[0]=t.x,e[1]=t.y);else{if(xe(e,t))return;s.uniform2fv(this.addr,t),Ge(e,t)}}function dh(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z)&&(s.uniform3f(this.addr,t.x,t.y,t.z),e[0]=t.x,e[1]=t.y,e[2]=t.z);else if(t.r!==void 0)(e[0]!==t.r||e[1]!==t.g||e[2]!==t.b)&&(s.uniform3f(this.addr,t.r,t.g,t.b),e[0]=t.r,e[1]=t.g,e[2]=t.b);else{if(xe(e,t))return;s.uniform3fv(this.addr,t),Ge(e,t)}}function hh(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z||e[3]!==t.w)&&(s.uniform4f(this.addr,t.x,t.y,t.z,t.w),e[0]=t.x,e[1]=t.y,e[2]=t.z,e[3]=t.w);else{if(xe(e,t))return;s.uniform4fv(this.addr,t),Ge(e,t)}}function uh(s,t){const e=this.cache,n=t.elements;if(n===void 0){if(xe(e,t))return;s.uniformMatrix2fv(this.addr,!1,t),Ge(e,t)}else{if(xe(e,n))return;Da.set(n),s.uniformMatrix2fv(this.addr,!1,Da),Ge(e,n)}}function mh(s,t){const e=this.cache,n=t.elements;if(n===void 0){if(xe(e,t))return;s.uniformMatrix3fv(this.addr,!1,t),Ge(e,t)}else{if(xe(e,n))return;Ta.set(n),s.uniformMatrix3fv(this.addr,!1,Ta),Ge(e,n)}}function ph(s,t){const e=this.cache,n=t.elements;if(n===void 0){if(xe(e,t))return;s.uniformMatrix4fv(this.addr,!1,t),Ge(e,t)}else{if(xe(e,n))return;Ja.set(n),s.uniformMatrix4fv(this.addr,!1,Ja),Ge(e,n)}}function fh(s,t){const e=this.cache;e[0]!==t&&(s.uniform1i(this.addr,t),e[0]=t)}function bh(s,t){const e=this.cache;xe(e,t)||(s.uniform2iv(this.addr,t),Ge(e,t))}function gh(s,t){const e=this.cache;xe(e,t)||(s.uniform3iv(this.addr,t),Ge(e,t))}function Zh(s,t){const e=this.cache;xe(e,t)||(s.uniform4iv(this.addr,t),Ge(e,t))}function Gh(s,t){const e=this.cache;e[0]!==t&&(s.uniform1ui(this.addr,t),e[0]=t)}function Wh(s,t){const e=this.cache;xe(e,t)||(s.uniform2uiv(this.addr,t),Ge(e,t))}function yh(s,t){const e=this.cache;xe(e,t)||(s.uniform3uiv(this.addr,t),Ge(e,t))}function xh(s,t){const e=this.cache;xe(e,t)||(s.uniform4uiv(this.addr,t),Ge(e,t))}function Vh(s,t,e){const n=this.cache,i=e.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),e.setTexture2D(t||Sa,i)}function vh(s,t,e){const n=this.cache,i=e.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),e.setTexture3D(t||Ba,i)}function Rh(s,t,e){const n=this.cache,i=e.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),e.setTextureCube(t||Ca,i)}function Yh(s,t,e){const n=this.cache,i=e.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),e.setTexture2DArray(t||Ia,i)}function Xh(s){switch(s){case 5126:return lh;case 35664:return ch;case 35665:return dh;case 35666:return hh;case 35674:return uh;case 35675:return mh;case 35676:return ph;case 5124:case 35670:return fh;case 35667:case 35671:return bh;case 35668:case 35672:return gh;case 35669:case 35673:return Zh;case 5125:return Gh;case 36294:return Wh;case 36295:return yh;case 36296:return xh;case 35678:case 36198:case 36298:case 36306:case 35682:return Vh;case 35679:case 36299:case 36307:return vh;case 35680:case 36300:case 36308:case 36293:return Rh;case 36289:case 36303:case 36311:case 36292:return Yh}}function wh(s,t){s.uniform1fv(this.addr,t)}function Mh(s,t){const e=On(t,this.size,2);s.uniform2fv(this.addr,e)}function Nh(s,t){const e=On(t,this.size,3);s.uniform3fv(this.addr,e)}function Fh(s,t){const e=On(t,this.size,4);s.uniform4fv(this.addr,e)}function Sh(s,t){const e=On(t,this.size,4);s.uniformMatrix2fv(this.addr,!1,e)}function Ih(s,t){const e=On(t,this.size,9);s.uniformMatrix3fv(this.addr,!1,e)}function Bh(s,t){const e=On(t,this.size,16);s.uniformMatrix4fv(this.addr,!1,e)}function Ch(s,t){s.uniform1iv(this.addr,t)}function Ah(s,t){s.uniform2iv(this.addr,t)}function _h(s,t){s.uniform3iv(this.addr,t)}function Jh(s,t){s.uniform4iv(this.addr,t)}function Th(s,t){s.uniform1uiv(this.addr,t)}function Dh(s,t){s.uniform2uiv(this.addr,t)}function zh(s,t){s.uniform3uiv(this.addr,t)}function Eh(s,t){s.uniform4uiv(this.addr,t)}function Hh(s,t,e){const n=t.length,i=ls(e,n);s.uniform1iv(this.addr,i);for(let r=0;r!==n;++r)e.setTexture2D(t[r]||Sa,i[r])}function Uh(s,t,e){const n=t.length,i=ls(e,n);s.uniform1iv(this.addr,i);for(let r=0;r!==n;++r)e.setTexture3D(t[r]||Ba,i[r])}function kh(s,t,e){const n=t.length,i=ls(e,n);s.uniform1iv(this.addr,i);for(let r=0;r!==n;++r)e.setTextureCube(t[r]||Ca,i[r])}function Ph(s,t,e){const n=t.length,i=ls(e,n);s.uniform1iv(this.addr,i);for(let r=0;r!==n;++r)e.setTexture2DArray(t[r]||Ia,i[r])}function Lh(s){switch(s){case 5126:return wh;case 35664:return Mh;case 35665:return Nh;case 35666:return Fh;case 35674:return Sh;case 35675:return Ih;case 35676:return Bh;case 5124:case 35670:return Ch;case 35667:case 35671:return Ah;case 35668:case 35672:return _h;case 35669:case 35673:return Jh;case 5125:return Th;case 36294:return Dh;case 36295:return zh;case 36296:return Eh;case 35678:case 36198:case 36298:case 36306:case 35682:return Hh;case 35679:case 36299:case 36307:return Uh;case 35680:case 36300:case 36308:case 36293:return kh;case 36289:case 36303:case 36311:case 36292:return Ph}}function Qh(s,t,e){this.id=s,this.addr=e,this.cache=[],this.setValue=Xh(t.type)}function za(s,t,e){this.id=s,this.addr=e,this.cache=[],this.size=t.size,this.setValue=Lh(t.type)}za.prototype.updateCache=function(s){const t=this.cache;s instanceof Float32Array&&t.length!==s.length&&(this.cache=new Float32Array(s.length)),Ge(t,s)};function Ea(s){this.id=s,this.seq=[],this.map={}}Ea.prototype.setValue=function(s,t,e){const n=this.seq;for(let i=0,r=n.length;i!==r;++i){const a=n[i];a.setValue(s,t[a.id],e)}};const mr=/(\w+)(\])?(\[|\.)?/g;function Ha(s,t){s.seq.push(t),s.map[t.id]=t}function jh(s,t,e){const n=s.name,i=n.length;for(mr.lastIndex=0;;){const r=mr.exec(n),a=mr.lastIndex;let o=r[1];const l=r[2]==="]",c=r[3];if(l&&(o=o|0),c===void 0||c==="["&&a+2===i){Ha(e,c===void 0?new Qh(o,s,t):new za(o,s,t));break}else{let h=e.map[o];h===void 0&&(h=new Ea(o),Ha(e,h)),e=h}}}function un(s,t){this.seq=[],this.map={};const e=s.getProgramParameter(t,35718);for(let n=0;n<e;++n){const i=s.getActiveUniform(t,n),r=s.getUniformLocation(t,i.name);jh(i,r,this)}}un.prototype.setValue=function(s,t,e,n){const i=this.map[t];i!==void 0&&i.setValue(s,e,n)},un.prototype.setOptional=function(s,t,e){const n=t[e];n!==void 0&&this.setValue(s,e,n)},un.upload=function(s,t,e,n){for(let i=0,r=t.length;i!==r;++i){const a=t[i],o=e[a.id];o.needsUpdate!==!1&&a.setValue(s,o.value,n)}},un.seqWithValue=function(s,t){const e=[];for(let n=0,i=s.length;n!==i;++n){const r=s[n];r.id in t&&e.push(r)}return e};function Ua(s,t,e){const n=s.createShader(t);return s.shaderSource(n,e),s.compileShader(n),n}let Oh=0;function Kh(s){const t=s.split(`
`);for(let e=0;e<t.length;e++)t[e]=e+1+": "+t[e];return t.join(`
`)}function qh(s){switch(s){case 3e3:return["Linear","( value )"];case 3001:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",s),["Linear","( value )"]}}function ka(s,t,e){const n=s.getShaderParameter(t,35713),i=s.getShaderInfoLog(t).trim();return n&&i===""?"":e.toUpperCase()+`

`+i+`

`+Kh(s.getShaderSource(t))}function $h(s,t){const e=qh(t);return"vec4 "+s+"( vec4 value ) { return LinearTo"+e[0]+e[1]+"; }"}function tu(s,t){let e;switch(t){case 1:e="Linear";break;case 2:e="Reinhard";break;case 3:e="OptimizedCineon";break;case 4:e="ACESFilmic";break;case 5:e="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",t),e="Linear"}return"vec3 "+s+"( vec3 color ) { return "+e+"ToneMapping( color ); }"}function eu(s){return[s.extensionDerivatives||!!s.envMapCubeUVHeight||s.bumpMap||s.tangentSpaceNormalMap||s.clearcoatNormalMap||s.flatShading||s.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(s.extensionFragDepth||s.logarithmicDepthBuffer)&&s.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",s.extensionDrawBuffers&&s.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(s.extensionShaderTextureLOD||s.envMap||s.transmission)&&s.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(gi).join(`
`)}function nu(s){const t=[];for(const e in s){const n=s[e];n!==!1&&t.push("#define "+e+" "+n)}return t.join(`
`)}function iu(s,t){const e={},n=s.getProgramParameter(t,35721);for(let i=0;i<n;i++){const r=s.getActiveAttrib(t,i),a=r.name;let o=1;r.type===35674&&(o=2),r.type===35675&&(o=3),r.type===35676&&(o=4),e[a]={type:r.type,location:s.getAttribLocation(t,a),locationSize:o}}return e}function gi(s){return s!==""}function Pa(s,t){return s.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function La(s,t){return s.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}const su=/^[ \t]*#include +<([\w\d./]+)>/gm;function pr(s){return s.replace(su,ru)}function ru(s,t){const e=At[t];if(e===void 0)throw new Error("Can not resolve #include <"+t+">");return pr(e)}const au=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,ou=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Qa(s){return s.replace(ou,ja).replace(au,lu)}function lu(s,t,e,n){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),ja(s,t,e,n)}function ja(s,t,e,n){let i="";for(let r=parseInt(t);r<parseInt(e);r++)i+=n.replace(/\[\s*i\s*\]/g,"[ "+r+" ]").replace(/UNROLLED_LOOP_INDEX/g,r);return i}function Oa(s){let t="precision "+s.precision+` float;
precision `+s.precision+" int;";return s.precision==="highp"?t+=`
#define HIGH_PRECISION`:s.precision==="mediump"?t+=`
#define MEDIUM_PRECISION`:s.precision==="lowp"&&(t+=`
#define LOW_PRECISION`),t}function cu(s){let t="SHADOWMAP_TYPE_BASIC";return s.shadowMapType===1?t="SHADOWMAP_TYPE_PCF":s.shadowMapType===2?t="SHADOWMAP_TYPE_PCF_SOFT":s.shadowMapType===3&&(t="SHADOWMAP_TYPE_VSM"),t}function du(s){let t="ENVMAP_TYPE_CUBE";if(s.envMap)switch(s.envMapMode){case 301:case 302:t="ENVMAP_TYPE_CUBE";break;case 306:case 307:t="ENVMAP_TYPE_CUBE_UV";break}return t}function hu(s){let t="ENVMAP_MODE_REFLECTION";if(s.envMap)switch(s.envMapMode){case 302:case 307:t="ENVMAP_MODE_REFRACTION";break}return t}function uu(s){let t="ENVMAP_BLENDING_NONE";if(s.envMap)switch(s.combine){case 0:t="ENVMAP_BLENDING_MULTIPLY";break;case 1:t="ENVMAP_BLENDING_MIX";break;case 2:t="ENVMAP_BLENDING_ADD";break}return t}function mu(s){const t=s.envMapCubeUVHeight;if(t===null)return null;const e=Math.log2(t/32+1)+3,n=1/t;return{texelWidth:1/(3*Math.max(Math.pow(2,e),7*16)),texelHeight:n,maxMip:e}}function pu(s,t,e,n){const i=s.getContext(),r=e.defines;let a=e.vertexShader,o=e.fragmentShader;const l=cu(e),c=du(e),d=hu(e),h=uu(e),u=mu(e),m=e.isWebGL2?"":eu(e),b=nu(r),g=i.createProgram();let Z,f,p=e.glslVersion?"#version "+e.glslVersion+`
`:"";e.isRawShaderMaterial?(Z=[b].filter(gi).join(`
`),Z.length>0&&(Z+=`
`),f=[m,b].filter(gi).join(`
`),f.length>0&&(f+=`
`)):(Z=[Oa(e),"#define SHADER_NAME "+e.shaderName,b,e.instancing?"#define USE_INSTANCING":"",e.instancingColor?"#define USE_INSTANCING_COLOR":"",e.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define MAX_BONES "+e.maxBones,e.useFog&&e.fog?"#define USE_FOG":"",e.useFog&&e.fogExp2?"#define FOG_EXP2":"",e.map?"#define USE_MAP":"",e.envMap?"#define USE_ENVMAP":"",e.envMap?"#define "+d:"",e.lightMap?"#define USE_LIGHTMAP":"",e.aoMap?"#define USE_AOMAP":"",e.emissiveMap?"#define USE_EMISSIVEMAP":"",e.bumpMap?"#define USE_BUMPMAP":"",e.normalMap?"#define USE_NORMALMAP":"",e.normalMap&&e.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",e.normalMap&&e.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",e.clearcoatMap?"#define USE_CLEARCOATMAP":"",e.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",e.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",e.displacementMap&&e.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",e.specularMap?"#define USE_SPECULARMAP":"",e.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",e.specularColorMap?"#define USE_SPECULARCOLORMAP":"",e.roughnessMap?"#define USE_ROUGHNESSMAP":"",e.metalnessMap?"#define USE_METALNESSMAP":"",e.alphaMap?"#define USE_ALPHAMAP":"",e.transmission?"#define USE_TRANSMISSION":"",e.transmissionMap?"#define USE_TRANSMISSIONMAP":"",e.thicknessMap?"#define USE_THICKNESSMAP":"",e.sheenColorMap?"#define USE_SHEENCOLORMAP":"",e.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",e.vertexTangents?"#define USE_TANGENT":"",e.vertexColors?"#define USE_COLOR":"",e.vertexAlphas?"#define USE_COLOR_ALPHA":"",e.vertexUvs?"#define USE_UV":"",e.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",e.flatShading?"#define FLAT_SHADED":"",e.skinning?"#define USE_SKINNING":"",e.useVertexTexture?"#define BONE_TEXTURE":"",e.morphTargets?"#define USE_MORPHTARGETS":"",e.morphNormals&&e.flatShading===!1?"#define USE_MORPHNORMALS":"",e.morphColors&&e.isWebGL2?"#define USE_MORPHCOLORS":"",e.morphTargetsCount>0&&e.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",e.morphTargetsCount>0&&e.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+e.morphTextureStride:"",e.morphTargetsCount>0&&e.isWebGL2?"#define MORPHTARGETS_COUNT "+e.morphTargetsCount:"",e.doubleSided?"#define DOUBLE_SIDED":"",e.flipSided?"#define FLIP_SIDED":"",e.shadowMapEnabled?"#define USE_SHADOWMAP":"",e.shadowMapEnabled?"#define "+l:"",e.sizeAttenuation?"#define USE_SIZEATTENUATION":"",e.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",e.logarithmicDepthBuffer&&e.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(gi).join(`
`),f=[m,Oa(e),"#define SHADER_NAME "+e.shaderName,b,e.useFog&&e.fog?"#define USE_FOG":"",e.useFog&&e.fogExp2?"#define FOG_EXP2":"",e.map?"#define USE_MAP":"",e.matcap?"#define USE_MATCAP":"",e.envMap?"#define USE_ENVMAP":"",e.envMap?"#define "+c:"",e.envMap?"#define "+d:"",e.envMap?"#define "+h:"",u?"#define CUBEUV_TEXEL_WIDTH "+u.texelWidth:"",u?"#define CUBEUV_TEXEL_HEIGHT "+u.texelHeight:"",u?"#define CUBEUV_MAX_MIP "+u.maxMip+".0":"",e.lightMap?"#define USE_LIGHTMAP":"",e.aoMap?"#define USE_AOMAP":"",e.emissiveMap?"#define USE_EMISSIVEMAP":"",e.bumpMap?"#define USE_BUMPMAP":"",e.normalMap?"#define USE_NORMALMAP":"",e.normalMap&&e.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",e.normalMap&&e.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",e.clearcoat?"#define USE_CLEARCOAT":"",e.clearcoatMap?"#define USE_CLEARCOATMAP":"",e.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",e.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",e.specularMap?"#define USE_SPECULARMAP":"",e.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",e.specularColorMap?"#define USE_SPECULARCOLORMAP":"",e.roughnessMap?"#define USE_ROUGHNESSMAP":"",e.metalnessMap?"#define USE_METALNESSMAP":"",e.alphaMap?"#define USE_ALPHAMAP":"",e.alphaTest?"#define USE_ALPHATEST":"",e.sheen?"#define USE_SHEEN":"",e.sheenColorMap?"#define USE_SHEENCOLORMAP":"",e.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",e.transmission?"#define USE_TRANSMISSION":"",e.transmissionMap?"#define USE_TRANSMISSIONMAP":"",e.thicknessMap?"#define USE_THICKNESSMAP":"",e.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",e.vertexTangents?"#define USE_TANGENT":"",e.vertexColors||e.instancingColor?"#define USE_COLOR":"",e.vertexAlphas?"#define USE_COLOR_ALPHA":"",e.vertexUvs?"#define USE_UV":"",e.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",e.gradientMap?"#define USE_GRADIENTMAP":"",e.flatShading?"#define FLAT_SHADED":"",e.doubleSided?"#define DOUBLE_SIDED":"",e.flipSided?"#define FLIP_SIDED":"",e.shadowMapEnabled?"#define USE_SHADOWMAP":"",e.shadowMapEnabled?"#define "+l:"",e.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",e.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",e.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",e.logarithmicDepthBuffer&&e.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",e.toneMapping!==0?"#define TONE_MAPPING":"",e.toneMapping!==0?At.tonemapping_pars_fragment:"",e.toneMapping!==0?tu("toneMapping",e.toneMapping):"",e.dithering?"#define DITHERING":"",e.opaque?"#define OPAQUE":"",At.encodings_pars_fragment,$h("linearToOutputTexel",e.outputEncoding),e.depthPacking?"#define DEPTH_PACKING "+e.depthPacking:"",`
`].filter(gi).join(`
`)),a=pr(a),a=Pa(a,e),a=La(a,e),o=pr(o),o=Pa(o,e),o=La(o,e),a=Qa(a),o=Qa(o),e.isWebGL2&&e.isRawShaderMaterial!==!0&&(p=`#version 300 es
`,Z=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+Z,f=["#define varying in",e.glslVersion===sa?"":"layout(location = 0) out highp vec4 pc_fragColor;",e.glslVersion===sa?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+f);const Y=p+Z+a,y=p+f+o,x=Ua(i,35633,Y),M=Ua(i,35632,y);if(i.attachShader(g,x),i.attachShader(g,M),e.index0AttributeName!==void 0?i.bindAttribLocation(g,0,e.index0AttributeName):e.morphTargets===!0&&i.bindAttribLocation(g,0,"position"),i.linkProgram(g),s.debug.checkShaderErrors){const rt=i.getProgramInfoLog(g).trim(),E=i.getShaderInfoLog(x).trim(),G=i.getShaderInfoLog(M).trim();let w=!0,I=!0;if(i.getProgramParameter(g,35714)===!1){w=!1;const C=ka(i,x,"vertex"),T=ka(i,M,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(g,35715)+`

Program Info Log: `+rt+`
`+C+`
`+T)}else rt!==""?console.warn("THREE.WebGLProgram: Program Info Log:",rt):(E===""||G==="")&&(I=!1);I&&(this.diagnostics={runnable:w,programLog:rt,vertexShader:{log:E,prefix:Z},fragmentShader:{log:G,prefix:f}})}i.deleteShader(x),i.deleteShader(M);let N;this.getUniforms=function(){return N===void 0&&(N=new un(i,g)),N};let Q;return this.getAttributes=function(){return Q===void 0&&(Q=iu(i,g)),Q},this.destroy=function(){n.releaseStatesOfProgram(this),i.deleteProgram(g),this.program=void 0},this.name=e.shaderName,this.id=Oh++,this.cacheKey=t,this.usedTimes=1,this.program=g,this.vertexShader=x,this.fragmentShader=M,this}let fu=0;class bu{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(t){const e=t.vertexShader,n=t.fragmentShader,i=this._getShaderStage(e),r=this._getShaderStage(n),a=this._getShaderCacheForMaterial(t);return a.has(i)===!1&&(a.add(i),i.usedTimes++),a.has(r)===!1&&(a.add(r),r.usedTimes++),this}remove(t){const e=this.materialCache.get(t);for(const n of e)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n);return this.materialCache.delete(t),this}getVertexShaderID(t){return this._getShaderStage(t.vertexShader).id}getFragmentShaderID(t){return this._getShaderStage(t.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(t){const e=this.materialCache;return e.has(t)===!1&&e.set(t,new Set),e.get(t)}_getShaderStage(t){const e=this.shaderCache;if(e.has(t)===!1){const n=new gu;e.set(t,n)}return e.get(t)}}class gu{constructor(){this.id=fu++,this.usedTimes=0}}function Zu(s,t,e,n,i,r,a){const o=new ma,l=new bu,c=[],d=i.isWebGL2,h=i.logarithmicDepthBuffer,u=i.floatVertexTextures,m=i.maxVertexUniforms,b=i.vertexTextures;let g=i.precision;const Z={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function f(G){const I=G.skeleton.bones;if(u)return 1024;{const T=Math.floor((m-20)/4),A=Math.min(T,I.length);return A<I.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+I.length+" bones. This GPU supports "+A+"."),0):A}}function p(G,w,I,C,T){const A=C.fog,z=T.geometry,S=G.isMeshStandardMaterial?C.environment:null,P=(G.isMeshStandardMaterial?e:t).get(G.envMap||S),$=!!P&&(P.mapping===306||P.mapping===307)?P.image.height:null,K=Z[G.type],tt=T.isSkinnedMesh?f(T):0;G.precision!==null&&(g=i.getMaxPrecision(G.precision),g!==G.precision&&console.warn("THREE.WebGLProgram.getParameters:",G.precision,"not supported, using",g,"instead."));const Gt=z.morphAttributes.position||z.morphAttributes.normal||z.morphAttributes.color,Ut=Gt!==void 0?Gt.length:0;let Vt=0;z.morphAttributes.position!==void 0&&(Vt=1),z.morphAttributes.normal!==void 0&&(Vt=2),z.morphAttributes.color!==void 0&&(Vt=3);let L,kt,St,ut;if(K){const nt=De[K];L=nt.vertexShader,kt=nt.fragmentShader}else L=G.vertexShader,kt=G.fragmentShader,l.update(G),St=l.getVertexShaderID(G),ut=l.getFragmentShaderID(G);const mt=s.getRenderTarget(),Jt=G.alphaTest>0,_=G.clearcoat>0;return{isWebGL2:d,shaderID:K,shaderName:G.type,vertexShader:L,fragmentShader:kt,defines:G.defines,customVertexShaderID:St,customFragmentShaderID:ut,isRawShaderMaterial:G.isRawShaderMaterial===!0,glslVersion:G.glslVersion,precision:g,instancing:T.isInstancedMesh===!0,instancingColor:T.isInstancedMesh===!0&&T.instanceColor!==null,supportsVertexTextures:b,outputEncoding:mt===null?s.outputEncoding:mt.isXRRenderTarget===!0?mt.texture.encoding:3e3,map:!!G.map,matcap:!!G.matcap,envMap:!!P,envMapMode:P&&P.mapping,envMapCubeUVHeight:$,lightMap:!!G.lightMap,aoMap:!!G.aoMap,emissiveMap:!!G.emissiveMap,bumpMap:!!G.bumpMap,normalMap:!!G.normalMap,objectSpaceNormalMap:G.normalMapType===1,tangentSpaceNormalMap:G.normalMapType===0,decodeVideoTexture:!!G.map&&G.map.isVideoTexture===!0&&G.map.encoding===3001,clearcoat:_,clearcoatMap:_&&!!G.clearcoatMap,clearcoatRoughnessMap:_&&!!G.clearcoatRoughnessMap,clearcoatNormalMap:_&&!!G.clearcoatNormalMap,displacementMap:!!G.displacementMap,roughnessMap:!!G.roughnessMap,metalnessMap:!!G.metalnessMap,specularMap:!!G.specularMap,specularIntensityMap:!!G.specularIntensityMap,specularColorMap:!!G.specularColorMap,opaque:G.transparent===!1&&G.blending===1,alphaMap:!!G.alphaMap,alphaTest:Jt,gradientMap:!!G.gradientMap,sheen:G.sheen>0,sheenColorMap:!!G.sheenColorMap,sheenRoughnessMap:!!G.sheenRoughnessMap,transmission:G.transmission>0,transmissionMap:!!G.transmissionMap,thicknessMap:!!G.thicknessMap,combine:G.combine,vertexTangents:!!G.normalMap&&!!z.attributes.tangent,vertexColors:G.vertexColors,vertexAlphas:G.vertexColors===!0&&!!z.attributes.color&&z.attributes.color.itemSize===4,vertexUvs:!!G.map||!!G.bumpMap||!!G.normalMap||!!G.specularMap||!!G.alphaMap||!!G.emissiveMap||!!G.roughnessMap||!!G.metalnessMap||!!G.clearcoatMap||!!G.clearcoatRoughnessMap||!!G.clearcoatNormalMap||!!G.displacementMap||!!G.transmissionMap||!!G.thicknessMap||!!G.specularIntensityMap||!!G.specularColorMap||!!G.sheenColorMap||!!G.sheenRoughnessMap,uvsVertexOnly:!(!!G.map||!!G.bumpMap||!!G.normalMap||!!G.specularMap||!!G.alphaMap||!!G.emissiveMap||!!G.roughnessMap||!!G.metalnessMap||!!G.clearcoatNormalMap||G.transmission>0||!!G.transmissionMap||!!G.thicknessMap||!!G.specularIntensityMap||!!G.specularColorMap||G.sheen>0||!!G.sheenColorMap||!!G.sheenRoughnessMap)&&!!G.displacementMap,fog:!!A,useFog:G.fog,fogExp2:A&&A.isFogExp2,flatShading:!!G.flatShading,sizeAttenuation:G.sizeAttenuation,logarithmicDepthBuffer:h,skinning:T.isSkinnedMesh===!0&&tt>0,maxBones:tt,useVertexTexture:u,morphTargets:z.morphAttributes.position!==void 0,morphNormals:z.morphAttributes.normal!==void 0,morphColors:z.morphAttributes.color!==void 0,morphTargetsCount:Ut,morphTextureStride:Vt,numDirLights:w.directional.length,numPointLights:w.point.length,numSpotLights:w.spot.length,numRectAreaLights:w.rectArea.length,numHemiLights:w.hemi.length,numDirLightShadows:w.directionalShadowMap.length,numPointLightShadows:w.pointShadowMap.length,numSpotLightShadows:w.spotShadowMap.length,numClippingPlanes:a.numPlanes,numClipIntersection:a.numIntersection,dithering:G.dithering,shadowMapEnabled:s.shadowMap.enabled&&I.length>0,shadowMapType:s.shadowMap.type,toneMapping:G.toneMapped?s.toneMapping:0,physicallyCorrectLights:s.physicallyCorrectLights,premultipliedAlpha:G.premultipliedAlpha,doubleSided:G.side===2,flipSided:G.side===1,depthPacking:G.depthPacking!==void 0?G.depthPacking:!1,index0AttributeName:G.index0AttributeName,extensionDerivatives:G.extensions&&G.extensions.derivatives,extensionFragDepth:G.extensions&&G.extensions.fragDepth,extensionDrawBuffers:G.extensions&&G.extensions.drawBuffers,extensionShaderTextureLOD:G.extensions&&G.extensions.shaderTextureLOD,rendererExtensionFragDepth:d||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:d||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:d||n.has("EXT_shader_texture_lod"),customProgramCacheKey:G.customProgramCacheKey()}}function Y(G){const w=[];if(G.shaderID?w.push(G.shaderID):(w.push(G.customVertexShaderID),w.push(G.customFragmentShaderID)),G.defines!==void 0)for(const I in G.defines)w.push(I),w.push(G.defines[I]);return G.isRawShaderMaterial===!1&&(y(w,G),x(w,G),w.push(s.outputEncoding)),w.push(G.customProgramCacheKey),w.join()}function y(G,w){G.push(w.precision),G.push(w.outputEncoding),G.push(w.envMapMode),G.push(w.envMapCubeUVHeight),G.push(w.combine),G.push(w.vertexUvs),G.push(w.fogExp2),G.push(w.sizeAttenuation),G.push(w.maxBones),G.push(w.morphTargetsCount),G.push(w.morphAttributeCount),G.push(w.numDirLights),G.push(w.numPointLights),G.push(w.numSpotLights),G.push(w.numHemiLights),G.push(w.numRectAreaLights),G.push(w.numDirLightShadows),G.push(w.numPointLightShadows),G.push(w.numSpotLightShadows),G.push(w.shadowMapType),G.push(w.toneMapping),G.push(w.numClippingPlanes),G.push(w.numClipIntersection)}function x(G,w){o.disableAll(),w.isWebGL2&&o.enable(0),w.supportsVertexTextures&&o.enable(1),w.instancing&&o.enable(2),w.instancingColor&&o.enable(3),w.map&&o.enable(4),w.matcap&&o.enable(5),w.envMap&&o.enable(6),w.lightMap&&o.enable(7),w.aoMap&&o.enable(8),w.emissiveMap&&o.enable(9),w.bumpMap&&o.enable(10),w.normalMap&&o.enable(11),w.objectSpaceNormalMap&&o.enable(12),w.tangentSpaceNormalMap&&o.enable(13),w.clearcoat&&o.enable(14),w.clearcoatMap&&o.enable(15),w.clearcoatRoughnessMap&&o.enable(16),w.clearcoatNormalMap&&o.enable(17),w.displacementMap&&o.enable(18),w.specularMap&&o.enable(19),w.roughnessMap&&o.enable(20),w.metalnessMap&&o.enable(21),w.gradientMap&&o.enable(22),w.alphaMap&&o.enable(23),w.alphaTest&&o.enable(24),w.vertexColors&&o.enable(25),w.vertexAlphas&&o.enable(26),w.vertexUvs&&o.enable(27),w.vertexTangents&&o.enable(28),w.uvsVertexOnly&&o.enable(29),w.fog&&o.enable(30),G.push(o.mask),o.disableAll(),w.useFog&&o.enable(0),w.flatShading&&o.enable(1),w.logarithmicDepthBuffer&&o.enable(2),w.skinning&&o.enable(3),w.useVertexTexture&&o.enable(4),w.morphTargets&&o.enable(5),w.morphNormals&&o.enable(6),w.morphColors&&o.enable(7),w.premultipliedAlpha&&o.enable(8),w.shadowMapEnabled&&o.enable(9),w.physicallyCorrectLights&&o.enable(10),w.doubleSided&&o.enable(11),w.flipSided&&o.enable(12),w.depthPacking&&o.enable(13),w.dithering&&o.enable(14),w.specularIntensityMap&&o.enable(15),w.specularColorMap&&o.enable(16),w.transmission&&o.enable(17),w.transmissionMap&&o.enable(18),w.thicknessMap&&o.enable(19),w.sheen&&o.enable(20),w.sheenColorMap&&o.enable(21),w.sheenRoughnessMap&&o.enable(22),w.decodeVideoTexture&&o.enable(23),w.opaque&&o.enable(24),G.push(o.mask)}function M(G){const w=Z[G.type];let I;if(w){const C=De[w];I=Ul.clone(C.uniforms)}else I=G.uniforms;return I}function N(G,w){let I;for(let C=0,T=c.length;C<T;C++){const A=c[C];if(A.cacheKey===w){I=A,++I.usedTimes;break}}return I===void 0&&(I=new pu(s,w,G,r),c.push(I)),I}function Q(G){if(--G.usedTimes===0){const w=c.indexOf(G);c[w]=c[c.length-1],c.pop(),G.destroy()}}function rt(G){l.remove(G)}function E(){l.dispose()}return{getParameters:p,getProgramCacheKey:Y,getUniforms:M,acquireProgram:N,releaseProgram:Q,releaseShaderCache:rt,programs:c,dispose:E}}function Gu(){let s=new WeakMap;function t(r){let a=s.get(r);return a===void 0&&(a={},s.set(r,a)),a}function e(r){s.delete(r)}function n(r,a,o){s.get(r)[a]=o}function i(){s=new WeakMap}return{get:t,remove:e,update:n,dispose:i}}function Wu(s,t){return s.groupOrder!==t.groupOrder?s.groupOrder-t.groupOrder:s.renderOrder!==t.renderOrder?s.renderOrder-t.renderOrder:s.material.id!==t.material.id?s.material.id-t.material.id:s.z!==t.z?s.z-t.z:s.id-t.id}function Ka(s,t){return s.groupOrder!==t.groupOrder?s.groupOrder-t.groupOrder:s.renderOrder!==t.renderOrder?s.renderOrder-t.renderOrder:s.z!==t.z?t.z-s.z:s.id-t.id}function qa(){const s=[];let t=0;const e=[],n=[],i=[];function r(){t=0,e.length=0,n.length=0,i.length=0}function a(h,u,m,b,g,Z){let f=s[t];return f===void 0?(f={id:h.id,object:h,geometry:u,material:m,groupOrder:b,renderOrder:h.renderOrder,z:g,group:Z},s[t]=f):(f.id=h.id,f.object=h,f.geometry=u,f.material=m,f.groupOrder=b,f.renderOrder=h.renderOrder,f.z=g,f.group=Z),t++,f}function o(h,u,m,b,g,Z){const f=a(h,u,m,b,g,Z);m.transmission>0?n.push(f):m.transparent===!0?i.push(f):e.push(f)}function l(h,u,m,b,g,Z){const f=a(h,u,m,b,g,Z);m.transmission>0?n.unshift(f):m.transparent===!0?i.unshift(f):e.unshift(f)}function c(h,u){e.length>1&&e.sort(h||Wu),n.length>1&&n.sort(u||Ka),i.length>1&&i.sort(u||Ka)}function d(){for(let h=t,u=s.length;h<u;h++){const m=s[h];if(m.id===null)break;m.id=null,m.object=null,m.geometry=null,m.material=null,m.group=null}}return{opaque:e,transmissive:n,transparent:i,init:r,push:o,unshift:l,finish:d,sort:c}}function yu(){let s=new WeakMap;function t(n,i){let r;return s.has(n)===!1?(r=new qa,s.set(n,[r])):i>=s.get(n).length?(r=new qa,s.get(n).push(r)):r=s.get(n)[i],r}function e(){s=new WeakMap}return{get:t,dispose:e}}function xu(){const s={};return{get:function(t){if(s[t.id]!==void 0)return s[t.id];let e;switch(t.type){case"DirectionalLight":e={direction:new R,color:new D};break;case"SpotLight":e={position:new R,direction:new R,color:new D,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":e={position:new R,color:new D,distance:0,decay:0};break;case"HemisphereLight":e={direction:new R,skyColor:new D,groundColor:new D};break;case"RectAreaLight":e={color:new D,position:new R,halfWidth:new R,halfHeight:new R};break}return s[t.id]=e,e}}}function Vu(){const s={};return{get:function(t){if(s[t.id]!==void 0)return s[t.id];let e;switch(t.type){case"DirectionalLight":e={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new q};break;case"SpotLight":e={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new q};break;case"PointLight":e={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new q,shadowCameraNear:1,shadowCameraFar:1e3};break}return s[t.id]=e,e}}}let vu=0;function Ru(s,t){return(t.castShadow?1:0)-(s.castShadow?1:0)}function Yu(s,t){const e=new xu,n=Vu(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let d=0;d<9;d++)i.probe.push(new R);const r=new R,a=new ft,o=new ft;function l(d,h){let u=0,m=0,b=0;for(let rt=0;rt<9;rt++)i.probe[rt].set(0,0,0);let g=0,Z=0,f=0,p=0,Y=0,y=0,x=0,M=0;d.sort(Ru);const N=h!==!0?Math.PI:1;for(let rt=0,E=d.length;rt<E;rt++){const G=d[rt],w=G.color,I=G.intensity,C=G.distance,T=G.shadow&&G.shadow.map?G.shadow.map.texture:null;if(G.isAmbientLight)u+=w.r*I*N,m+=w.g*I*N,b+=w.b*I*N;else if(G.isLightProbe)for(let A=0;A<9;A++)i.probe[A].addScaledVector(G.sh.coefficients[A],I);else if(G.isDirectionalLight){const A=e.get(G);if(A.color.copy(G.color).multiplyScalar(G.intensity*N),G.castShadow){const z=G.shadow,S=n.get(G);S.shadowBias=z.bias,S.shadowNormalBias=z.normalBias,S.shadowRadius=z.radius,S.shadowMapSize=z.mapSize,i.directionalShadow[g]=S,i.directionalShadowMap[g]=T,i.directionalShadowMatrix[g]=G.shadow.matrix,y++}i.directional[g]=A,g++}else if(G.isSpotLight){const A=e.get(G);if(A.position.setFromMatrixPosition(G.matrixWorld),A.color.copy(w).multiplyScalar(I*N),A.distance=C,A.coneCos=Math.cos(G.angle),A.penumbraCos=Math.cos(G.angle*(1-G.penumbra)),A.decay=G.decay,G.castShadow){const z=G.shadow,S=n.get(G);S.shadowBias=z.bias,S.shadowNormalBias=z.normalBias,S.shadowRadius=z.radius,S.shadowMapSize=z.mapSize,i.spotShadow[f]=S,i.spotShadowMap[f]=T,i.spotShadowMatrix[f]=G.shadow.matrix,M++}i.spot[f]=A,f++}else if(G.isRectAreaLight){const A=e.get(G);A.color.copy(w).multiplyScalar(I),A.halfWidth.set(G.width*.5,0,0),A.halfHeight.set(0,G.height*.5,0),i.rectArea[p]=A,p++}else if(G.isPointLight){const A=e.get(G);if(A.color.copy(G.color).multiplyScalar(G.intensity*N),A.distance=G.distance,A.decay=G.decay,G.castShadow){const z=G.shadow,S=n.get(G);S.shadowBias=z.bias,S.shadowNormalBias=z.normalBias,S.shadowRadius=z.radius,S.shadowMapSize=z.mapSize,S.shadowCameraNear=z.camera.near,S.shadowCameraFar=z.camera.far,i.pointShadow[Z]=S,i.pointShadowMap[Z]=T,i.pointShadowMatrix[Z]=G.shadow.matrix,x++}i.point[Z]=A,Z++}else if(G.isHemisphereLight){const A=e.get(G);A.skyColor.copy(G.color).multiplyScalar(I*N),A.groundColor.copy(G.groundColor).multiplyScalar(I*N),i.hemi[Y]=A,Y++}}p>0&&(t.isWebGL2||s.has("OES_texture_float_linear")===!0?(i.rectAreaLTC1=st.LTC_FLOAT_1,i.rectAreaLTC2=st.LTC_FLOAT_2):s.has("OES_texture_half_float_linear")===!0?(i.rectAreaLTC1=st.LTC_HALF_1,i.rectAreaLTC2=st.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),i.ambient[0]=u,i.ambient[1]=m,i.ambient[2]=b;const Q=i.hash;(Q.directionalLength!==g||Q.pointLength!==Z||Q.spotLength!==f||Q.rectAreaLength!==p||Q.hemiLength!==Y||Q.numDirectionalShadows!==y||Q.numPointShadows!==x||Q.numSpotShadows!==M)&&(i.directional.length=g,i.spot.length=f,i.rectArea.length=p,i.point.length=Z,i.hemi.length=Y,i.directionalShadow.length=y,i.directionalShadowMap.length=y,i.pointShadow.length=x,i.pointShadowMap.length=x,i.spotShadow.length=M,i.spotShadowMap.length=M,i.directionalShadowMatrix.length=y,i.pointShadowMatrix.length=x,i.spotShadowMatrix.length=M,Q.directionalLength=g,Q.pointLength=Z,Q.spotLength=f,Q.rectAreaLength=p,Q.hemiLength=Y,Q.numDirectionalShadows=y,Q.numPointShadows=x,Q.numSpotShadows=M,i.version=vu++)}function c(d,h){let u=0,m=0,b=0,g=0,Z=0;const f=h.matrixWorldInverse;for(let p=0,Y=d.length;p<Y;p++){const y=d[p];if(y.isDirectionalLight){const x=i.directional[u];x.direction.setFromMatrixPosition(y.matrixWorld),r.setFromMatrixPosition(y.target.matrixWorld),x.direction.sub(r),x.direction.transformDirection(f),u++}else if(y.isSpotLight){const x=i.spot[b];x.position.setFromMatrixPosition(y.matrixWorld),x.position.applyMatrix4(f),x.direction.setFromMatrixPosition(y.matrixWorld),r.setFromMatrixPosition(y.target.matrixWorld),x.direction.sub(r),x.direction.transformDirection(f),b++}else if(y.isRectAreaLight){const x=i.rectArea[g];x.position.setFromMatrixPosition(y.matrixWorld),x.position.applyMatrix4(f),o.identity(),a.copy(y.matrixWorld),a.premultiply(f),o.extractRotation(a),x.halfWidth.set(y.width*.5,0,0),x.halfHeight.set(0,y.height*.5,0),x.halfWidth.applyMatrix4(o),x.halfHeight.applyMatrix4(o),g++}else if(y.isPointLight){const x=i.point[m];x.position.setFromMatrixPosition(y.matrixWorld),x.position.applyMatrix4(f),m++}else if(y.isHemisphereLight){const x=i.hemi[Z];x.direction.setFromMatrixPosition(y.matrixWorld),x.direction.transformDirection(f),x.direction.normalize(),Z++}}}return{setup:l,setupView:c,state:i}}function $a(s,t){const e=new Yu(s,t),n=[],i=[];function r(){n.length=0,i.length=0}function a(h){n.push(h)}function o(h){i.push(h)}function l(h){e.setup(n,h)}function c(h){e.setupView(n,h)}return{init:r,state:{lightsArray:n,shadowsArray:i,lights:e},setupLights:l,setupLightsView:c,pushLight:a,pushShadow:o}}function Xu(s,t){let e=new WeakMap;function n(r,a=0){let o;return e.has(r)===!1?(o=new $a(s,t),e.set(r,[o])):a>=e.get(r).length?(o=new $a(s,t),e.get(r).push(o)):o=e.get(r)[a],o}function i(){e=new WeakMap}return{get:n,dispose:i}}class fr extends ce{constructor(t){super();this.type="MeshDepthMaterial",this.depthPacking=3200,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.setValues(t)}copy(t){return super.copy(t),this.depthPacking=t.depthPacking,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this}}fr.prototype.isMeshDepthMaterial=!0;class br extends ce{constructor(t){super();this.type="MeshDistanceMaterial",this.referencePosition=new R,this.nearDistance=1,this.farDistance=1e3,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.setValues(t)}copy(t){return super.copy(t),this.referencePosition.copy(t.referencePosition),this.nearDistance=t.nearDistance,this.farDistance=t.farDistance,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this}}br.prototype.isMeshDistanceMaterial=!0;const wu=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,Mu=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function to(s,t,e){let n=new bi;const i=new q,r=new q,a=new Mt,o=new fr({depthPacking:3201}),l=new br,c={},d=e.maxTextureSize,h={0:1,1:0,2:2},u=new _e({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new q},radius:{value:4}},vertexShader:wu,fragmentShader:Mu}),m=u.clone();m.defines.HORIZONTAL_PASS=1;const b=new Ot;b.setAttribute("position",new _t(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const g=new Ye(b,u),Z=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=1,this.render=function(y,x,M){if(Z.enabled===!1||Z.autoUpdate===!1&&Z.needsUpdate===!1||y.length===0)return;const N=s.getRenderTarget(),Q=s.getActiveCubeFace(),rt=s.getActiveMipmapLevel(),E=s.state;E.setBlending(0),E.buffers.color.setClear(1,1,1,1),E.buffers.depth.setTest(!0),E.setScissorTest(!1);for(let G=0,w=y.length;G<w;G++){const I=y[G],C=I.shadow;if(C===void 0){console.warn("THREE.WebGLShadowMap:",I,"has no shadow.");continue}if(C.autoUpdate===!1&&C.needsUpdate===!1)continue;i.copy(C.mapSize);const T=C.getFrameExtents();if(i.multiply(T),r.copy(C.mapSize),(i.x>d||i.y>d)&&(i.x>d&&(r.x=Math.floor(d/T.x),i.x=r.x*T.x,C.mapSize.x=r.x),i.y>d&&(r.y=Math.floor(d/T.y),i.y=r.y*T.y,C.mapSize.y=r.y)),C.map===null&&!C.isPointLightShadow&&this.type===3){const z={minFilter:1006,magFilter:1006,format:1023};C.map=new ye(i.x,i.y,z),C.map.texture.name=I.name+".shadowMap",C.mapPass=new ye(i.x,i.y,z),C.camera.updateProjectionMatrix()}if(C.map===null){const z={minFilter:1003,magFilter:1003,format:1023};C.map=new ye(i.x,i.y,z),C.map.texture.name=I.name+".shadowMap",C.camera.updateProjectionMatrix()}s.setRenderTarget(C.map),s.clear();const A=C.getViewportCount();for(let z=0;z<A;z++){const S=C.getViewport(z);a.set(r.x*S.x,r.y*S.y,r.x*S.z,r.y*S.w),E.viewport(a),C.updateMatrices(I,z),n=C.getFrustum(),Y(x,M,C.camera,I,this.type)}!C.isPointLightShadow&&this.type===3&&f(C,M),C.needsUpdate=!1}Z.needsUpdate=!1,s.setRenderTarget(N,Q,rt)};function f(y,x){const M=t.update(g);u.defines.VSM_SAMPLES!==y.blurSamples&&(u.defines.VSM_SAMPLES=y.blurSamples,m.defines.VSM_SAMPLES=y.blurSamples,u.needsUpdate=!0,m.needsUpdate=!0),u.uniforms.shadow_pass.value=y.map.texture,u.uniforms.resolution.value=y.mapSize,u.uniforms.radius.value=y.radius,s.setRenderTarget(y.mapPass),s.clear(),s.renderBufferDirect(x,null,M,u,g,null),m.uniforms.shadow_pass.value=y.mapPass.texture,m.uniforms.resolution.value=y.mapSize,m.uniforms.radius.value=y.radius,s.setRenderTarget(y.map),s.clear(),s.renderBufferDirect(x,null,M,m,g,null)}function p(y,x,M,N,Q,rt){let E=null;const G=M.isPointLight===!0?y.customDistanceMaterial:y.customDepthMaterial;if(G!==void 0?E=G:E=M.isPointLight===!0?l:o,s.localClippingEnabled&&x.clipShadows===!0&&x.clippingPlanes.length!==0||x.displacementMap&&x.displacementScale!==0||x.alphaMap&&x.alphaTest>0){const w=E.uuid,I=x.uuid;let C=c[w];C===void 0&&(C={},c[w]=C);let T=C[I];T===void 0&&(T=E.clone(),C[I]=T),E=T}return E.visible=x.visible,E.wireframe=x.wireframe,rt===3?E.side=x.shadowSide!==null?x.shadowSide:x.side:E.side=x.shadowSide!==null?x.shadowSide:h[x.side],E.alphaMap=x.alphaMap,E.alphaTest=x.alphaTest,E.clipShadows=x.clipShadows,E.clippingPlanes=x.clippingPlanes,E.clipIntersection=x.clipIntersection,E.displacementMap=x.displacementMap,E.displacementScale=x.displacementScale,E.displacementBias=x.displacementBias,E.wireframeLinewidth=x.wireframeLinewidth,E.linewidth=x.linewidth,M.isPointLight===!0&&E.isMeshDistanceMaterial===!0&&(E.referencePosition.setFromMatrixPosition(M.matrixWorld),E.nearDistance=N,E.farDistance=Q),E}function Y(y,x,M,N,Q){if(y.visible===!1)return;if(y.layers.test(x.layers)&&(y.isMesh||y.isLine||y.isPoints)&&(y.castShadow||y.receiveShadow&&Q===3)&&(!y.frustumCulled||n.intersectsObject(y))){y.modelViewMatrix.multiplyMatrices(M.matrixWorldInverse,y.matrixWorld);const G=t.update(y),w=y.material;if(Array.isArray(w)){const I=G.groups;for(let C=0,T=I.length;C<T;C++){const A=I[C],z=w[A.materialIndex];if(z&&z.visible){const S=p(y,z,N,M.near,M.far,Q);s.renderBufferDirect(M,null,G,S,y,A)}}}else if(w.visible){const I=p(y,w,N,M.near,M.far,Q);s.renderBufferDirect(M,null,G,I,y,null)}}const E=y.children;for(let G=0,w=E.length;G<w;G++)Y(E[G],x,M,N,Q)}}function Nu(s,t,e){const n=e.isWebGL2;function i(){let X=!1;const dt=new Mt;let ot=null;const Nt=new Mt(0,0,0,0);return{setMask:function(lt){ot!==lt&&!X&&(s.colorMask(lt,lt,lt,lt),ot=lt)},setLocked:function(lt){X=lt},setClear:function(lt,et,wt,Dt,Ve){Ve===!0&&(lt*=Dt,et*=Dt,wt*=Dt),dt.set(lt,et,wt,Dt),Nt.equals(dt)===!1&&(s.clearColor(lt,et,wt,Dt),Nt.copy(dt))},reset:function(){X=!1,ot=null,Nt.set(-1,0,0,0)}}}function r(){let X=!1,dt=null,ot=null,Nt=null;return{setTest:function(lt){lt?Vt(2929):L(2929)},setMask:function(lt){dt!==lt&&!X&&(s.depthMask(lt),dt=lt)},setFunc:function(lt){if(ot!==lt){if(lt)switch(lt){case 0:s.depthFunc(512);break;case 1:s.depthFunc(519);break;case 2:s.depthFunc(513);break;case 3:s.depthFunc(515);break;case 4:s.depthFunc(514);break;case 5:s.depthFunc(518);break;case 6:s.depthFunc(516);break;case 7:s.depthFunc(517);break;default:s.depthFunc(515)}else s.depthFunc(515);ot=lt}},setLocked:function(lt){X=lt},setClear:function(lt){Nt!==lt&&(s.clearDepth(lt),Nt=lt)},reset:function(){X=!1,dt=null,ot=null,Nt=null}}}function a(){let X=!1,dt=null,ot=null,Nt=null,lt=null,et=null,wt=null,Dt=null,Ve=null;return{setTest:function(qt){X||(qt?Vt(2960):L(2960))},setMask:function(qt){dt!==qt&&!X&&(s.stencilMask(qt),dt=qt)},setFunc:function(qt,ke,Pe){(ot!==qt||Nt!==ke||lt!==Pe)&&(s.stencilFunc(qt,ke,Pe),ot=qt,Nt=ke,lt=Pe)},setOp:function(qt,ke,Pe){(et!==qt||wt!==ke||Dt!==Pe)&&(s.stencilOp(qt,ke,Pe),et=qt,wt=ke,Dt=Pe)},setLocked:function(qt){X=qt},setClear:function(qt){Ve!==qt&&(s.clearStencil(qt),Ve=qt)},reset:function(){X=!1,dt=null,ot=null,Nt=null,lt=null,et=null,wt=null,Dt=null,Ve=null}}}const o=new i,l=new r,c=new a;let d={},h={},u=new WeakMap,m=[],b=null,g=!1,Z=null,f=null,p=null,Y=null,y=null,x=null,M=null,N=!1,Q=null,rt=null,E=null,G=null,w=null;const I=s.getParameter(35661);let C=!1,T=0;const A=s.getParameter(7938);A.indexOf("WebGL")!==-1?(T=parseFloat(/^WebGL (\d)/.exec(A)[1]),C=T>=1):A.indexOf("OpenGL ES")!==-1&&(T=parseFloat(/^OpenGL ES (\d)/.exec(A)[1]),C=T>=2);let z=null,S={};const P=s.getParameter(3088),$=s.getParameter(2978),K=new Mt().fromArray(P),tt=new Mt().fromArray($);function Gt(X,dt,ot){const Nt=new Uint8Array(4),lt=s.createTexture();s.bindTexture(X,lt),s.texParameteri(X,10241,9728),s.texParameteri(X,10240,9728);for(let et=0;et<ot;et++)s.texImage2D(dt+et,0,6408,1,1,0,6408,5121,Nt);return lt}const Ut={};Ut[3553]=Gt(3553,3553,1),Ut[34067]=Gt(34067,34069,6),o.setClear(0,0,0,1),l.setClear(1),c.setClear(0),Vt(2929),l.setFunc(3),nt(!1),ht(1),Vt(2884),_(0);function Vt(X){d[X]!==!0&&(s.enable(X),d[X]=!0)}function L(X){d[X]!==!1&&(s.disable(X),d[X]=!1)}function kt(X,dt){return h[X]!==dt?(s.bindFramebuffer(X,dt),h[X]=dt,n&&(X===36009&&(h[36160]=dt),X===36160&&(h[36009]=dt)),!0):!1}function St(X,dt){let ot=m,Nt=!1;if(X)if(ot=u.get(dt),ot===void 0&&(ot=[],u.set(dt,ot)),X.isWebGLMultipleRenderTargets){const lt=X.texture;if(ot.length!==lt.length||ot[0]!==36064){for(let et=0,wt=lt.length;et<wt;et++)ot[et]=36064+et;ot.length=lt.length,Nt=!0}}else ot[0]!==36064&&(ot[0]=36064,Nt=!0);else ot[0]!==1029&&(ot[0]=1029,Nt=!0);Nt&&(e.isWebGL2?s.drawBuffers(ot):t.get("WEBGL_draw_buffers").drawBuffersWEBGL(ot))}function ut(X){return b!==X?(s.useProgram(X),b=X,!0):!1}const mt={[100]:32774,[101]:32778,[102]:32779};if(n)mt[103]=32775,mt[104]=32776;else{const X=t.get("EXT_blend_minmax");X!==null&&(mt[103]=X.MIN_EXT,mt[104]=X.MAX_EXT)}const Jt={[200]:0,[201]:1,[202]:768,[204]:770,[210]:776,[208]:774,[206]:772,[203]:769,[205]:771,[209]:775,[207]:773};function _(X,dt,ot,Nt,lt,et,wt,Dt){if(X===0){g===!0&&(L(3042),g=!1);return}if(g===!1&&(Vt(3042),g=!0),X!==5){if(X!==Z||Dt!==N){if((f!==100||y!==100)&&(s.blendEquation(32774),f=100,y=100),Dt)switch(X){case 1:s.blendFuncSeparate(1,771,1,771);break;case 2:s.blendFunc(1,1);break;case 3:s.blendFuncSeparate(0,769,0,1);break;case 4:s.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",X);break}else switch(X){case 1:s.blendFuncSeparate(770,771,1,771);break;case 2:s.blendFunc(770,1);break;case 3:s.blendFuncSeparate(0,769,0,1);break;case 4:s.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",X);break}p=null,Y=null,x=null,M=null,Z=X,N=Dt}return}lt=lt||dt,et=et||ot,wt=wt||Nt,(dt!==f||lt!==y)&&(s.blendEquationSeparate(mt[dt],mt[lt]),f=dt,y=lt),(ot!==p||Nt!==Y||et!==x||wt!==M)&&(s.blendFuncSeparate(Jt[ot],Jt[Nt],Jt[et],Jt[wt]),p=ot,Y=Nt,x=et,M=wt),Z=X,N=null}function O(X,dt){X.side===2?L(2884):Vt(2884);let ot=X.side===1;dt&&(ot=!ot),nt(ot),X.blending===1&&X.transparent===!1?_(0):_(X.blending,X.blendEquation,X.blendSrc,X.blendDst,X.blendEquationAlpha,X.blendSrcAlpha,X.blendDstAlpha,X.premultipliedAlpha),l.setFunc(X.depthFunc),l.setTest(X.depthTest),l.setMask(X.depthWrite),o.setMask(X.colorWrite);const Nt=X.stencilWrite;c.setTest(Nt),Nt&&(c.setMask(X.stencilWriteMask),c.setFunc(X.stencilFunc,X.stencilRef,X.stencilFuncMask),c.setOp(X.stencilFail,X.stencilZFail,X.stencilZPass)),vt(X.polygonOffset,X.polygonOffsetFactor,X.polygonOffsetUnits),X.alphaToCoverage===!0?Vt(32926):L(32926)}function nt(X){Q!==X&&(X?s.frontFace(2304):s.frontFace(2305),Q=X)}function ht(X){X!==0?(Vt(2884),X!==rt&&(X===1?s.cullFace(1029):X===2?s.cullFace(1028):s.cullFace(1032))):L(2884),rt=X}function at(X){X!==E&&(C&&s.lineWidth(X),E=X)}function vt(X,dt,ot){X?(Vt(32823),(G!==dt||w!==ot)&&(s.polygonOffset(dt,ot),G=dt,w=ot)):L(32823)}function gt(X){X?Vt(3089):L(3089)}function It(X){X===void 0&&(X=33984+I-1),z!==X&&(s.activeTexture(X),z=X)}function ee(X,dt){z===null&&It();let ot=S[z];ot===void 0&&(ot={type:void 0,texture:void 0},S[z]=ot),(ot.type!==X||ot.texture!==dt)&&(s.bindTexture(X,dt||Ut[X]),ot.type=X,ot.texture=dt)}function v(){const X=S[z];X!==void 0&&X.type!==void 0&&(s.bindTexture(X.type,null),X.type=void 0,X.texture=void 0)}function W(){try{s.compressedTexImage2D.apply(s,arguments)}catch(X){console.error("THREE.WebGLState:",X)}}function H(){try{s.texSubImage2D.apply(s,arguments)}catch(X){console.error("THREE.WebGLState:",X)}}function j(){try{s.texSubImage3D.apply(s,arguments)}catch(X){console.error("THREE.WebGLState:",X)}}function it(){try{s.compressedTexSubImage2D.apply(s,arguments)}catch(X){console.error("THREE.WebGLState:",X)}}function ct(){try{s.texStorage2D.apply(s,arguments)}catch(X){console.error("THREE.WebGLState:",X)}}function Wt(){try{s.texStorage3D.apply(s,arguments)}catch(X){console.error("THREE.WebGLState:",X)}}function U(){try{s.texImage2D.apply(s,arguments)}catch(X){console.error("THREE.WebGLState:",X)}}function Yt(){try{s.texImage3D.apply(s,arguments)}catch(X){console.error("THREE.WebGLState:",X)}}function Xt(X){K.equals(X)===!1&&(s.scissor(X.x,X.y,X.z,X.w),K.copy(X))}function Zt(X){tt.equals(X)===!1&&(s.viewport(X.x,X.y,X.z,X.w),tt.copy(X))}function pt(){s.disable(3042),s.disable(2884),s.disable(2929),s.disable(32823),s.disable(3089),s.disable(2960),s.disable(32926),s.blendEquation(32774),s.blendFunc(1,0),s.blendFuncSeparate(1,0,1,0),s.colorMask(!0,!0,!0,!0),s.clearColor(0,0,0,0),s.depthMask(!0),s.depthFunc(513),s.clearDepth(1),s.stencilMask(4294967295),s.stencilFunc(519,0,4294967295),s.stencilOp(7680,7680,7680),s.clearStencil(0),s.cullFace(1029),s.frontFace(2305),s.polygonOffset(0,0),s.activeTexture(33984),s.bindFramebuffer(36160,null),n===!0&&(s.bindFramebuffer(36009,null),s.bindFramebuffer(36008,null)),s.useProgram(null),s.lineWidth(1),s.scissor(0,0,s.canvas.width,s.canvas.height),s.viewport(0,0,s.canvas.width,s.canvas.height),d={},z=null,S={},h={},u=new WeakMap,m=[],b=null,g=!1,Z=null,f=null,p=null,Y=null,y=null,x=null,M=null,N=!1,Q=null,rt=null,E=null,G=null,w=null,K.set(0,0,s.canvas.width,s.canvas.height),tt.set(0,0,s.canvas.width,s.canvas.height),o.reset(),l.reset(),c.reset()}return{buffers:{color:o,depth:l,stencil:c},enable:Vt,disable:L,bindFramebuffer:kt,drawBuffers:St,useProgram:ut,setBlending:_,setMaterial:O,setFlipSided:nt,setCullFace:ht,setLineWidth:at,setPolygonOffset:vt,setScissorTest:gt,activeTexture:It,bindTexture:ee,unbindTexture:v,compressedTexImage2D:W,texImage2D:U,texImage3D:Yt,texStorage2D:ct,texStorage3D:Wt,texSubImage2D:H,texSubImage3D:j,compressedTexSubImage2D:it,scissor:Xt,viewport:Zt,reset:pt}}function Fu(s,t,e,n,i,r,a){const o=i.isWebGL2,l=i.maxTextures,c=i.maxCubemapSize,d=i.maxTextureSize,h=i.maxSamples,u=t.has("WEBGL_multisampled_render_to_texture")?t.get("WEBGL_multisampled_render_to_texture"):null,m=new WeakMap;let b;const g=new WeakMap;let Z=!1;try{Z=typeof OffscreenCanvas!="undefined"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function f(v,W){return Z?new OffscreenCanvas(v,W):hi("canvas")}function p(v,W,H,j){let it=1;if((v.width>j||v.height>j)&&(it=j/Math.max(v.width,v.height)),it<1||W===!0)if(typeof HTMLImageElement!="undefined"&&v instanceof HTMLImageElement||typeof HTMLCanvasElement!="undefined"&&v instanceof HTMLCanvasElement||typeof ImageBitmap!="undefined"&&v instanceof ImageBitmap){const ct=W?As:Math.floor,Wt=ct(it*v.width),U=ct(it*v.height);b===void 0&&(b=f(Wt,U));const Yt=H?f(Wt,U):b;return Yt.width=Wt,Yt.height=U,Yt.getContext("2d").drawImage(v,0,0,Wt,U),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+v.width+"x"+v.height+") to ("+Wt+"x"+U+")."),Yt}else return"data"in v&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+v.width+"x"+v.height+")."),v;return v}function Y(v){return ra(v.width)&&ra(v.height)}function y(v){return o?!1:v.wrapS!==1001||v.wrapT!==1001||v.minFilter!==1003&&v.minFilter!==1006}function x(v,W){return v.generateMipmaps&&W&&v.minFilter!==1003&&v.minFilter!==1006}function M(v){s.generateMipmap(v)}function N(v,W,H,j,it=!1){if(o===!1)return W;if(v!==null){if(s[v]!==void 0)return s[v];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+v+"'")}let ct=W;return W===6403&&(H===5126&&(ct=33326),H===5131&&(ct=33325),H===5121&&(ct=33321)),W===33319&&(H===5126&&(ct=33328),H===5131&&(ct=33327),H===5121&&(ct=33323)),W===6408&&(H===5126&&(ct=34836),H===5131&&(ct=34842),H===5121&&(ct=j===3001&&it===!1?35907:32856),H===32819&&(ct=32854),H===32820&&(ct=32855)),(ct===33325||ct===33326||ct===33327||ct===33328||ct===34842||ct===34836)&&t.get("EXT_color_buffer_float"),ct}function Q(v,W,H){return x(v,H)===!0||v.isFramebufferTexture&&v.minFilter!==1003&&v.minFilter!==1006?Math.log2(Math.max(W.width,W.height))+1:v.mipmaps!==void 0&&v.mipmaps.length>0?v.mipmaps.length:v.isCompressedTexture&&Array.isArray(v.image)?W.mipmaps.length:1}function rt(v){return v===1003||v===1004||v===1005?9728:9729}function E(v){const W=v.target;W.removeEventListener("dispose",E),w(W),W.isVideoTexture&&m.delete(W)}function G(v){const W=v.target;W.removeEventListener("dispose",G),C(W)}function w(v){const W=n.get(v);if(W.__webglInit===void 0)return;const H=v.source,j=g.get(H);if(j){const it=j[W.__cacheKey];it.usedTimes--,it.usedTimes===0&&I(v),Object.keys(j).length===0&&g.delete(H)}n.remove(v)}function I(v){const W=n.get(v);s.deleteTexture(W.__webglTexture);const H=v.source,j=g.get(H);delete j[W.__cacheKey],a.memory.textures--}function C(v){const W=v.texture,H=n.get(v),j=n.get(W);if(j.__webglTexture!==void 0&&(s.deleteTexture(j.__webglTexture),a.memory.textures--),v.depthTexture&&v.depthTexture.dispose(),v.isWebGLCubeRenderTarget)for(let it=0;it<6;it++)s.deleteFramebuffer(H.__webglFramebuffer[it]),H.__webglDepthbuffer&&s.deleteRenderbuffer(H.__webglDepthbuffer[it]);else s.deleteFramebuffer(H.__webglFramebuffer),H.__webglDepthbuffer&&s.deleteRenderbuffer(H.__webglDepthbuffer),H.__webglMultisampledFramebuffer&&s.deleteFramebuffer(H.__webglMultisampledFramebuffer),H.__webglColorRenderbuffer&&s.deleteRenderbuffer(H.__webglColorRenderbuffer),H.__webglDepthRenderbuffer&&s.deleteRenderbuffer(H.__webglDepthRenderbuffer);if(v.isWebGLMultipleRenderTargets)for(let it=0,ct=W.length;it<ct;it++){const Wt=n.get(W[it]);Wt.__webglTexture&&(s.deleteTexture(Wt.__webglTexture),a.memory.textures--),n.remove(W[it])}n.remove(W),n.remove(v)}let T=0;function A(){T=0}function z(){const v=T;return v>=l&&console.warn("THREE.WebGLTextures: Trying to use "+v+" texture units while this GPU supports only "+l),T+=1,v}function S(v){const W=[];return W.push(v.wrapS),W.push(v.wrapT),W.push(v.magFilter),W.push(v.minFilter),W.push(v.anisotropy),W.push(v.internalFormat),W.push(v.format),W.push(v.type),W.push(v.generateMipmaps),W.push(v.premultiplyAlpha),W.push(v.flipY),W.push(v.unpackAlignment),W.push(v.encoding),W.join()}function P(v,W){const H=n.get(v);if(v.isVideoTexture&&It(v),v.isRenderTargetTexture===!1&&v.version>0&&H.__version!==v.version){const j=v.image;if(j===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(j.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{kt(H,v,W);return}}e.activeTexture(33984+W),e.bindTexture(3553,H.__webglTexture)}function $(v,W){const H=n.get(v);if(v.version>0&&H.__version!==v.version){kt(H,v,W);return}e.activeTexture(33984+W),e.bindTexture(35866,H.__webglTexture)}function K(v,W){const H=n.get(v);if(v.version>0&&H.__version!==v.version){kt(H,v,W);return}e.activeTexture(33984+W),e.bindTexture(32879,H.__webglTexture)}function tt(v,W){const H=n.get(v);if(v.version>0&&H.__version!==v.version){St(H,v,W);return}e.activeTexture(33984+W),e.bindTexture(34067,H.__webglTexture)}const Gt={[1e3]:10497,[1001]:33071,[1002]:33648},Ut={[1003]:9728,[1004]:9984,[1005]:9986,[1006]:9729,[1007]:9985,[1008]:9987};function Vt(v,W,H){if(H?(s.texParameteri(v,10242,Gt[W.wrapS]),s.texParameteri(v,10243,Gt[W.wrapT]),(v===32879||v===35866)&&s.texParameteri(v,32882,Gt[W.wrapR]),s.texParameteri(v,10240,Ut[W.magFilter]),s.texParameteri(v,10241,Ut[W.minFilter])):(s.texParameteri(v,10242,33071),s.texParameteri(v,10243,33071),(v===32879||v===35866)&&s.texParameteri(v,32882,33071),(W.wrapS!==1001||W.wrapT!==1001)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),s.texParameteri(v,10240,rt(W.magFilter)),s.texParameteri(v,10241,rt(W.minFilter)),W.minFilter!==1003&&W.minFilter!==1006&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),t.has("EXT_texture_filter_anisotropic")===!0){const j=t.get("EXT_texture_filter_anisotropic");if(W.type===1015&&t.has("OES_texture_float_linear")===!1||o===!1&&W.type===1016&&t.has("OES_texture_half_float_linear")===!1)return;(W.anisotropy>1||n.get(W).__currentAnisotropy)&&(s.texParameterf(v,j.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(W.anisotropy,i.getMaxAnisotropy())),n.get(W).__currentAnisotropy=W.anisotropy)}}function L(v,W){let H=!1;v.__webglInit===void 0&&(v.__webglInit=!0,W.addEventListener("dispose",E));const j=W.source;let it=g.get(j);it===void 0&&(it={},g.set(j,it));const ct=S(W);if(ct!==v.__cacheKey){it[ct]===void 0&&(it[ct]={texture:s.createTexture(),usedTimes:0},a.memory.textures++,H=!0),it[ct].usedTimes++;const Wt=it[v.__cacheKey];Wt!==void 0&&(it[v.__cacheKey].usedTimes--,Wt.usedTimes===0&&I(W)),v.__cacheKey=ct,v.__webglTexture=it[ct].texture}return H}function kt(v,W,H){let j=3553;W.isDataArrayTexture&&(j=35866),W.isData3DTexture&&(j=32879);const it=L(v,W),ct=W.source;if(e.activeTexture(33984+H),e.bindTexture(j,v.__webglTexture),ct.version!==ct.__currentVersion||it===!0){s.pixelStorei(37440,W.flipY),s.pixelStorei(37441,W.premultiplyAlpha),s.pixelStorei(3317,W.unpackAlignment),s.pixelStorei(37443,0);const Wt=y(W)&&Y(W.image)===!1;let U=p(W.image,Wt,!1,d);U=ee(W,U);const Yt=Y(U)||o,Xt=r.convert(W.format,W.encoding);let Zt=r.convert(W.type),pt=N(W.internalFormat,Xt,Zt,W.encoding,W.isVideoTexture);Vt(j,W,Yt);let X;const dt=W.mipmaps,ot=o&&W.isVideoTexture!==!0,Nt=v.__version===void 0,lt=Q(W,U,Yt);if(W.isDepthTexture)pt=6402,o?W.type===1015?pt=36012:W.type===1014?pt=33190:W.type===1020?pt=35056:pt=33189:W.type===1015&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),W.format===1026&&pt===6402&&W.type!==1012&&W.type!==1014&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),W.type=1012,Zt=r.convert(W.type)),W.format===1027&&pt===6402&&(pt=34041,W.type!==1020&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),W.type=1020,Zt=r.convert(W.type))),ot&&Nt?e.texStorage2D(3553,1,pt,U.width,U.height):e.texImage2D(3553,0,pt,U.width,U.height,0,Xt,Zt,null);else if(W.isDataTexture)if(dt.length>0&&Yt){ot&&Nt&&e.texStorage2D(3553,lt,pt,dt[0].width,dt[0].height);for(let et=0,wt=dt.length;et<wt;et++)X=dt[et],ot?e.texSubImage2D(3553,et,0,0,X.width,X.height,Xt,Zt,X.data):e.texImage2D(3553,et,pt,X.width,X.height,0,Xt,Zt,X.data);W.generateMipmaps=!1}else ot?(Nt&&e.texStorage2D(3553,lt,pt,U.width,U.height),e.texSubImage2D(3553,0,0,0,U.width,U.height,Xt,Zt,U.data)):e.texImage2D(3553,0,pt,U.width,U.height,0,Xt,Zt,U.data);else if(W.isCompressedTexture){ot&&Nt&&e.texStorage2D(3553,lt,pt,dt[0].width,dt[0].height);for(let et=0,wt=dt.length;et<wt;et++)X=dt[et],W.format!==1023?Xt!==null?ot?e.compressedTexSubImage2D(3553,et,0,0,X.width,X.height,Xt,X.data):e.compressedTexImage2D(3553,et,pt,X.width,X.height,0,X.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):ot?e.texSubImage2D(3553,et,0,0,X.width,X.height,Xt,Zt,X.data):e.texImage2D(3553,et,pt,X.width,X.height,0,Xt,Zt,X.data)}else if(W.isDataArrayTexture)ot?(Nt&&e.texStorage3D(35866,lt,pt,U.width,U.height,U.depth),e.texSubImage3D(35866,0,0,0,0,U.width,U.height,U.depth,Xt,Zt,U.data)):e.texImage3D(35866,0,pt,U.width,U.height,U.depth,0,Xt,Zt,U.data);else if(W.isData3DTexture)ot?(Nt&&e.texStorage3D(32879,lt,pt,U.width,U.height,U.depth),e.texSubImage3D(32879,0,0,0,0,U.width,U.height,U.depth,Xt,Zt,U.data)):e.texImage3D(32879,0,pt,U.width,U.height,U.depth,0,Xt,Zt,U.data);else if(W.isFramebufferTexture)ot&&Nt?e.texStorage2D(3553,lt,pt,U.width,U.height):e.texImage2D(3553,0,pt,U.width,U.height,0,Xt,Zt,null);else if(dt.length>0&&Yt){ot&&Nt&&e.texStorage2D(3553,lt,pt,dt[0].width,dt[0].height);for(let et=0,wt=dt.length;et<wt;et++)X=dt[et],ot?e.texSubImage2D(3553,et,0,0,Xt,Zt,X):e.texImage2D(3553,et,pt,Xt,Zt,X);W.generateMipmaps=!1}else ot?(Nt&&e.texStorage2D(3553,lt,pt,U.width,U.height),e.texSubImage2D(3553,0,0,0,Xt,Zt,U)):e.texImage2D(3553,0,pt,Xt,Zt,U);x(W,Yt)&&M(j),ct.__currentVersion=ct.version,W.onUpdate&&W.onUpdate(W)}v.__version=W.version}function St(v,W,H){if(W.image.length!==6)return;const j=L(v,W),it=W.source;if(e.activeTexture(33984+H),e.bindTexture(34067,v.__webglTexture),it.version!==it.__currentVersion||j===!0){s.pixelStorei(37440,W.flipY),s.pixelStorei(37441,W.premultiplyAlpha),s.pixelStorei(3317,W.unpackAlignment),s.pixelStorei(37443,0);const ct=W.isCompressedTexture||W.image[0].isCompressedTexture,Wt=W.image[0]&&W.image[0].isDataTexture,U=[];for(let et=0;et<6;et++)!ct&&!Wt?U[et]=p(W.image[et],!1,!0,c):U[et]=Wt?W.image[et].image:W.image[et],U[et]=ee(W,U[et]);const Yt=U[0],Xt=Y(Yt)||o,Zt=r.convert(W.format,W.encoding),pt=r.convert(W.type),X=N(W.internalFormat,Zt,pt,W.encoding),dt=o&&W.isVideoTexture!==!0,ot=v.__version===void 0;let Nt=Q(W,Yt,Xt);Vt(34067,W,Xt);let lt;if(ct){dt&&ot&&e.texStorage2D(34067,Nt,X,Yt.width,Yt.height);for(let et=0;et<6;et++){lt=U[et].mipmaps;for(let wt=0;wt<lt.length;wt++){const Dt=lt[wt];W.format!==1023?Zt!==null?dt?e.compressedTexSubImage2D(34069+et,wt,0,0,Dt.width,Dt.height,Zt,Dt.data):e.compressedTexImage2D(34069+et,wt,X,Dt.width,Dt.height,0,Dt.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):dt?e.texSubImage2D(34069+et,wt,0,0,Dt.width,Dt.height,Zt,pt,Dt.data):e.texImage2D(34069+et,wt,X,Dt.width,Dt.height,0,Zt,pt,Dt.data)}}}else{lt=W.mipmaps,dt&&ot&&(lt.length>0&&Nt++,e.texStorage2D(34067,Nt,X,U[0].width,U[0].height));for(let et=0;et<6;et++)if(Wt){dt?e.texSubImage2D(34069+et,0,0,0,U[et].width,U[et].height,Zt,pt,U[et].data):e.texImage2D(34069+et,0,X,U[et].width,U[et].height,0,Zt,pt,U[et].data);for(let wt=0;wt<lt.length;wt++){const Ve=lt[wt].image[et].image;dt?e.texSubImage2D(34069+et,wt+1,0,0,Ve.width,Ve.height,Zt,pt,Ve.data):e.texImage2D(34069+et,wt+1,X,Ve.width,Ve.height,0,Zt,pt,Ve.data)}}else{dt?e.texSubImage2D(34069+et,0,0,0,Zt,pt,U[et]):e.texImage2D(34069+et,0,X,Zt,pt,U[et]);for(let wt=0;wt<lt.length;wt++){const Dt=lt[wt];dt?e.texSubImage2D(34069+et,wt+1,0,0,Zt,pt,Dt.image[et]):e.texImage2D(34069+et,wt+1,X,Zt,pt,Dt.image[et])}}}x(W,Xt)&&M(34067),it.__currentVersion=it.version,W.onUpdate&&W.onUpdate(W)}v.__version=W.version}function ut(v,W,H,j,it){const ct=r.convert(H.format,H.encoding),Wt=r.convert(H.type),U=N(H.internalFormat,ct,Wt,H.encoding);n.get(W).__hasExternalTextures||(it===32879||it===35866?e.texImage3D(it,0,U,W.width,W.height,W.depth,0,ct,Wt,null):e.texImage2D(it,0,U,W.width,W.height,0,ct,Wt,null)),e.bindFramebuffer(36160,v),gt(W)?u.framebufferTexture2DMultisampleEXT(36160,j,it,n.get(H).__webglTexture,0,vt(W)):s.framebufferTexture2D(36160,j,it,n.get(H).__webglTexture,0),e.bindFramebuffer(36160,null)}function mt(v,W,H){if(s.bindRenderbuffer(36161,v),W.depthBuffer&&!W.stencilBuffer){let j=33189;if(H||gt(W)){const it=W.depthTexture;it&&it.isDepthTexture&&(it.type===1015?j=36012:it.type===1014&&(j=33190));const ct=vt(W);gt(W)?u.renderbufferStorageMultisampleEXT(36161,ct,j,W.width,W.height):s.renderbufferStorageMultisample(36161,ct,j,W.width,W.height)}else s.renderbufferStorage(36161,j,W.width,W.height);s.framebufferRenderbuffer(36160,36096,36161,v)}else if(W.depthBuffer&&W.stencilBuffer){const j=vt(W);H&&gt(W)===!1?s.renderbufferStorageMultisample(36161,j,35056,W.width,W.height):gt(W)?u.renderbufferStorageMultisampleEXT(36161,j,35056,W.width,W.height):s.renderbufferStorage(36161,34041,W.width,W.height),s.framebufferRenderbuffer(36160,33306,36161,v)}else{const j=W.isWebGLMultipleRenderTargets===!0?W.texture[0]:W.texture,it=r.convert(j.format,j.encoding),ct=r.convert(j.type),Wt=N(j.internalFormat,it,ct,j.encoding),U=vt(W);H&&gt(W)===!1?s.renderbufferStorageMultisample(36161,U,Wt,W.width,W.height):gt(W)?u.renderbufferStorageMultisampleEXT(36161,U,Wt,W.width,W.height):s.renderbufferStorage(36161,Wt,W.width,W.height)}s.bindRenderbuffer(36161,null)}function Jt(v,W){if(W&&W.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(e.bindFramebuffer(36160,v),!(W.depthTexture&&W.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!n.get(W.depthTexture).__webglTexture||W.depthTexture.image.width!==W.width||W.depthTexture.image.height!==W.height)&&(W.depthTexture.image.width=W.width,W.depthTexture.image.height=W.height,W.depthTexture.needsUpdate=!0),P(W.depthTexture,0);const j=n.get(W.depthTexture).__webglTexture,it=vt(W);if(W.depthTexture.format===1026)gt(W)?u.framebufferTexture2DMultisampleEXT(36160,36096,3553,j,0,it):s.framebufferTexture2D(36160,36096,3553,j,0);else if(W.depthTexture.format===1027)gt(W)?u.framebufferTexture2DMultisampleEXT(36160,33306,3553,j,0,it):s.framebufferTexture2D(36160,33306,3553,j,0);else throw new Error("Unknown depthTexture format")}function _(v){const W=n.get(v),H=v.isWebGLCubeRenderTarget===!0;if(v.depthTexture&&!W.__autoAllocateDepthBuffer){if(H)throw new Error("target.depthTexture not supported in Cube render targets");Jt(W.__webglFramebuffer,v)}else if(H){W.__webglDepthbuffer=[];for(let j=0;j<6;j++)e.bindFramebuffer(36160,W.__webglFramebuffer[j]),W.__webglDepthbuffer[j]=s.createRenderbuffer(),mt(W.__webglDepthbuffer[j],v,!1)}else e.bindFramebuffer(36160,W.__webglFramebuffer),W.__webglDepthbuffer=s.createRenderbuffer(),mt(W.__webglDepthbuffer,v,!1);e.bindFramebuffer(36160,null)}function O(v,W,H){const j=n.get(v);W!==void 0&&ut(j.__webglFramebuffer,v,v.texture,36064,3553),H!==void 0&&_(v)}function nt(v){const W=v.texture,H=n.get(v),j=n.get(W);v.addEventListener("dispose",G),v.isWebGLMultipleRenderTargets!==!0&&(j.__webglTexture===void 0&&(j.__webglTexture=s.createTexture()),j.__version=W.version,a.memory.textures++);const it=v.isWebGLCubeRenderTarget===!0,ct=v.isWebGLMultipleRenderTargets===!0,Wt=Y(v)||o;if(it){H.__webglFramebuffer=[];for(let U=0;U<6;U++)H.__webglFramebuffer[U]=s.createFramebuffer()}else if(H.__webglFramebuffer=s.createFramebuffer(),ct)if(i.drawBuffers){const U=v.texture;for(let Yt=0,Xt=U.length;Yt<Xt;Yt++){const Zt=n.get(U[Yt]);Zt.__webglTexture===void 0&&(Zt.__webglTexture=s.createTexture(),a.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");else if(o&&v.samples>0&&gt(v)===!1){H.__webglMultisampledFramebuffer=s.createFramebuffer(),H.__webglColorRenderbuffer=s.createRenderbuffer(),s.bindRenderbuffer(36161,H.__webglColorRenderbuffer);const U=r.convert(W.format,W.encoding),Yt=r.convert(W.type),Xt=N(W.internalFormat,U,Yt,W.encoding),Zt=vt(v);s.renderbufferStorageMultisample(36161,Zt,Xt,v.width,v.height),e.bindFramebuffer(36160,H.__webglMultisampledFramebuffer),s.framebufferRenderbuffer(36160,36064,36161,H.__webglColorRenderbuffer),s.bindRenderbuffer(36161,null),v.depthBuffer&&(H.__webglDepthRenderbuffer=s.createRenderbuffer(),mt(H.__webglDepthRenderbuffer,v,!0)),e.bindFramebuffer(36160,null)}if(it){e.bindTexture(34067,j.__webglTexture),Vt(34067,W,Wt);for(let U=0;U<6;U++)ut(H.__webglFramebuffer[U],v,W,36064,34069+U);x(W,Wt)&&M(34067),e.unbindTexture()}else if(ct){const U=v.texture;for(let Yt=0,Xt=U.length;Yt<Xt;Yt++){const Zt=U[Yt],pt=n.get(Zt);e.bindTexture(3553,pt.__webglTexture),Vt(3553,Zt,Wt),ut(H.__webglFramebuffer,v,Zt,36064+Yt,3553),x(Zt,Wt)&&M(3553)}e.unbindTexture()}else{let U=3553;(v.isWebGL3DRenderTarget||v.isWebGLArrayRenderTarget)&&(o?U=v.isWebGL3DRenderTarget?32879:35866:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),e.bindTexture(U,j.__webglTexture),Vt(U,W,Wt),ut(H.__webglFramebuffer,v,W,36064,U),x(W,Wt)&&M(U),e.unbindTexture()}v.depthBuffer&&_(v)}function ht(v){const W=Y(v)||o,H=v.isWebGLMultipleRenderTargets===!0?v.texture:[v.texture];for(let j=0,it=H.length;j<it;j++){const ct=H[j];if(x(ct,W)){const Wt=v.isWebGLCubeRenderTarget?34067:3553,U=n.get(ct).__webglTexture;e.bindTexture(Wt,U),M(Wt),e.unbindTexture()}}}function at(v){if(o&&v.samples>0&&gt(v)===!1){const W=v.width,H=v.height;let j=16384;const it=[36064],ct=v.stencilBuffer?33306:36096;v.depthBuffer&&it.push(ct);const Wt=n.get(v),U=Wt.__ignoreDepthValues!==void 0?Wt.__ignoreDepthValues:!1;U===!1&&(v.depthBuffer&&(j|=256),v.stencilBuffer&&(j|=1024)),e.bindFramebuffer(36008,Wt.__webglMultisampledFramebuffer),e.bindFramebuffer(36009,Wt.__webglFramebuffer),U===!0&&(s.invalidateFramebuffer(36008,[ct]),s.invalidateFramebuffer(36009,[ct])),s.blitFramebuffer(0,0,W,H,0,0,W,H,j,9728),s.invalidateFramebuffer(36008,it),e.bindFramebuffer(36008,null),e.bindFramebuffer(36009,Wt.__webglMultisampledFramebuffer)}}function vt(v){return Math.min(h,v.samples)}function gt(v){const W=n.get(v);return o&&v.samples>0&&t.has("WEBGL_multisampled_render_to_texture")===!0&&W.__useRenderToTexture!==!1}function It(v){const W=a.render.frame;m.get(v)!==W&&(m.set(v,W),v.update())}function ee(v,W){const H=v.encoding,j=v.format,it=v.type;return v.isCompressedTexture===!0||v.isVideoTexture===!0||v.format===1035||H!==3e3&&(H===3001?o===!1?t.has("EXT_sRGB")===!0&&j===1023?(v.format=1035,v.minFilter=1006,v.generateMipmaps=!1):W=xn.sRGBToLinear(W):(j!==1023||it!==1009)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture encoding:",H)),W}this.allocateTextureUnit=z,this.resetTextureUnits=A,this.setTexture2D=P,this.setTexture2DArray=$,this.setTexture3D=K,this.setTextureCube=tt,this.rebindTextures=O,this.setupRenderTarget=nt,this.updateRenderTargetMipmap=ht,this.updateMultisampleRenderTarget=at,this.setupDepthRenderbuffer=_,this.setupFrameBufferTexture=ut,this.useMultisampledRTT=gt}function Su(s,t,e){const n=e.isWebGL2;function i(r,a=null){let o;if(r===1009)return 5121;if(r===1017)return 32819;if(r===1018)return 32820;if(r===1010)return 5120;if(r===1011)return 5122;if(r===1012)return 5123;if(r===1013)return 5124;if(r===1014)return 5125;if(r===1015)return 5126;if(r===1016)return n?5131:(o=t.get("OES_texture_half_float"),o!==null?o.HALF_FLOAT_OES:null);if(r===1021)return 6406;if(r===1023)return 6408;if(r===1024)return 6409;if(r===1025)return 6410;if(r===1026)return 6402;if(r===1027)return 34041;if(r===1028)return 6403;if(r===1022)return console.warn("THREE.WebGLRenderer: THREE.RGBFormat has been removed. Use THREE.RGBAFormat instead. https://github.com/mrdoob/three.js/pull/23228"),6408;if(r===1035)return o=t.get("EXT_sRGB"),o!==null?o.SRGB_ALPHA_EXT:null;if(r===1029)return 36244;if(r===1030)return 33319;if(r===1031)return 33320;if(r===1033)return 36249;if(r===33776||r===33777||r===33778||r===33779)if(a===3001)if(o=t.get("WEBGL_compressed_texture_s3tc_srgb"),o!==null){if(r===33776)return o.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(r===33777)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(r===33778)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(r===33779)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(o=t.get("WEBGL_compressed_texture_s3tc"),o!==null){if(r===33776)return o.COMPRESSED_RGB_S3TC_DXT1_EXT;if(r===33777)return o.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(r===33778)return o.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(r===33779)return o.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(r===35840||r===35841||r===35842||r===35843)if(o=t.get("WEBGL_compressed_texture_pvrtc"),o!==null){if(r===35840)return o.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(r===35841)return o.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(r===35842)return o.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(r===35843)return o.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(r===36196)return o=t.get("WEBGL_compressed_texture_etc1"),o!==null?o.COMPRESSED_RGB_ETC1_WEBGL:null;if(r===37492||r===37496)if(o=t.get("WEBGL_compressed_texture_etc"),o!==null){if(r===37492)return a===3001?o.COMPRESSED_SRGB8_ETC2:o.COMPRESSED_RGB8_ETC2;if(r===37496)return a===3001?o.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:o.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(r===37808||r===37809||r===37810||r===37811||r===37812||r===37813||r===37814||r===37815||r===37816||r===37817||r===37818||r===37819||r===37820||r===37821)if(o=t.get("WEBGL_compressed_texture_astc"),o!==null){if(r===37808)return a===3001?o.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:o.COMPRESSED_RGBA_ASTC_4x4_KHR;if(r===37809)return a===3001?o.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:o.COMPRESSED_RGBA_ASTC_5x4_KHR;if(r===37810)return a===3001?o.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:o.COMPRESSED_RGBA_ASTC_5x5_KHR;if(r===37811)return a===3001?o.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:o.COMPRESSED_RGBA_ASTC_6x5_KHR;if(r===37812)return a===3001?o.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:o.COMPRESSED_RGBA_ASTC_6x6_KHR;if(r===37813)return a===3001?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:o.COMPRESSED_RGBA_ASTC_8x5_KHR;if(r===37814)return a===3001?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:o.COMPRESSED_RGBA_ASTC_8x6_KHR;if(r===37815)return a===3001?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:o.COMPRESSED_RGBA_ASTC_8x8_KHR;if(r===37816)return a===3001?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:o.COMPRESSED_RGBA_ASTC_10x5_KHR;if(r===37817)return a===3001?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:o.COMPRESSED_RGBA_ASTC_10x6_KHR;if(r===37818)return a===3001?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:o.COMPRESSED_RGBA_ASTC_10x8_KHR;if(r===37819)return a===3001?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:o.COMPRESSED_RGBA_ASTC_10x10_KHR;if(r===37820)return a===3001?o.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:o.COMPRESSED_RGBA_ASTC_12x10_KHR;if(r===37821)return a===3001?o.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:o.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(r===36492)if(o=t.get("EXT_texture_compression_bptc"),o!==null){if(r===36492)return a===3001?o.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:o.COMPRESSED_RGBA_BPTC_UNORM_EXT}else return null;if(r===1020)return n?34042:(o=t.get("WEBGL_depth_texture"),o!==null?o.UNSIGNED_INT_24_8_WEBGL:null)}return{convert:i}}class eo extends Xe{constructor(t=[]){super();this.cameras=t}}eo.prototype.isArrayCamera=!0;class Zi extends Ht{constructor(){super();this.type="Group"}}Zi.prototype.isGroup=!0;const Iu={type:"move"};class gr{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new Zi,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new Zi,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new R,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new R),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new Zi,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new R,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new R),this._grip}dispatchEvent(t){return this._targetRay!==null&&this._targetRay.dispatchEvent(t),this._grip!==null&&this._grip.dispatchEvent(t),this._hand!==null&&this._hand.dispatchEvent(t),this}disconnect(t){return this.dispatchEvent({type:"disconnected",data:t}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(t,e,n){let i=null,r=null,a=null;const o=this._targetRay,l=this._grip,c=this._hand;if(t&&e.session.visibilityState!=="visible-blurred")if(o!==null&&(i=e.getPose(t.targetRaySpace,n),i!==null&&(o.matrix.fromArray(i.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),i.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(i.linearVelocity)):o.hasLinearVelocity=!1,i.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(i.angularVelocity)):o.hasAngularVelocity=!1,this.dispatchEvent(Iu))),c&&t.hand){a=!0;for(const g of t.hand.values()){const Z=e.getJointPose(g,n);if(c.joints[g.jointName]===void 0){const p=new Zi;p.matrixAutoUpdate=!1,p.visible=!1,c.joints[g.jointName]=p,c.add(p)}const f=c.joints[g.jointName];Z!==null&&(f.matrix.fromArray(Z.transform.matrix),f.matrix.decompose(f.position,f.rotation,f.scale),f.jointRadius=Z.radius),f.visible=Z!==null}const d=c.joints["index-finger-tip"],h=c.joints["thumb-tip"],u=d.position.distanceTo(h.position),m=.02,b=.005;c.inputState.pinching&&u>m+b?(c.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:t.handedness,target:this})):!c.inputState.pinching&&u<=m-b&&(c.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:t.handedness,target:this}))}else l!==null&&t.gripSpace&&(r=e.getPose(t.gripSpace,n),r!==null&&(l.matrix.fromArray(r.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),r.linearVelocity?(l.hasLinearVelocity=!0,l.linearVelocity.copy(r.linearVelocity)):l.hasLinearVelocity=!1,r.angularVelocity?(l.hasAngularVelocity=!0,l.angularVelocity.copy(r.angularVelocity)):l.hasAngularVelocity=!1));return o!==null&&(o.visible=i!==null),l!==null&&(l.visible=r!==null),c!==null&&(c.visible=a!==null),this}}class no extends se{constructor(t,e,n,i,r,a,o,l,c,d){if(d=d!==void 0?d:1026,d!==1026&&d!==1027)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&d===1026&&(n=1012),n===void 0&&d===1027&&(n=1020);super(null,i,r,a,o,l,d,n,c);this.image={width:t,height:e},this.magFilter=o!==void 0?o:1003,this.minFilter=l!==void 0?l:1003,this.flipY=!1,this.generateMipmaps=!1}}no.prototype.isDepthTexture=!0;class Bu extends Oe{constructor(t,e){super();const n=this;let i=null,r=1,a=null,o="local-floor",l=null,c=null,d=null,h=null,u=null;const m=e.getContextAttributes();let b=null,g=null;const Z=[],f=new Map,p=new Xe;p.layers.enable(1),p.viewport=new Mt;const Y=new Xe;Y.layers.enable(2),Y.viewport=new Mt;const y=[p,Y],x=new eo;x.layers.enable(1),x.layers.enable(2);let M=null,N=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(S){let P=Z[S];return P===void 0&&(P=new gr,Z[S]=P),P.getTargetRaySpace()},this.getControllerGrip=function(S){let P=Z[S];return P===void 0&&(P=new gr,Z[S]=P),P.getGripSpace()},this.getHand=function(S){let P=Z[S];return P===void 0&&(P=new gr,Z[S]=P),P.getHandSpace()};function Q(S){const P=f.get(S.inputSource);P&&P.dispatchEvent({type:S.type,data:S.inputSource})}function rt(){f.forEach(function(S,P){S.disconnect(P)}),f.clear(),M=null,N=null,t.setRenderTarget(b),h=null,d=null,c=null,i=null,g=null,z.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(S){r=S,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(S){o=S,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return a},this.getBaseLayer=function(){return d!==null?d:h},this.getBinding=function(){return c},this.getFrame=function(){return u},this.getSession=function(){return i},this.setSession=async function(S){if(i=S,i!==null){if(b=t.getRenderTarget(),i.addEventListener("select",Q),i.addEventListener("selectstart",Q),i.addEventListener("selectend",Q),i.addEventListener("squeeze",Q),i.addEventListener("squeezestart",Q),i.addEventListener("squeezeend",Q),i.addEventListener("end",rt),i.addEventListener("inputsourceschange",E),m.xrCompatible!==!0&&await e.makeXRCompatible(),i.renderState.layers===void 0||t.capabilities.isWebGL2===!1){const P={antialias:i.renderState.layers===void 0?m.antialias:!0,alpha:m.alpha,depth:m.depth,stencil:m.stencil,framebufferScaleFactor:r};h=new XRWebGLLayer(i,e,P),i.updateRenderState({baseLayer:h}),g=new ye(h.framebufferWidth,h.framebufferHeight,{format:1023,type:1009,encoding:t.outputEncoding})}else{let P=null,$=null,K=null;m.depth&&(K=m.stencil?35056:33190,P=m.stencil?1027:1026,$=m.stencil?1020:1012);const tt={colorFormat:t.outputEncoding===3001?35907:32856,depthFormat:K,scaleFactor:r};c=new XRWebGLBinding(i,e),d=c.createProjectionLayer(tt),i.updateRenderState({layers:[d]}),g=new ye(d.textureWidth,d.textureHeight,{format:1023,type:1009,depthTexture:new no(d.textureWidth,d.textureHeight,$,void 0,void 0,void 0,void 0,void 0,void 0,P),stencilBuffer:m.stencil,encoding:t.outputEncoding,samples:m.antialias?4:0});const Gt=t.properties.get(g);Gt.__ignoreDepthValues=d.ignoreDepthValues}g.isXRRenderTarget=!0,this.setFoveation(1),a=await i.requestReferenceSpace(o),z.setContext(i),z.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}};function E(S){const P=i.inputSources;for(let $=0;$<Z.length;$++)f.set(P[$],Z[$]);for(let $=0;$<S.removed.length;$++){const K=S.removed[$],tt=f.get(K);tt&&(tt.dispatchEvent({type:"disconnected",data:K}),f.delete(K))}for(let $=0;$<S.added.length;$++){const K=S.added[$],tt=f.get(K);tt&&tt.dispatchEvent({type:"connected",data:K})}}const G=new R,w=new R;function I(S,P,$){G.setFromMatrixPosition(P.matrixWorld),w.setFromMatrixPosition($.matrixWorld);const K=G.distanceTo(w),tt=P.projectionMatrix.elements,Gt=$.projectionMatrix.elements,Ut=tt[14]/(tt[10]-1),Vt=tt[14]/(tt[10]+1),L=(tt[9]+1)/tt[5],kt=(tt[9]-1)/tt[5],St=(tt[8]-1)/tt[0],ut=(Gt[8]+1)/Gt[0],mt=Ut*St,Jt=Ut*ut,_=K/(-St+ut),O=_*-St;P.matrixWorld.decompose(S.position,S.quaternion,S.scale),S.translateX(O),S.translateZ(_),S.matrixWorld.compose(S.position,S.quaternion,S.scale),S.matrixWorldInverse.copy(S.matrixWorld).invert();const nt=Ut+_,ht=Vt+_,at=mt-O,vt=Jt+(K-O),gt=L*Vt/ht*nt,It=kt*Vt/ht*nt;S.projectionMatrix.makePerspective(at,vt,gt,It,nt,ht)}function C(S,P){P===null?S.matrixWorld.copy(S.matrix):S.matrixWorld.multiplyMatrices(P.matrixWorld,S.matrix),S.matrixWorldInverse.copy(S.matrixWorld).invert()}this.updateCamera=function(S){if(i===null)return;x.near=Y.near=p.near=S.near,x.far=Y.far=p.far=S.far,(M!==x.near||N!==x.far)&&(i.updateRenderState({depthNear:x.near,depthFar:x.far}),M=x.near,N=x.far);const P=S.parent,$=x.cameras;C(x,P);for(let tt=0;tt<$.length;tt++)C($[tt],P);x.matrixWorld.decompose(x.position,x.quaternion,x.scale),S.position.copy(x.position),S.quaternion.copy(x.quaternion),S.scale.copy(x.scale),S.matrix.copy(x.matrix),S.matrixWorld.copy(x.matrixWorld);const K=S.children;for(let tt=0,Gt=K.length;tt<Gt;tt++)K[tt].updateMatrixWorld(!0);$.length===2?I(x,p,Y):x.projectionMatrix.copy(p.projectionMatrix)},this.getCamera=function(){return x},this.getFoveation=function(){if(d!==null)return d.fixedFoveation;if(h!==null)return h.fixedFoveation},this.setFoveation=function(S){d!==null&&(d.fixedFoveation=S),h!==null&&h.fixedFoveation!==void 0&&(h.fixedFoveation=S)};let T=null;function A(S,P){if(l=P.getViewerPose(a),u=P,l!==null){const K=l.views;h!==null&&(t.setRenderTargetFramebuffer(g,h.framebuffer),t.setRenderTarget(g));let tt=!1;K.length!==x.cameras.length&&(x.cameras.length=0,tt=!0);for(let Gt=0;Gt<K.length;Gt++){const Ut=K[Gt];let Vt=null;if(h!==null)Vt=h.getViewport(Ut);else{const kt=c.getViewSubImage(d,Ut);Vt=kt.viewport,Gt===0&&(t.setRenderTargetTextures(g,kt.colorTexture,d.ignoreDepthValues?void 0:kt.depthStencilTexture),t.setRenderTarget(g))}const L=y[Gt];L.matrix.fromArray(Ut.transform.matrix),L.projectionMatrix.fromArray(Ut.projectionMatrix),L.viewport.set(Vt.x,Vt.y,Vt.width,Vt.height),Gt===0&&x.matrix.copy(L.matrix),tt===!0&&x.cameras.push(L)}}const $=i.inputSources;for(let K=0;K<Z.length;K++){const tt=Z[K],Gt=$[K];tt.update(Gt,P,a)}T&&T(S,P),u=null}const z=new va;z.setAnimationLoop(A),this.setAnimationLoop=function(S){T=S},this.dispose=function(){}}}function Cu(s){function t(f,p){f.fogColor.value.copy(p.color),p.isFog?(f.fogNear.value=p.near,f.fogFar.value=p.far):p.isFogExp2&&(f.fogDensity.value=p.density)}function e(f,p,Y,y,x){p.isMeshBasicMaterial?n(f,p):p.isMeshLambertMaterial?(n(f,p),l(f,p)):p.isMeshToonMaterial?(n(f,p),d(f,p)):p.isMeshPhongMaterial?(n(f,p),c(f,p)):p.isMeshStandardMaterial?(n(f,p),p.isMeshPhysicalMaterial?u(f,p,x):h(f,p)):p.isMeshMatcapMaterial?(n(f,p),m(f,p)):p.isMeshDepthMaterial?(n(f,p),b(f,p)):p.isMeshDistanceMaterial?(n(f,p),g(f,p)):p.isMeshNormalMaterial?(n(f,p),Z(f,p)):p.isLineBasicMaterial?(i(f,p),p.isLineDashedMaterial&&r(f,p)):p.isPointsMaterial?a(f,p,Y,y):p.isSpriteMaterial?o(f,p):p.isShadowMaterial?(f.color.value.copy(p.color),f.opacity.value=p.opacity):p.isShaderMaterial&&(p.uniformsNeedUpdate=!1)}function n(f,p){f.opacity.value=p.opacity,p.color&&f.diffuse.value.copy(p.color),p.emissive&&f.emissive.value.copy(p.emissive).multiplyScalar(p.emissiveIntensity),p.map&&(f.map.value=p.map),p.alphaMap&&(f.alphaMap.value=p.alphaMap),p.specularMap&&(f.specularMap.value=p.specularMap),p.alphaTest>0&&(f.alphaTest.value=p.alphaTest);const Y=s.get(p).envMap;Y&&(f.envMap.value=Y,f.flipEnvMap.value=Y.isCubeTexture&&Y.isRenderTargetTexture===!1?-1:1,f.reflectivity.value=p.reflectivity,f.ior.value=p.ior,f.refractionRatio.value=p.refractionRatio),p.lightMap&&(f.lightMap.value=p.lightMap,f.lightMapIntensity.value=p.lightMapIntensity),p.aoMap&&(f.aoMap.value=p.aoMap,f.aoMapIntensity.value=p.aoMapIntensity);let y;p.map?y=p.map:p.specularMap?y=p.specularMap:p.displacementMap?y=p.displacementMap:p.normalMap?y=p.normalMap:p.bumpMap?y=p.bumpMap:p.roughnessMap?y=p.roughnessMap:p.metalnessMap?y=p.metalnessMap:p.alphaMap?y=p.alphaMap:p.emissiveMap?y=p.emissiveMap:p.clearcoatMap?y=p.clearcoatMap:p.clearcoatNormalMap?y=p.clearcoatNormalMap:p.clearcoatRoughnessMap?y=p.clearcoatRoughnessMap:p.specularIntensityMap?y=p.specularIntensityMap:p.specularColorMap?y=p.specularColorMap:p.transmissionMap?y=p.transmissionMap:p.thicknessMap?y=p.thicknessMap:p.sheenColorMap?y=p.sheenColorMap:p.sheenRoughnessMap&&(y=p.sheenRoughnessMap),y!==void 0&&(y.isWebGLRenderTarget&&(y=y.texture),y.matrixAutoUpdate===!0&&y.updateMatrix(),f.uvTransform.value.copy(y.matrix));let x;p.aoMap?x=p.aoMap:p.lightMap&&(x=p.lightMap),x!==void 0&&(x.isWebGLRenderTarget&&(x=x.texture),x.matrixAutoUpdate===!0&&x.updateMatrix(),f.uv2Transform.value.copy(x.matrix))}function i(f,p){f.diffuse.value.copy(p.color),f.opacity.value=p.opacity}function r(f,p){f.dashSize.value=p.dashSize,f.totalSize.value=p.dashSize+p.gapSize,f.scale.value=p.scale}function a(f,p,Y,y){f.diffuse.value.copy(p.color),f.opacity.value=p.opacity,f.size.value=p.size*Y,f.scale.value=y*.5,p.map&&(f.map.value=p.map),p.alphaMap&&(f.alphaMap.value=p.alphaMap),p.alphaTest>0&&(f.alphaTest.value=p.alphaTest);let x;p.map?x=p.map:p.alphaMap&&(x=p.alphaMap),x!==void 0&&(x.matrixAutoUpdate===!0&&x.updateMatrix(),f.uvTransform.value.copy(x.matrix))}function o(f,p){f.diffuse.value.copy(p.color),f.opacity.value=p.opacity,f.rotation.value=p.rotation,p.map&&(f.map.value=p.map),p.alphaMap&&(f.alphaMap.value=p.alphaMap),p.alphaTest>0&&(f.alphaTest.value=p.alphaTest);let Y;p.map?Y=p.map:p.alphaMap&&(Y=p.alphaMap),Y!==void 0&&(Y.matrixAutoUpdate===!0&&Y.updateMatrix(),f.uvTransform.value.copy(Y.matrix))}function l(f,p){p.emissiveMap&&(f.emissiveMap.value=p.emissiveMap)}function c(f,p){f.specular.value.copy(p.specular),f.shininess.value=Math.max(p.shininess,1e-4),p.emissiveMap&&(f.emissiveMap.value=p.emissiveMap),p.bumpMap&&(f.bumpMap.value=p.bumpMap,f.bumpScale.value=p.bumpScale,p.side===1&&(f.bumpScale.value*=-1)),p.normalMap&&(f.normalMap.value=p.normalMap,f.normalScale.value.copy(p.normalScale),p.side===1&&f.normalScale.value.negate()),p.displacementMap&&(f.displacementMap.value=p.displacementMap,f.displacementScale.value=p.displacementScale,f.displacementBias.value=p.displacementBias)}function d(f,p){p.gradientMap&&(f.gradientMap.value=p.gradientMap),p.emissiveMap&&(f.emissiveMap.value=p.emissiveMap),p.bumpMap&&(f.bumpMap.value=p.bumpMap,f.bumpScale.value=p.bumpScale,p.side===1&&(f.bumpScale.value*=-1)),p.normalMap&&(f.normalMap.value=p.normalMap,f.normalScale.value.copy(p.normalScale),p.side===1&&f.normalScale.value.negate()),p.displacementMap&&(f.displacementMap.value=p.displacementMap,f.displacementScale.value=p.displacementScale,f.displacementBias.value=p.displacementBias)}function h(f,p){f.roughness.value=p.roughness,f.metalness.value=p.metalness,p.roughnessMap&&(f.roughnessMap.value=p.roughnessMap),p.metalnessMap&&(f.metalnessMap.value=p.metalnessMap),p.emissiveMap&&(f.emissiveMap.value=p.emissiveMap),p.bumpMap&&(f.bumpMap.value=p.bumpMap,f.bumpScale.value=p.bumpScale,p.side===1&&(f.bumpScale.value*=-1)),p.normalMap&&(f.normalMap.value=p.normalMap,f.normalScale.value.copy(p.normalScale),p.side===1&&f.normalScale.value.negate()),p.displacementMap&&(f.displacementMap.value=p.displacementMap,f.displacementScale.value=p.displacementScale,f.displacementBias.value=p.displacementBias),s.get(p).envMap&&(f.envMapIntensity.value=p.envMapIntensity)}function u(f,p,Y){h(f,p),f.ior.value=p.ior,p.sheen>0&&(f.sheenColor.value.copy(p.sheenColor).multiplyScalar(p.sheen),f.sheenRoughness.value=p.sheenRoughness,p.sheenColorMap&&(f.sheenColorMap.value=p.sheenColorMap),p.sheenRoughnessMap&&(f.sheenRoughnessMap.value=p.sheenRoughnessMap)),p.clearcoat>0&&(f.clearcoat.value=p.clearcoat,f.clearcoatRoughness.value=p.clearcoatRoughness,p.clearcoatMap&&(f.clearcoatMap.value=p.clearcoatMap),p.clearcoatRoughnessMap&&(f.clearcoatRoughnessMap.value=p.clearcoatRoughnessMap),p.clearcoatNormalMap&&(f.clearcoatNormalScale.value.copy(p.clearcoatNormalScale),f.clearcoatNormalMap.value=p.clearcoatNormalMap,p.side===1&&f.clearcoatNormalScale.value.negate())),p.transmission>0&&(f.transmission.value=p.transmission,f.transmissionSamplerMap.value=Y.texture,f.transmissionSamplerSize.value.set(Y.width,Y.height),p.transmissionMap&&(f.transmissionMap.value=p.transmissionMap),f.thickness.value=p.thickness,p.thicknessMap&&(f.thicknessMap.value=p.thicknessMap),f.attenuationDistance.value=p.attenuationDistance,f.attenuationColor.value.copy(p.attenuationColor)),f.specularIntensity.value=p.specularIntensity,f.specularColor.value.copy(p.specularColor),p.specularIntensityMap&&(f.specularIntensityMap.value=p.specularIntensityMap),p.specularColorMap&&(f.specularColorMap.value=p.specularColorMap)}function m(f,p){p.matcap&&(f.matcap.value=p.matcap),p.bumpMap&&(f.bumpMap.value=p.bumpMap,f.bumpScale.value=p.bumpScale,p.side===1&&(f.bumpScale.value*=-1)),p.normalMap&&(f.normalMap.value=p.normalMap,f.normalScale.value.copy(p.normalScale),p.side===1&&f.normalScale.value.negate()),p.displacementMap&&(f.displacementMap.value=p.displacementMap,f.displacementScale.value=p.displacementScale,f.displacementBias.value=p.displacementBias)}function b(f,p){p.displacementMap&&(f.displacementMap.value=p.displacementMap,f.displacementScale.value=p.displacementScale,f.displacementBias.value=p.displacementBias)}function g(f,p){p.displacementMap&&(f.displacementMap.value=p.displacementMap,f.displacementScale.value=p.displacementScale,f.displacementBias.value=p.displacementBias),f.referencePosition.value.copy(p.referencePosition),f.nearDistance.value=p.nearDistance,f.farDistance.value=p.farDistance}function Z(f,p){p.bumpMap&&(f.bumpMap.value=p.bumpMap,f.bumpScale.value=p.bumpScale,p.side===1&&(f.bumpScale.value*=-1)),p.normalMap&&(f.normalMap.value=p.normalMap,f.normalScale.value.copy(p.normalScale),p.side===1&&f.normalScale.value.negate()),p.displacementMap&&(f.displacementMap.value=p.displacementMap,f.displacementScale.value=p.displacementScale,f.displacementBias.value=p.displacementBias)}return{refreshFogUniforms:t,refreshMaterialUniforms:e}}function Au(){const s=hi("canvas");return s.style.display="block",s}function Kt(s={}){const t=s.canvas!==void 0?s.canvas:Au(),e=s.context!==void 0?s.context:null,n=s.depth!==void 0?s.depth:!0,i=s.stencil!==void 0?s.stencil:!0,r=s.antialias!==void 0?s.antialias:!1,a=s.premultipliedAlpha!==void 0?s.premultipliedAlpha:!0,o=s.preserveDrawingBuffer!==void 0?s.preserveDrawingBuffer:!1,l=s.powerPreference!==void 0?s.powerPreference:"default",c=s.failIfMajorPerformanceCaveat!==void 0?s.failIfMajorPerformanceCaveat:!1;let d;s.context!==void 0?d=e.getContextAttributes().alpha:d=s.alpha!==void 0?s.alpha:!1;let h=null,u=null;const m=[],b=[];this.domElement=t,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputEncoding=3e3,this.physicallyCorrectLights=!1,this.toneMapping=0,this.toneMappingExposure=1;const g=this;let Z=!1,f=0,p=0,Y=null,y=-1,x=null;const M=new Mt,N=new Mt;let Q=null,rt=t.width,E=t.height,G=1,w=null,I=null;const C=new Mt(0,0,rt,E),T=new Mt(0,0,rt,E);let A=!1;const z=new bi;let S=!1,P=!1,$=null;const K=new ft,tt=new q,Gt=new R,Ut={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function Vt(){return Y===null?G:1}let L=e;function kt(V,F){for(let J=0;J<V.length;J++){const B=V[J],k=t.getContext(B,F);if(k!==null)return k}return null}try{const V={alpha:!0,depth:n,stencil:i,antialias:r,premultipliedAlpha:a,preserveDrawingBuffer:o,powerPreference:l,failIfMajorPerformanceCaveat:c};if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${yn}`),t.addEventListener("webglcontextlost",X,!1),t.addEventListener("webglcontextrestored",dt,!1),L===null){const F=["webgl2","webgl","experimental-webgl"];if(g.isWebGL1Renderer===!0&&F.shift(),L=kt(F,V),L===null)throw kt(F)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}L.getShaderPrecisionFormat===void 0&&(L.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(V){throw console.error("THREE.WebGLRenderer: "+V.message),V}let St,ut,mt,Jt,_,O,nt,ht,at,vt,gt,It,ee,v,W,H,j,it,ct,Wt,U,Yt,Xt;function Zt(){St=new th(L),ut=new Qd(L,St,s),St.init(ut),Yt=new Su(L,St,ut),mt=new Nu(L,St,ut),Jt=new ih(L),_=new Gu,O=new Fu(L,St,mt,_,ut,Yt,Jt),nt=new Od(g),ht=new $d(g),at=new jl(L,ut),Xt=new Pd(L,St,at,ut),vt=new eh(L,at,Jt,Xt),gt=new oh(L,vt,at,Jt),ct=new ah(L,ut,O),H=new jd(_),It=new Zu(g,nt,ht,St,ut,Xt,H),ee=new Cu(_),v=new yu,W=new Xu(St,ut),it=new kd(g,nt,mt,gt,d,a),j=new to(g,gt,ut),Wt=new Ld(L,St,Jt,ut),U=new nh(L,St,Jt,ut),Jt.programs=It.programs,g.capabilities=ut,g.extensions=St,g.properties=_,g.renderLists=v,g.shadowMap=j,g.state=mt,g.info=Jt}Zt();const pt=new Bu(g,L);this.xr=pt,this.getContext=function(){return L},this.getContextAttributes=function(){return L.getContextAttributes()},this.forceContextLoss=function(){const V=St.get("WEBGL_lose_context");V&&V.loseContext()},this.forceContextRestore=function(){const V=St.get("WEBGL_lose_context");V&&V.restoreContext()},this.getPixelRatio=function(){return G},this.setPixelRatio=function(V){V!==void 0&&(G=V,this.setSize(rt,E,!1))},this.getSize=function(V){return V.set(rt,E)},this.setSize=function(V,F,J){if(pt.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}rt=V,E=F,t.width=Math.floor(V*G),t.height=Math.floor(F*G),J!==!1&&(t.style.width=V+"px",t.style.height=F+"px"),this.setViewport(0,0,V,F)},this.getDrawingBufferSize=function(V){return V.set(rt*G,E*G).floor()},this.setDrawingBufferSize=function(V,F,J){rt=V,E=F,G=J,t.width=Math.floor(V*J),t.height=Math.floor(F*J),this.setViewport(0,0,V,F)},this.getCurrentViewport=function(V){return V.copy(M)},this.getViewport=function(V){return V.copy(C)},this.setViewport=function(V,F,J,B){V.isVector4?C.set(V.x,V.y,V.z,V.w):C.set(V,F,J,B),mt.viewport(M.copy(C).multiplyScalar(G).floor())},this.getScissor=function(V){return V.copy(T)},this.setScissor=function(V,F,J,B){V.isVector4?T.set(V.x,V.y,V.z,V.w):T.set(V,F,J,B),mt.scissor(N.copy(T).multiplyScalar(G).floor())},this.getScissorTest=function(){return A},this.setScissorTest=function(V){mt.setScissorTest(A=V)},this.setOpaqueSort=function(V){w=V},this.setTransparentSort=function(V){I=V},this.getClearColor=function(V){return V.copy(it.getClearColor())},this.setClearColor=function(){it.setClearColor.apply(it,arguments)},this.getClearAlpha=function(){return it.getClearAlpha()},this.setClearAlpha=function(){it.setClearAlpha.apply(it,arguments)},this.clear=function(V=!0,F=!0,J=!0){let B=0;V&&(B|=16384),F&&(B|=256),J&&(B|=1024),L.clear(B)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",X,!1),t.removeEventListener("webglcontextrestored",dt,!1),v.dispose(),W.dispose(),_.dispose(),nt.dispose(),ht.dispose(),gt.dispose(),Xt.dispose(),It.dispose(),pt.dispose(),pt.removeEventListener("sessionstart",Dt),pt.removeEventListener("sessionend",Ve),$&&($.dispose(),$=null),qt.stop()};function X(V){V.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),Z=!0}function dt(){console.log("THREE.WebGLRenderer: Context Restored."),Z=!1;const V=Jt.autoReset,F=j.enabled,J=j.autoUpdate,B=j.needsUpdate,k=j.type;Zt(),Jt.autoReset=V,j.enabled=F,j.autoUpdate=J,j.needsUpdate=B,j.type=k}function ot(V){const F=V.target;F.removeEventListener("dispose",ot),Nt(F)}function Nt(V){lt(V),_.remove(V)}function lt(V){const F=_.get(V).programs;F!==void 0&&(F.forEach(function(J){It.releaseProgram(J)}),V.isShaderMaterial&&It.releaseShaderCache(V))}this.renderBufferDirect=function(V,F,J,B,k,Rt){F===null&&(F=Ut);const Ft=k.isMesh&&k.matrixWorld.determinant()<0,Ct=df(V,F,J,B,k);mt.setMaterial(B,Ft);let Bt=J.index;const jt=J.attributes.position;if(Bt===null){if(jt===void 0||jt.count===0)return}else if(Bt.count===0)return;let zt=1;B.wireframe===!0&&(Bt=vt.getWireframeAttribute(J),zt=2),Xt.setup(k,B,Ct,J,Bt);let Et,ie=Wt;Bt!==null&&(Et=at.get(Bt),ie=U,ie.setIndex(Et));const Fn=Bt!==null?Bt.count:jt.count,li=J.drawRange.start*zt,ci=J.drawRange.count*zt,Le=Rt!==null?Rt.start*zt:0,Pt=Rt!==null?Rt.count*zt:1/0,di=Math.max(li,Le),le=Math.min(Fn,li+ci,Le+Pt)-1,Qe=Math.max(0,le-di+1);if(Qe!==0){if(k.isMesh)B.wireframe===!0?(mt.setLineWidth(B.wireframeLinewidth*Vt()),ie.setMode(1)):ie.setMode(4);else if(k.isLine){let Wn=B.linewidth;Wn===void 0&&(Wn=1),mt.setLineWidth(Wn*Vt()),k.isLineSegments?ie.setMode(1):k.isLineLoop?ie.setMode(2):ie.setMode(3)}else k.isPoints?ie.setMode(0):k.isSprite&&ie.setMode(4);if(k.isInstancedMesh)ie.renderInstances(di,Qe,k.count);else if(J.isInstancedBufferGeometry){const Wn=Math.min(J.instanceCount,J._maxInstanceCount);ie.renderInstances(di,Qe,Wn)}else ie.render(di,Qe)}},this.compile=function(V,F){u=W.get(V),u.init(),b.push(u),V.traverseVisible(function(J){J.isLight&&J.layers.test(F.layers)&&(u.pushLight(J),J.castShadow&&u.pushShadow(J))}),u.setupLights(g.physicallyCorrectLights),V.traverse(function(J){const B=J.material;if(B)if(Array.isArray(B))for(let k=0;k<B.length;k++){const Rt=B[k];ea(Rt,V,J)}else ea(B,V,J)}),b.pop(),u=null};let et=null;function wt(V){et&&et(V)}function Dt(){qt.stop()}function Ve(){qt.start()}const qt=new va;qt.setAnimationLoop(wt),typeof window!="undefined"&&qt.setContext(window),this.setAnimationLoop=function(V){et=V,pt.setAnimationLoop(V),V===null?qt.stop():qt.start()},pt.addEventListener("sessionstart",Dt),pt.addEventListener("sessionend",Ve),this.render=function(V,F){if(F!==void 0&&F.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(Z===!0)return;V.autoUpdate===!0&&V.updateMatrixWorld(),F.parent===null&&F.updateMatrixWorld(),pt.enabled===!0&&pt.isPresenting===!0&&(pt.cameraAutoUpdate===!0&&pt.updateCamera(F),F=pt.getCamera()),V.isScene===!0&&V.onBeforeRender(g,V,F,Y),u=W.get(V,b.length),u.init(),b.push(u),K.multiplyMatrices(F.projectionMatrix,F.matrixWorldInverse),z.setFromProjectionMatrix(K),P=this.localClippingEnabled,S=H.init(this.clippingPlanes,P,F),h=v.get(V,m.length),h.init(),m.push(h),ke(V,F,0,g.sortObjects),h.finish(),g.sortObjects===!0&&h.sort(w,I),S===!0&&H.beginShadows();const J=u.state.shadowsArray;if(j.render(J,V,F),S===!0&&H.endShadows(),this.info.autoReset===!0&&this.info.reset(),it.render(h,V),u.setupLights(g.physicallyCorrectLights),F.isArrayCamera){const B=F.cameras;for(let k=0,Rt=B.length;k<Rt;k++){const Ft=B[k];Pe(h,V,Ft,Ft.viewport)}}else Pe(h,V,F);Y!==null&&(O.updateMultisampleRenderTarget(Y),O.updateRenderTargetMipmap(Y)),V.isScene===!0&&V.onAfterRender(g,V,F),Xt.resetDefaultState(),y=-1,x=null,b.pop(),b.length>0?u=b[b.length-1]:u=null,m.pop(),m.length>0?h=m[m.length-1]:h=null};function ke(V,F,J,B){if(V.visible===!1)return;if(V.layers.test(F.layers)){if(V.isGroup)J=V.renderOrder;else if(V.isLOD)V.autoUpdate===!0&&V.update(F);else if(V.isLight)u.pushLight(V),V.castShadow&&u.pushShadow(V);else if(V.isSprite){if(!V.frustumCulled||z.intersectsSprite(V)){B&&Gt.setFromMatrixPosition(V.matrixWorld).applyMatrix4(K);const Ft=gt.update(V),Ct=V.material;Ct.visible&&h.push(V,Ft,Ct,J,Gt.z,null)}}else if((V.isMesh||V.isLine||V.isPoints)&&(V.isSkinnedMesh&&V.skeleton.frame!==Jt.render.frame&&(V.skeleton.update(),V.skeleton.frame=Jt.render.frame),!V.frustumCulled||z.intersectsObject(V))){B&&Gt.setFromMatrixPosition(V.matrixWorld).applyMatrix4(K);const Ft=gt.update(V),Ct=V.material;if(Array.isArray(Ct)){const Bt=Ft.groups;for(let jt=0,zt=Bt.length;jt<zt;jt++){const Et=Bt[jt],ie=Ct[Et.materialIndex];ie&&ie.visible&&h.push(V,Ft,ie,J,Gt.z,Et)}}else Ct.visible&&h.push(V,Ft,Ct,J,Gt.z,null)}}const Rt=V.children;for(let Ft=0,Ct=Rt.length;Ft<Ct;Ft++)ke(Rt[Ft],F,J,B)}function Pe(V,F,J,B){const k=V.opaque,Rt=V.transmissive,Ft=V.transparent;u.setupLightsView(J),Rt.length>0&&lf(k,F,J),B&&mt.viewport(M.copy(B)),k.length>0&&Ss(k,F,J),Rt.length>0&&Ss(Rt,F,J),Ft.length>0&&Ss(Ft,F,J),mt.buffers.depth.setTest(!0),mt.buffers.depth.setMask(!0),mt.buffers.color.setMask(!0),mt.setPolygonOffset(!1)}function lf(V,F,J){const B=ut.isWebGL2;$===null&&($=new ye(1,1,{generateMipmaps:!0,type:Yt.convert(1016)!==null?1016:1009,minFilter:1008,samples:B&&r===!0?4:0})),g.getDrawingBufferSize(tt),B?$.setSize(tt.x,tt.y):$.setSize(As(tt.x),As(tt.y));const k=g.getRenderTarget();g.setRenderTarget($),g.clear();const Rt=g.toneMapping;g.toneMapping=0,Ss(V,F,J),g.toneMapping=Rt,O.updateMultisampleRenderTarget($),O.updateRenderTargetMipmap($),g.setRenderTarget(k)}function Ss(V,F,J){const B=F.isScene===!0?F.overrideMaterial:null;for(let k=0,Rt=V.length;k<Rt;k++){const Ft=V[k],Ct=Ft.object,Bt=Ft.geometry,jt=B===null?Ft.material:B,zt=Ft.group;Ct.layers.test(J.layers)&&cf(Ct,F,J,Bt,jt,zt)}}function cf(V,F,J,B,k,Rt){V.onBeforeRender(g,F,J,B,k,Rt),V.modelViewMatrix.multiplyMatrices(J.matrixWorldInverse,V.matrixWorld),V.normalMatrix.getNormalMatrix(V.modelViewMatrix),k.onBeforeRender(g,F,J,B,V,Rt),k.transparent===!0&&k.side===2?(k.side=1,k.needsUpdate=!0,g.renderBufferDirect(J,F,B,k,V,Rt),k.side=0,k.needsUpdate=!0,g.renderBufferDirect(J,F,B,k,V,Rt),k.side=2):g.renderBufferDirect(J,F,B,k,V,Rt),V.onAfterRender(g,F,J,B,k,Rt)}function ea(V,F,J){F.isScene!==!0&&(F=Ut);const B=_.get(V),k=u.state.lights,Rt=u.state.shadowsArray,Ft=k.state.version,Ct=It.getParameters(V,k.state,Rt,F,J),Bt=It.getProgramCacheKey(Ct);let jt=B.programs;B.environment=V.isMeshStandardMaterial?F.environment:null,B.fog=F.fog,B.envMap=(V.isMeshStandardMaterial?ht:nt).get(V.envMap||B.environment),jt===void 0&&(V.addEventListener("dispose",ot),jt=new Map,B.programs=jt);let zt=jt.get(Bt);if(zt!==void 0){if(B.currentProgram===zt&&B.lightsStateVersion===Ft)return Yl(V,Ct),zt}else Ct.uniforms=It.getUniforms(V),V.onBuild(J,Ct,g),V.onBeforeCompile(Ct,g),zt=It.acquireProgram(Ct,Bt),jt.set(Bt,zt),B.uniforms=Ct.uniforms;const Et=B.uniforms;(!V.isShaderMaterial&&!V.isRawShaderMaterial||V.clipping===!0)&&(Et.clippingPlanes=H.uniform),Yl(V,Ct),B.needsLights=uf(V),B.lightsStateVersion=Ft,B.needsLights&&(Et.ambientLightColor.value=k.state.ambient,Et.lightProbe.value=k.state.probe,Et.directionalLights.value=k.state.directional,Et.directionalLightShadows.value=k.state.directionalShadow,Et.spotLights.value=k.state.spot,Et.spotLightShadows.value=k.state.spotShadow,Et.rectAreaLights.value=k.state.rectArea,Et.ltc_1.value=k.state.rectAreaLTC1,Et.ltc_2.value=k.state.rectAreaLTC2,Et.pointLights.value=k.state.point,Et.pointLightShadows.value=k.state.pointShadow,Et.hemisphereLights.value=k.state.hemi,Et.directionalShadowMap.value=k.state.directionalShadowMap,Et.directionalShadowMatrix.value=k.state.directionalShadowMatrix,Et.spotShadowMap.value=k.state.spotShadowMap,Et.spotShadowMatrix.value=k.state.spotShadowMatrix,Et.pointShadowMap.value=k.state.pointShadowMap,Et.pointShadowMatrix.value=k.state.pointShadowMatrix);const ie=zt.getUniforms(),Fn=un.seqWithValue(ie.seq,Et);return B.currentProgram=zt,B.uniformsList=Fn,zt}function Yl(V,F){const J=_.get(V);J.outputEncoding=F.outputEncoding,J.instancing=F.instancing,J.skinning=F.skinning,J.morphTargets=F.morphTargets,J.morphNormals=F.morphNormals,J.morphColors=F.morphColors,J.morphTargetsCount=F.morphTargetsCount,J.numClippingPlanes=F.numClippingPlanes,J.numIntersection=F.numClipIntersection,J.vertexAlphas=F.vertexAlphas,J.vertexTangents=F.vertexTangents,J.toneMapping=F.toneMapping}function df(V,F,J,B,k){F.isScene!==!0&&(F=Ut),O.resetTextureUnits();const Rt=F.fog,Ft=B.isMeshStandardMaterial?F.environment:null,Ct=Y===null?g.outputEncoding:Y.isXRRenderTarget===!0?Y.texture.encoding:3e3,Bt=(B.isMeshStandardMaterial?ht:nt).get(B.envMap||Ft),jt=B.vertexColors===!0&&!!J.attributes.color&&J.attributes.color.itemSize===4,zt=!!B.normalMap&&!!J.attributes.tangent,Et=!!J.morphAttributes.position,ie=!!J.morphAttributes.normal,Fn=!!J.morphAttributes.color,li=B.toneMapped?g.toneMapping:0,ci=J.morphAttributes.position||J.morphAttributes.normal||J.morphAttributes.color,Le=ci!==void 0?ci.length:0,Pt=_.get(B),di=u.state.lights;if(S===!0&&(P===!0||V!==x)){const Je=V===x&&B.id===y;H.setState(B,V,Je)}let le=!1;B.version===Pt.__version?(Pt.needsLights&&Pt.lightsStateVersion!==di.state.version||Pt.outputEncoding!==Ct||k.isInstancedMesh&&Pt.instancing===!1||!k.isInstancedMesh&&Pt.instancing===!0||k.isSkinnedMesh&&Pt.skinning===!1||!k.isSkinnedMesh&&Pt.skinning===!0||Pt.envMap!==Bt||B.fog&&Pt.fog!==Rt||Pt.numClippingPlanes!==void 0&&(Pt.numClippingPlanes!==H.numPlanes||Pt.numIntersection!==H.numIntersection)||Pt.vertexAlphas!==jt||Pt.vertexTangents!==zt||Pt.morphTargets!==Et||Pt.morphNormals!==ie||Pt.morphColors!==Fn||Pt.toneMapping!==li||ut.isWebGL2===!0&&Pt.morphTargetsCount!==Le)&&(le=!0):(le=!0,Pt.__version=B.version);let Qe=Pt.currentProgram;le===!0&&(Qe=ea(B,F,k));let Wn=!1,Ji=!1,na=!1;const We=Qe.getUniforms(),Ti=Pt.uniforms;if(mt.useProgram(Qe.program)&&(Wn=!0,Ji=!0,na=!0),B.id!==y&&(y=B.id,Ji=!0),Wn||x!==V){if(We.setValue(L,"projectionMatrix",V.projectionMatrix),ut.logarithmicDepthBuffer&&We.setValue(L,"logDepthBufFC",2/(Math.log(V.far+1)/Math.LN2)),x!==V&&(x=V,Ji=!0,na=!0),B.isShaderMaterial||B.isMeshPhongMaterial||B.isMeshToonMaterial||B.isMeshStandardMaterial||B.envMap){const Je=We.map.cameraPosition;Je!==void 0&&Je.setValue(L,Gt.setFromMatrixPosition(V.matrixWorld))}(B.isMeshPhongMaterial||B.isMeshToonMaterial||B.isMeshLambertMaterial||B.isMeshBasicMaterial||B.isMeshStandardMaterial||B.isShaderMaterial)&&We.setValue(L,"isOrthographic",V.isOrthographicCamera===!0),(B.isMeshPhongMaterial||B.isMeshToonMaterial||B.isMeshLambertMaterial||B.isMeshBasicMaterial||B.isMeshStandardMaterial||B.isShaderMaterial||B.isShadowMaterial||k.isSkinnedMesh)&&We.setValue(L,"viewMatrix",V.matrixWorldInverse)}if(k.isSkinnedMesh){We.setOptional(L,k,"bindMatrix"),We.setOptional(L,k,"bindMatrixInverse");const Je=k.skeleton;Je&&(ut.floatVertexTextures?(Je.boneTexture===null&&Je.computeBoneTexture(),We.setValue(L,"boneTexture",Je.boneTexture,O),We.setValue(L,"boneTextureSize",Je.boneTextureSize)):We.setOptional(L,Je,"boneMatrices"))}const ia=J.morphAttributes;return(ia.position!==void 0||ia.normal!==void 0||ia.color!==void 0&&ut.isWebGL2===!0)&&ct.update(k,J,B,Qe),(Ji||Pt.receiveShadow!==k.receiveShadow)&&(Pt.receiveShadow=k.receiveShadow,We.setValue(L,"receiveShadow",k.receiveShadow)),Ji&&(We.setValue(L,"toneMappingExposure",g.toneMappingExposure),Pt.needsLights&&hf(Ti,na),Rt&&B.fog&&ee.refreshFogUniforms(Ti,Rt),ee.refreshMaterialUniforms(Ti,B,G,E,$),un.upload(L,Pt.uniformsList,Ti,O)),B.isShaderMaterial&&B.uniformsNeedUpdate===!0&&(un.upload(L,Pt.uniformsList,Ti,O),B.uniformsNeedUpdate=!1),B.isSpriteMaterial&&We.setValue(L,"center",k.center),We.setValue(L,"modelViewMatrix",k.modelViewMatrix),We.setValue(L,"normalMatrix",k.normalMatrix),We.setValue(L,"modelMatrix",k.matrixWorld),Qe}function hf(V,F){V.ambientLightColor.needsUpdate=F,V.lightProbe.needsUpdate=F,V.directionalLights.needsUpdate=F,V.directionalLightShadows.needsUpdate=F,V.pointLights.needsUpdate=F,V.pointLightShadows.needsUpdate=F,V.spotLights.needsUpdate=F,V.spotLightShadows.needsUpdate=F,V.rectAreaLights.needsUpdate=F,V.hemisphereLights.needsUpdate=F}function uf(V){return V.isMeshLambertMaterial||V.isMeshToonMaterial||V.isMeshPhongMaterial||V.isMeshStandardMaterial||V.isShadowMaterial||V.isShaderMaterial&&V.lights===!0}this.getActiveCubeFace=function(){return f},this.getActiveMipmapLevel=function(){return p},this.getRenderTarget=function(){return Y},this.setRenderTargetTextures=function(V,F,J){_.get(V.texture).__webglTexture=F,_.get(V.depthTexture).__webglTexture=J;const B=_.get(V);B.__hasExternalTextures=!0,B.__hasExternalTextures&&(B.__autoAllocateDepthBuffer=J===void 0,B.__autoAllocateDepthBuffer||St.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),B.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(V,F){const J=_.get(V);J.__webglFramebuffer=F,J.__useDefaultFramebuffer=F===void 0},this.setRenderTarget=function(V,F=0,J=0){Y=V,f=F,p=J;let B=!0;if(V){const Bt=_.get(V);Bt.__useDefaultFramebuffer!==void 0?(mt.bindFramebuffer(36160,null),B=!1):Bt.__webglFramebuffer===void 0?O.setupRenderTarget(V):Bt.__hasExternalTextures&&O.rebindTextures(V,_.get(V.texture).__webglTexture,_.get(V.depthTexture).__webglTexture)}let k=null,Rt=!1,Ft=!1;if(V){const Bt=V.texture;(Bt.isData3DTexture||Bt.isDataArrayTexture)&&(Ft=!0);const jt=_.get(V).__webglFramebuffer;V.isWebGLCubeRenderTarget?(k=jt[F],Rt=!0):ut.isWebGL2&&V.samples>0&&O.useMultisampledRTT(V)===!1?k=_.get(V).__webglMultisampledFramebuffer:k=jt,M.copy(V.viewport),N.copy(V.scissor),Q=V.scissorTest}else M.copy(C).multiplyScalar(G).floor(),N.copy(T).multiplyScalar(G).floor(),Q=A;if(mt.bindFramebuffer(36160,k)&&ut.drawBuffers&&B&&mt.drawBuffers(V,k),mt.viewport(M),mt.scissor(N),mt.setScissorTest(Q),Rt){const Bt=_.get(V.texture);L.framebufferTexture2D(36160,36064,34069+F,Bt.__webglTexture,J)}else if(Ft){const Bt=_.get(V.texture),jt=F||0;L.framebufferTextureLayer(36160,36064,Bt.__webglTexture,J||0,jt)}y=-1},this.readRenderTargetPixels=function(V,F,J,B,k,Rt,Ft){if(!(V&&V.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let Ct=_.get(V).__webglFramebuffer;if(V.isWebGLCubeRenderTarget&&Ft!==void 0&&(Ct=Ct[Ft]),Ct){mt.bindFramebuffer(36160,Ct);try{const Bt=V.texture,jt=Bt.format,zt=Bt.type;if(jt!==1023&&Yt.convert(jt)!==L.getParameter(35739)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const Et=zt===1016&&(St.has("EXT_color_buffer_half_float")||ut.isWebGL2&&St.has("EXT_color_buffer_float"));if(zt!==1009&&Yt.convert(zt)!==L.getParameter(35738)&&!(zt===1015&&(ut.isWebGL2||St.has("OES_texture_float")||St.has("WEBGL_color_buffer_float")))&&!Et){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}L.checkFramebufferStatus(36160)===36053?F>=0&&F<=V.width-B&&J>=0&&J<=V.height-k&&L.readPixels(F,J,B,k,Yt.convert(jt),Yt.convert(zt),Rt):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{const Bt=Y!==null?_.get(Y).__webglFramebuffer:null;mt.bindFramebuffer(36160,Bt)}}},this.copyFramebufferToTexture=function(V,F,J=0){if(F.isFramebufferTexture!==!0){console.error("THREE.WebGLRenderer: copyFramebufferToTexture() can only be used with FramebufferTexture.");return}const B=Math.pow(2,-J),k=Math.floor(F.image.width*B),Rt=Math.floor(F.image.height*B);O.setTexture2D(F,0),L.copyTexSubImage2D(3553,J,0,0,V.x,V.y,k,Rt),mt.unbindTexture()},this.copyTextureToTexture=function(V,F,J,B=0){const k=F.image.width,Rt=F.image.height,Ft=Yt.convert(J.format),Ct=Yt.convert(J.type);O.setTexture2D(J,0),L.pixelStorei(37440,J.flipY),L.pixelStorei(37441,J.premultiplyAlpha),L.pixelStorei(3317,J.unpackAlignment),F.isDataTexture?L.texSubImage2D(3553,B,V.x,V.y,k,Rt,Ft,Ct,F.image.data):F.isCompressedTexture?L.compressedTexSubImage2D(3553,B,V.x,V.y,F.mipmaps[0].width,F.mipmaps[0].height,Ft,F.mipmaps[0].data):L.texSubImage2D(3553,B,V.x,V.y,Ft,Ct,F.image),B===0&&J.generateMipmaps&&L.generateMipmap(3553),mt.unbindTexture()},this.copyTextureToTexture3D=function(V,F,J,B,k=0){if(g.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}const Rt=V.max.x-V.min.x+1,Ft=V.max.y-V.min.y+1,Ct=V.max.z-V.min.z+1,Bt=Yt.convert(B.format),jt=Yt.convert(B.type);let zt;if(B.isData3DTexture)O.setTexture3D(B,0),zt=32879;else if(B.isDataArrayTexture)O.setTexture2DArray(B,0),zt=35866;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}L.pixelStorei(37440,B.flipY),L.pixelStorei(37441,B.premultiplyAlpha),L.pixelStorei(3317,B.unpackAlignment);const Et=L.getParameter(3314),ie=L.getParameter(32878),Fn=L.getParameter(3316),li=L.getParameter(3315),ci=L.getParameter(32877),Le=J.isCompressedTexture?J.mipmaps[0]:J.image;L.pixelStorei(3314,Le.width),L.pixelStorei(32878,Le.height),L.pixelStorei(3316,V.min.x),L.pixelStorei(3315,V.min.y),L.pixelStorei(32877,V.min.z),J.isDataTexture||J.isData3DTexture?L.texSubImage3D(zt,k,F.x,F.y,F.z,Rt,Ft,Ct,Bt,jt,Le.data):J.isCompressedTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),L.compressedTexSubImage3D(zt,k,F.x,F.y,F.z,Rt,Ft,Ct,Bt,Le.data)):L.texSubImage3D(zt,k,F.x,F.y,F.z,Rt,Ft,Ct,Bt,jt,Le),L.pixelStorei(3314,Et),L.pixelStorei(32878,ie),L.pixelStorei(3316,Fn),L.pixelStorei(3315,li),L.pixelStorei(32877,ci),k===0&&B.generateMipmaps&&L.generateMipmap(zt),mt.unbindTexture()},this.initTexture=function(V){O.setTexture2D(V,0),mt.unbindTexture()},this.resetState=function(){f=0,p=0,Y=null,mt.reset(),Xt.reset()},typeof __THREE_DEVTOOLS__!="undefined"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}Kt.prototype.isWebGLRenderer=!0;class _u extends Kt{}_u.prototype.isWebGL1Renderer=!0;class Zr extends Ht{constructor(){super();this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,typeof __THREE_DEVTOOLS__!="undefined"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(t,e){return super.copy(t,e),t.background!==null&&(this.background=t.background.clone()),t.environment!==null&&(this.environment=t.environment.clone()),t.fog!==null&&(this.fog=t.fog.clone()),t.overrideMaterial!==null&&(this.overrideMaterial=t.overrideMaterial.clone()),this.autoUpdate=t.autoUpdate,this.matrixAutoUpdate=t.matrixAutoUpdate,this}toJSON(t){const e=super.toJSON(t);return this.fog!==null&&(e.object.fog=this.fog.toJSON()),e}}Zr.prototype.isScene=!0;class Gi{constructor(t,e){this.array=t,this.stride=e,this.count=t!==void 0?t.length/e:0,this.usage=35044,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=Te()}onUploadCallback(){}set needsUpdate(t){t===!0&&this.version++}setUsage(t){return this.usage=t,this}copy(t){return this.array=new t.array.constructor(t.array),this.count=t.count,this.stride=t.stride,this.usage=t.usage,this}copyAt(t,e,n){t*=this.stride,n*=e.stride;for(let i=0,r=this.stride;i<r;i++)this.array[t+i]=e.array[n+i];return this}set(t,e=0){return this.array.set(t,e),this}clone(t){t.arrayBuffers===void 0&&(t.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Te()),t.arrayBuffers[this.array.buffer._uuid]===void 0&&(t.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const e=new this.array.constructor(t.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(e,this.stride);return n.setUsage(this.usage),n}onUpload(t){return this.onUploadCallback=t,this}toJSON(t){return t.arrayBuffers===void 0&&(t.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Te()),t.arrayBuffers[this.array.buffer._uuid]===void 0&&(t.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}Gi.prototype.isInterleavedBuffer=!0;const re=new R;class Wi{constructor(t,e,n,i=!1){this.name="",this.data=t,this.itemSize=e,this.offset=n,this.normalized=i===!0}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(t){this.data.needsUpdate=t}applyMatrix4(t){for(let e=0,n=this.data.count;e<n;e++)re.x=this.getX(e),re.y=this.getY(e),re.z=this.getZ(e),re.applyMatrix4(t),this.setXYZ(e,re.x,re.y,re.z);return this}applyNormalMatrix(t){for(let e=0,n=this.count;e<n;e++)re.x=this.getX(e),re.y=this.getY(e),re.z=this.getZ(e),re.applyNormalMatrix(t),this.setXYZ(e,re.x,re.y,re.z);return this}transformDirection(t){for(let e=0,n=this.count;e<n;e++)re.x=this.getX(e),re.y=this.getY(e),re.z=this.getZ(e),re.transformDirection(t),this.setXYZ(e,re.x,re.y,re.z);return this}setX(t,e){return this.data.array[t*this.data.stride+this.offset]=e,this}setY(t,e){return this.data.array[t*this.data.stride+this.offset+1]=e,this}setZ(t,e){return this.data.array[t*this.data.stride+this.offset+2]=e,this}setW(t,e){return this.data.array[t*this.data.stride+this.offset+3]=e,this}getX(t){return this.data.array[t*this.data.stride+this.offset]}getY(t){return this.data.array[t*this.data.stride+this.offset+1]}getZ(t){return this.data.array[t*this.data.stride+this.offset+2]}getW(t){return this.data.array[t*this.data.stride+this.offset+3]}setXY(t,e,n){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this}setXYZ(t,e,n,i){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=i,this}setXYZW(t,e,n,i,r){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=i,this.data.array[t+3]=r,this}clone(t){if(t===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");const e=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)e.push(this.data.array[i+r])}return new _t(new this.array.constructor(e),this.itemSize,this.normalized)}else return t.interleavedBuffers===void 0&&(t.interleavedBuffers={}),t.interleavedBuffers[this.data.uuid]===void 0&&(t.interleavedBuffers[this.data.uuid]=this.data.clone(t)),new Wi(t.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(t){if(t===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");const e=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)e.push(this.data.array[i+r])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:e,normalized:this.normalized}}else return t.interleavedBuffers===void 0&&(t.interleavedBuffers={}),t.interleavedBuffers[this.data.uuid]===void 0&&(t.interleavedBuffers[this.data.uuid]=this.data.toJSON(t)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}Wi.prototype.isInterleavedBufferAttribute=!0;class Gr extends ce{constructor(t){super();this.type="SpriteMaterial",this.color=new D(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.rotation=t.rotation,this.sizeAttenuation=t.sizeAttenuation,this}}Gr.prototype.isSpriteMaterial=!0;let Kn;const yi=new R,qn=new R,$n=new R,ti=new q,xi=new q,io=new ft,cs=new R,Vi=new R,ds=new R,so=new q,Wr=new q,ro=new q;class Ju extends Ht{constructor(t){super();if(this.type="Sprite",Kn===void 0){Kn=new Ot;const e=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),n=new Gi(e,5);Kn.setIndex([0,1,2,0,2,3]),Kn.setAttribute("position",new Wi(n,3,0,!1)),Kn.setAttribute("uv",new Wi(n,2,3,!1))}this.geometry=Kn,this.material=t!==void 0?t:new Gr,this.center=new q(.5,.5)}raycast(t,e){t.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),qn.setFromMatrixScale(this.matrixWorld),io.copy(t.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(t.camera.matrixWorldInverse,this.matrixWorld),$n.setFromMatrixPosition(this.modelViewMatrix),t.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&qn.multiplyScalar(-$n.z);const n=this.material.rotation;let i,r;n!==0&&(r=Math.cos(n),i=Math.sin(n));const a=this.center;hs(cs.set(-.5,-.5,0),$n,a,qn,i,r),hs(Vi.set(.5,-.5,0),$n,a,qn,i,r),hs(ds.set(.5,.5,0),$n,a,qn,i,r),so.set(0,0),Wr.set(1,0),ro.set(1,1);let o=t.ray.intersectTriangle(cs,Vi,ds,!1,yi);if(o===null&&(hs(Vi.set(-.5,.5,0),$n,a,qn,i,r),Wr.set(0,1),o=t.ray.intersectTriangle(cs,ds,Vi,!1,yi),o===null))return;const l=t.ray.origin.distanceTo(yi);l<t.near||l>t.far||e.push({distance:l,point:yi.clone(),uv:oe.getUV(yi,cs,Vi,ds,so,Wr,ro,new q),face:null,object:this})}copy(t){return super.copy(t),t.center!==void 0&&this.center.copy(t.center),this.material=t.material,this}}Ju.prototype.isSprite=!0;function hs(s,t,e,n,i,r){ti.subVectors(s,e).addScalar(.5).multiply(n),i!==void 0?(xi.x=r*ti.x-i*ti.y,xi.y=i*ti.x+r*ti.y):xi.copy(ti),s.copy(t),s.x+=xi.x,s.y+=xi.y,s.applyMatrix4(io)}const ao=new R,oo=new Mt,lo=new Mt,Tu=new R,co=new ft;class ho extends Ye{constructor(t,e){super(t,e);this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new ft,this.bindMatrixInverse=new ft}copy(t){return super.copy(t),this.bindMode=t.bindMode,this.bindMatrix.copy(t.bindMatrix),this.bindMatrixInverse.copy(t.bindMatrixInverse),this.skeleton=t.skeleton,this}bind(t,e){this.skeleton=t,e===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),e=this.matrixWorld),this.bindMatrix.copy(e),this.bindMatrixInverse.copy(e).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const t=new Mt,e=this.geometry.attributes.skinWeight;for(let n=0,i=e.count;n<i;n++){t.x=e.getX(n),t.y=e.getY(n),t.z=e.getZ(n),t.w=e.getW(n);const r=1/t.manhattanLength();r!==1/0?t.multiplyScalar(r):t.set(1,0,0,0),e.setXYZW(n,t.x,t.y,t.z,t.w)}}updateMatrixWorld(t){super.updateMatrixWorld(t),this.bindMode==="attached"?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode==="detached"?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}boneTransform(t,e){const n=this.skeleton,i=this.geometry;oo.fromBufferAttribute(i.attributes.skinIndex,t),lo.fromBufferAttribute(i.attributes.skinWeight,t),ao.copy(e).applyMatrix4(this.bindMatrix),e.set(0,0,0);for(let r=0;r<4;r++){const a=lo.getComponent(r);if(a!==0){const o=oo.getComponent(r);co.multiplyMatrices(n.bones[o].matrixWorld,n.boneInverses[o]),e.addScaledVector(Tu.copy(ao).applyMatrix4(co),a)}}return e.applyMatrix4(this.bindMatrixInverse)}}ho.prototype.isSkinnedMesh=!0;class Du extends Ht{constructor(){super();this.type="Bone"}}Du.prototype.isBone=!0;class yr extends se{constructor(t=null,e=1,n=1,i,r,a,o,l,c=1003,d=1003,h,u){super(null,a,o,l,c,d,i,r,h,u);this.image={data:t,width:e,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}yr.prototype.isDataTexture=!0;class xr extends _t{constructor(t,e,n,i=1){typeof n=="number"&&(i=n,n=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument."));super(t,e,n);this.meshPerAttribute=i}copy(t){return super.copy(t),this.meshPerAttribute=t.meshPerAttribute,this}toJSON(){const t=super.toJSON();return t.meshPerAttribute=this.meshPerAttribute,t.isInstancedBufferAttribute=!0,t}}xr.prototype.isInstancedBufferAttribute=!0;const uo=new ft,mo=new ft,us=[],vi=new Ye;class zu extends Ye{constructor(t,e,n){super(t,e);this.instanceMatrix=new xr(new Float32Array(n*16),16),this.instanceColor=null,this.count=n,this.frustumCulled=!1}copy(t){return super.copy(t),this.instanceMatrix.copy(t.instanceMatrix),t.instanceColor!==null&&(this.instanceColor=t.instanceColor.clone()),this.count=t.count,this}getColorAt(t,e){e.fromArray(this.instanceColor.array,t*3)}getMatrixAt(t,e){e.fromArray(this.instanceMatrix.array,t*16)}raycast(t,e){const n=this.matrixWorld,i=this.count;if(vi.geometry=this.geometry,vi.material=this.material,vi.material!==void 0)for(let r=0;r<i;r++){this.getMatrixAt(r,uo),mo.multiplyMatrices(n,uo),vi.matrixWorld=mo,vi.raycast(t,us);for(let a=0,o=us.length;a<o;a++){const l=us[a];l.instanceId=r,l.object=this,e.push(l)}us.length=0}}setColorAt(t,e){this.instanceColor===null&&(this.instanceColor=new xr(new Float32Array(this.instanceMatrix.count*3),3)),e.toArray(this.instanceColor.array,t*3)}setMatrixAt(t,e){e.toArray(this.instanceMatrix.array,t*16)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}zu.prototype.isInstancedMesh=!0;class Mn extends ce{constructor(t){super();this.type="LineBasicMaterial",this.color=new D(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.linewidth=t.linewidth,this.linecap=t.linecap,this.linejoin=t.linejoin,this}}Mn.prototype.isLineBasicMaterial=!0;const po=new R,fo=new R,bo=new ft,Vr=new _n,ms=new Re;class vr extends Ht{constructor(t=new Ot,e=new Mn){super();this.type="Line",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t){return super.copy(t),this.material=t.material,this.geometry=t.geometry,this}computeLineDistances(){const t=this.geometry;if(t.isBufferGeometry)if(t.index===null){const e=t.attributes.position,n=[0];for(let i=1,r=e.count;i<r;i++)po.fromBufferAttribute(e,i-1),fo.fromBufferAttribute(e,i),n[i]=n[i-1],n[i]+=po.distanceTo(fo);t.setAttribute("lineDistance",new he(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else t.isGeometry&&console.error("THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}raycast(t,e){const n=this.geometry,i=this.matrixWorld,r=t.params.Line.threshold,a=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),ms.copy(n.boundingSphere),ms.applyMatrix4(i),ms.radius+=r,t.ray.intersectsSphere(ms)===!1)return;bo.copy(i).invert(),Vr.copy(t.ray).applyMatrix4(bo);const o=r/((this.scale.x+this.scale.y+this.scale.z)/3),l=o*o,c=new R,d=new R,h=new R,u=new R,m=this.isLineSegments?2:1;if(n.isBufferGeometry){const b=n.index,Z=n.attributes.position;if(b!==null){const f=Math.max(0,a.start),p=Math.min(b.count,a.start+a.count);for(let Y=f,y=p-1;Y<y;Y+=m){const x=b.getX(Y),M=b.getX(Y+1);if(c.fromBufferAttribute(Z,x),d.fromBufferAttribute(Z,M),Vr.distanceSqToSegment(c,d,u,h)>l)continue;u.applyMatrix4(this.matrixWorld);const Q=t.ray.origin.distanceTo(u);Q<t.near||Q>t.far||e.push({distance:Q,point:h.clone().applyMatrix4(this.matrixWorld),index:Y,face:null,faceIndex:null,object:this})}}else{const f=Math.max(0,a.start),p=Math.min(Z.count,a.start+a.count);for(let Y=f,y=p-1;Y<y;Y+=m){if(c.fromBufferAttribute(Z,Y),d.fromBufferAttribute(Z,Y+1),Vr.distanceSqToSegment(c,d,u,h)>l)continue;u.applyMatrix4(this.matrixWorld);const M=t.ray.origin.distanceTo(u);M<t.near||M>t.far||e.push({distance:M,point:h.clone().applyMatrix4(this.matrixWorld),index:Y,face:null,faceIndex:null,object:this})}}}else n.isGeometry&&console.error("THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}updateMorphTargets(){const t=this.geometry;if(t.isBufferGeometry){const e=t.morphAttributes,n=Object.keys(e);if(n.length>0){const i=e[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,a=i.length;r<a;r++){const o=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=r}}}}else{const e=t.morphTargets;e!==void 0&&e.length>0&&console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}vr.prototype.isLine=!0;const go=new R,Zo=new R;class ps extends vr{constructor(t,e){super(t,e);this.type="LineSegments"}computeLineDistances(){const t=this.geometry;if(t.isBufferGeometry)if(t.index===null){const e=t.attributes.position,n=[];for(let i=0,r=e.count;i<r;i+=2)go.fromBufferAttribute(e,i),Zo.fromBufferAttribute(e,i+1),n[i]=i===0?0:n[i-1],n[i+1]=n[i]+go.distanceTo(Zo);t.setAttribute("lineDistance",new he(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else t.isGeometry&&console.error("THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}}ps.prototype.isLineSegments=!0;class Eu extends vr{constructor(t,e){super(t,e);this.type="LineLoop"}}Eu.prototype.isLineLoop=!0;class Rr extends ce{constructor(t){super();this.type="PointsMaterial",this.color=new D(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.size=t.size,this.sizeAttenuation=t.sizeAttenuation,this}}Rr.prototype.isPointsMaterial=!0;const Go=new ft,Yr=new _n,fs=new Re,bs=new R;class Xr extends Ht{constructor(t=new Ot,e=new Rr){super();this.type="Points",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t){return super.copy(t),this.material=t.material,this.geometry=t.geometry,this}raycast(t,e){const n=this.geometry,i=this.matrixWorld,r=t.params.Points.threshold,a=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),fs.copy(n.boundingSphere),fs.applyMatrix4(i),fs.radius+=r,t.ray.intersectsSphere(fs)===!1)return;Go.copy(i).invert(),Yr.copy(t.ray).applyMatrix4(Go);const o=r/((this.scale.x+this.scale.y+this.scale.z)/3),l=o*o;if(n.isBufferGeometry){const c=n.index,h=n.attributes.position;if(c!==null){const u=Math.max(0,a.start),m=Math.min(c.count,a.start+a.count);for(let b=u,g=m;b<g;b++){const Z=c.getX(b);bs.fromBufferAttribute(h,Z),Wo(bs,Z,l,i,t,e,this)}}else{const u=Math.max(0,a.start),m=Math.min(h.count,a.start+a.count);for(let b=u,g=m;b<g;b++)bs.fromBufferAttribute(h,b),Wo(bs,b,l,i,t,e,this)}}else console.error("THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}updateMorphTargets(){const t=this.geometry;if(t.isBufferGeometry){const e=t.morphAttributes,n=Object.keys(e);if(n.length>0){const i=e[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,a=i.length;r<a;r++){const o=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=r}}}}else{const e=t.morphTargets;e!==void 0&&e.length>0&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}Xr.prototype.isPoints=!0;function Wo(s,t,e,n,i,r,a){const o=Yr.distanceSqToPoint(s);if(o<e){const l=new R;Yr.closestPointToPoint(s,l),l.applyMatrix4(n);const c=i.ray.origin.distanceTo(l);if(c<i.near||c>i.far)return;r.push({distance:c,distanceToRay:Math.sqrt(o),point:l,index:t,face:null,object:a})}}class Hu extends se{constructor(t,e,n,i,r,a,o,l,c){super(t,e,n,i,r,a,o,l,c);this.minFilter=a!==void 0?a:1006,this.magFilter=r!==void 0?r:1006,this.generateMipmaps=!1;const d=this;function h(){d.needsUpdate=!0,t.requestVideoFrameCallback(h)}"requestVideoFrameCallback"in t&&t.requestVideoFrameCallback(h)}clone(){return new this.constructor(this.image).copy(this)}update(){const t=this.image;"requestVideoFrameCallback"in t===!1&&t.readyState>=t.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}Hu.prototype.isVideoTexture=!0;class Uu extends se{constructor(t,e,n){super({width:t,height:e});this.format=n,this.magFilter=1003,this.minFilter=1003,this.generateMipmaps=!1,this.needsUpdate=!0}}Uu.prototype.isFramebufferTexture=!0;class ku extends se{constructor(t,e,n,i,r,a,o,l,c,d,h,u){super(null,a,o,l,c,d,i,r,h,u);this.image={width:e,height:n},this.mipmaps=t,this.flipY=!1,this.generateMipmaps=!1}}ku.prototype.isCompressedTexture=!0;class yo extends se{constructor(t,e,n,i,r,a,o,l,c){super(t,e,n,i,r,a,o,l,c);this.needsUpdate=!0}}yo.prototype.isCanvasTexture=!0,new R,new R,new R,new oe;class Ie{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(t,e){const n=this.getUtoTmapping(t);return this.getPoint(n,e)}getPoints(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return e}getSpacedPoints(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPointAt(n/t));return e}getLength(){const t=this.getLengths();return t[t.length-1]}getLengths(t=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const e=[];let n,i=this.getPoint(0),r=0;e.push(0);for(let a=1;a<=t;a++)n=this.getPoint(a/t),r+=n.distanceTo(i),e.push(r),i=n;return this.cacheArcLengths=e,e}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(t,e){const n=this.getLengths();let i=0;const r=n.length;let a;e?a=e:a=t*n[r-1];let o=0,l=r-1,c;for(;o<=l;)if(i=Math.floor(o+(l-o)/2),c=n[i]-a,c<0)o=i+1;else if(c>0)l=i-1;else{l=i;break}if(i=l,n[i]===a)return i/(r-1);const d=n[i],u=n[i+1]-d,m=(a-d)/u;return(i+m)/(r-1)}getTangent(t,e){let i=t-1e-4,r=t+1e-4;i<0&&(i=0),r>1&&(r=1);const a=this.getPoint(i),o=this.getPoint(r),l=e||(a.isVector2?new q:new R);return l.copy(o).sub(a).normalize(),l}getTangentAt(t,e){const n=this.getUtoTmapping(t);return this.getTangent(n,e)}computeFrenetFrames(t,e){const n=new R,i=[],r=[],a=[],o=new R,l=new ft;for(let m=0;m<=t;m++){const b=m/t;i[m]=this.getTangentAt(b,new R)}r[0]=new R,a[0]=new R;let c=Number.MAX_VALUE;const d=Math.abs(i[0].x),h=Math.abs(i[0].y),u=Math.abs(i[0].z);d<=c&&(c=d,n.set(1,0,0)),h<=c&&(c=h,n.set(0,1,0)),u<=c&&n.set(0,0,1),o.crossVectors(i[0],n).normalize(),r[0].crossVectors(i[0],o),a[0].crossVectors(i[0],r[0]);for(let m=1;m<=t;m++){if(r[m]=r[m-1].clone(),a[m]=a[m-1].clone(),o.crossVectors(i[m-1],i[m]),o.length()>Number.EPSILON){o.normalize();const b=Math.acos(we(i[m-1].dot(i[m]),-1,1));r[m].applyMatrix4(l.makeRotationAxis(o,b))}a[m].crossVectors(i[m],r[m])}if(e===!0){let m=Math.acos(we(r[0].dot(r[t]),-1,1));m/=t,i[0].dot(o.crossVectors(r[0],r[t]))>0&&(m=-m);for(let b=1;b<=t;b++)r[b].applyMatrix4(l.makeRotationAxis(i[b],m*b)),a[b].crossVectors(i[b],r[b])}return{tangents:i,normals:r,binormals:a}}clone(){return new this.constructor().copy(this)}copy(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}toJSON(){const t={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return t.arcLengthDivisions=this.arcLengthDivisions,t.type=this.type,t}fromJSON(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}}class gs extends Ie{constructor(t=0,e=0,n=1,i=1,r=0,a=Math.PI*2,o=!1,l=0){super();this.type="EllipseCurve",this.aX=t,this.aY=e,this.xRadius=n,this.yRadius=i,this.aStartAngle=r,this.aEndAngle=a,this.aClockwise=o,this.aRotation=l}getPoint(t,e){const n=e||new q,i=Math.PI*2;let r=this.aEndAngle-this.aStartAngle;const a=Math.abs(r)<Number.EPSILON;for(;r<0;)r+=i;for(;r>i;)r-=i;r<Number.EPSILON&&(a?r=0:r=i),this.aClockwise===!0&&!a&&(r===i?r=-i:r=r-i);const o=this.aStartAngle+t*r;let l=this.aX+this.xRadius*Math.cos(o),c=this.aY+this.yRadius*Math.sin(o);if(this.aRotation!==0){const d=Math.cos(this.aRotation),h=Math.sin(this.aRotation),u=l-this.aX,m=c-this.aY;l=u*d-m*h+this.aX,c=u*h+m*d+this.aY}return n.set(l,c)}copy(t){return super.copy(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}toJSON(){const t=super.toJSON();return t.aX=this.aX,t.aY=this.aY,t.xRadius=this.xRadius,t.yRadius=this.yRadius,t.aStartAngle=this.aStartAngle,t.aEndAngle=this.aEndAngle,t.aClockwise=this.aClockwise,t.aRotation=this.aRotation,t}fromJSON(t){return super.fromJSON(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}}gs.prototype.isEllipseCurve=!0;class xo extends gs{constructor(t,e,n,i,r,a){super(t,e,n,n,i,r,a);this.type="ArcCurve"}}xo.prototype.isArcCurve=!0;function wr(){let s=0,t=0,e=0,n=0;function i(r,a,o,l){s=r,t=o,e=-3*r+3*a-2*o-l,n=2*r-2*a+o+l}return{initCatmullRom:function(r,a,o,l,c){i(a,o,c*(o-r),c*(l-a))},initNonuniformCatmullRom:function(r,a,o,l,c,d,h){let u=(a-r)/c-(o-r)/(c+d)+(o-a)/d,m=(o-a)/d-(l-a)/(d+h)+(l-o)/h;u*=d,m*=d,i(a,o,u,m)},calc:function(r){const a=r*r,o=a*r;return s+t*r+e*a+n*o}}}const Zs=new R,Mr=new wr,Nr=new wr,Fr=new wr;class Vo extends Ie{constructor(t=[],e=!1,n="centripetal",i=.5){super();this.type="CatmullRomCurve3",this.points=t,this.closed=e,this.curveType=n,this.tension=i}getPoint(t,e=new R){const n=e,i=this.points,r=i.length,a=(r-(this.closed?0:1))*t;let o=Math.floor(a),l=a-o;this.closed?o+=o>0?0:(Math.floor(Math.abs(o)/r)+1)*r:l===0&&o===r-1&&(o=r-2,l=1);let c,d;this.closed||o>0?c=i[(o-1)%r]:(Zs.subVectors(i[0],i[1]).add(i[0]),c=Zs);const h=i[o%r],u=i[(o+1)%r];if(this.closed||o+2<r?d=i[(o+2)%r]:(Zs.subVectors(i[r-1],i[r-2]).add(i[r-1]),d=Zs),this.curveType==="centripetal"||this.curveType==="chordal"){const m=this.curveType==="chordal"?.5:.25;let b=Math.pow(c.distanceToSquared(h),m),g=Math.pow(h.distanceToSquared(u),m),Z=Math.pow(u.distanceToSquared(d),m);g<1e-4&&(g=1),b<1e-4&&(b=g),Z<1e-4&&(Z=g),Mr.initNonuniformCatmullRom(c.x,h.x,u.x,d.x,b,g,Z),Nr.initNonuniformCatmullRom(c.y,h.y,u.y,d.y,b,g,Z),Fr.initNonuniformCatmullRom(c.z,h.z,u.z,d.z,b,g,Z)}else this.curveType==="catmullrom"&&(Mr.initCatmullRom(c.x,h.x,u.x,d.x,this.tension),Nr.initCatmullRom(c.y,h.y,u.y,d.y,this.tension),Fr.initCatmullRom(c.z,h.z,u.z,d.z,this.tension));return n.set(Mr.calc(l),Nr.calc(l),Fr.calc(l)),n}copy(t){super.copy(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(i.clone())}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,n=this.points.length;e<n;e++){const i=this.points[e];t.points.push(i.toArray())}return t.closed=this.closed,t.curveType=this.curveType,t.tension=this.tension,t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(new R().fromArray(i))}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}}Vo.prototype.isCatmullRomCurve3=!0;function vo(s,t,e,n,i){const r=(n-t)*.5,a=(i-e)*.5,o=s*s,l=s*o;return(2*e-2*n+r+a)*l+(-3*e+3*n-2*r-a)*o+r*s+e}function Pu(s,t){const e=1-s;return e*e*t}function Lu(s,t){return 2*(1-s)*s*t}function Qu(s,t){return s*s*t}function Ri(s,t,e,n){return Pu(s,t)+Lu(s,e)+Qu(s,n)}function ju(s,t){const e=1-s;return e*e*e*t}function Ou(s,t){const e=1-s;return 3*e*e*s*t}function Ku(s,t){return 3*(1-s)*s*s*t}function qu(s,t){return s*s*s*t}function Yi(s,t,e,n,i){return ju(s,t)+Ou(s,e)+Ku(s,n)+qu(s,i)}class Sr extends Ie{constructor(t=new q,e=new q,n=new q,i=new q){super();this.type="CubicBezierCurve",this.v0=t,this.v1=e,this.v2=n,this.v3=i}getPoint(t,e=new q){const n=e,i=this.v0,r=this.v1,a=this.v2,o=this.v3;return n.set(Yi(t,i.x,r.x,a.x,o.x),Yi(t,i.y,r.y,a.y,o.y)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}Sr.prototype.isCubicBezierCurve=!0;class Ro extends Ie{constructor(t=new R,e=new R,n=new R,i=new R){super();this.type="CubicBezierCurve3",this.v0=t,this.v1=e,this.v2=n,this.v3=i}getPoint(t,e=new R){const n=e,i=this.v0,r=this.v1,a=this.v2,o=this.v3;return n.set(Yi(t,i.x,r.x,a.x,o.x),Yi(t,i.y,r.y,a.y,o.y),Yi(t,i.z,r.z,a.z,o.z)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}Ro.prototype.isCubicBezierCurve3=!0;class Gs extends Ie{constructor(t=new q,e=new q){super();this.type="LineCurve",this.v1=t,this.v2=e}getPoint(t,e=new q){const n=e;return t===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(t,e){return this.getPoint(t,e)}getTangent(t,e){const n=e||new q;return n.copy(this.v2).sub(this.v1).normalize(),n}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}Gs.prototype.isLineCurve=!0;class $u extends Ie{constructor(t=new R,e=new R){super();this.type="LineCurve3",this.isLineCurve3=!0,this.v1=t,this.v2=e}getPoint(t,e=new R){const n=e;return t===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(t,e){return this.getPoint(t,e)}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class Ir extends Ie{constructor(t=new q,e=new q,n=new q){super();this.type="QuadraticBezierCurve",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new q){const n=e,i=this.v0,r=this.v1,a=this.v2;return n.set(Ri(t,i.x,r.x,a.x),Ri(t,i.y,r.y,a.y)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}Ir.prototype.isQuadraticBezierCurve=!0;class Yo extends Ie{constructor(t=new R,e=new R,n=new R){super();this.type="QuadraticBezierCurve3",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new R){const n=e,i=this.v0,r=this.v1,a=this.v2;return n.set(Ri(t,i.x,r.x,a.x),Ri(t,i.y,r.y,a.y),Ri(t,i.z,r.z,a.z)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}Yo.prototype.isQuadraticBezierCurve3=!0;class Br extends Ie{constructor(t=[]){super();this.type="SplineCurve",this.points=t}getPoint(t,e=new q){const n=e,i=this.points,r=(i.length-1)*t,a=Math.floor(r),o=r-a,l=i[a===0?a:a-1],c=i[a],d=i[a>i.length-2?i.length-1:a+1],h=i[a>i.length-3?i.length-1:a+2];return n.set(vo(o,l.x,c.x,d.x,h.x),vo(o,l.y,c.y,d.y,h.y)),n}copy(t){super.copy(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(i.clone())}return this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,n=this.points.length;e<n;e++){const i=this.points[e];t.points.push(i.toArray())}return t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(new q().fromArray(i))}return this}}Br.prototype.isSplineCurve=!0;var Xo=Object.freeze({__proto__:null,ArcCurve:xo,CatmullRomCurve3:Vo,CubicBezierCurve:Sr,CubicBezierCurve3:Ro,EllipseCurve:gs,LineCurve:Gs,LineCurve3:$u,QuadraticBezierCurve:Ir,QuadraticBezierCurve3:Yo,SplineCurve:Br});class tm extends Ie{constructor(){super();this.type="CurvePath",this.curves=[],this.autoClose=!1}add(t){this.curves.push(t)}closePath(){const t=this.curves[0].getPoint(0),e=this.curves[this.curves.length-1].getPoint(1);t.equals(e)||this.curves.push(new Gs(e,t))}getPoint(t,e){const n=t*this.getLength(),i=this.getCurveLengths();let r=0;for(;r<i.length;){if(i[r]>=n){const a=i[r]-n,o=this.curves[r],l=o.getLength(),c=l===0?0:1-a/l;return o.getPointAt(c,e)}r++}return null}getLength(){const t=this.getCurveLengths();return t[t.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const t=[];let e=0;for(let n=0,i=this.curves.length;n<i;n++)e+=this.curves[n].getLength(),t.push(e);return this.cacheLengths=t,t}getSpacedPoints(t=40){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return this.autoClose&&e.push(e[0]),e}getPoints(t=12){const e=[];let n;for(let i=0,r=this.curves;i<r.length;i++){const a=r[i],o=a.isEllipseCurve?t*2:a.isLineCurve||a.isLineCurve3?1:a.isSplineCurve?t*a.points.length:t,l=a.getPoints(o);for(let c=0;c<l.length;c++){const d=l[c];n&&n.equals(d)||(e.push(d),n=d)}}return this.autoClose&&e.length>1&&!e[e.length-1].equals(e[0])&&e.push(e[0]),e}copy(t){super.copy(t),this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const i=t.curves[e];this.curves.push(i.clone())}return this.autoClose=t.autoClose,this}toJSON(){const t=super.toJSON();t.autoClose=this.autoClose,t.curves=[];for(let e=0,n=this.curves.length;e<n;e++){const i=this.curves[e];t.curves.push(i.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.autoClose=t.autoClose,this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const i=t.curves[e];this.curves.push(new Xo[i.type]().fromJSON(i))}return this}}class Cr extends tm{constructor(t){super();this.type="Path",this.currentPoint=new q,t&&this.setFromPoints(t)}setFromPoints(t){this.moveTo(t[0].x,t[0].y);for(let e=1,n=t.length;e<n;e++)this.lineTo(t[e].x,t[e].y);return this}moveTo(t,e){return this.currentPoint.set(t,e),this}lineTo(t,e){const n=new Gs(this.currentPoint.clone(),new q(t,e));return this.curves.push(n),this.currentPoint.set(t,e),this}quadraticCurveTo(t,e,n,i){const r=new Ir(this.currentPoint.clone(),new q(t,e),new q(n,i));return this.curves.push(r),this.currentPoint.set(n,i),this}bezierCurveTo(t,e,n,i,r,a){const o=new Sr(this.currentPoint.clone(),new q(t,e),new q(n,i),new q(r,a));return this.curves.push(o),this.currentPoint.set(r,a),this}splineThru(t){const e=[this.currentPoint.clone()].concat(t),n=new Br(e);return this.curves.push(n),this.currentPoint.copy(t[t.length-1]),this}arc(t,e,n,i,r,a){const o=this.currentPoint.x,l=this.currentPoint.y;return this.absarc(t+o,e+l,n,i,r,a),this}absarc(t,e,n,i,r,a){return this.absellipse(t,e,n,n,i,r,a),this}ellipse(t,e,n,i,r,a,o,l){const c=this.currentPoint.x,d=this.currentPoint.y;return this.absellipse(t+c,e+d,n,i,r,a,o,l),this}absellipse(t,e,n,i,r,a,o,l){const c=new gs(t,e,n,i,r,a,o,l);if(this.curves.length>0){const h=c.getPoint(0);h.equals(this.currentPoint)||this.lineTo(h.x,h.y)}this.curves.push(c);const d=c.getPoint(1);return this.currentPoint.copy(d),this}copy(t){return super.copy(t),this.currentPoint.copy(t.currentPoint),this}toJSON(){const t=super.toJSON();return t.currentPoint=this.currentPoint.toArray(),t}fromJSON(t){return super.fromJSON(t),this.currentPoint.fromArray(t.currentPoint),this}}class Xi extends Cr{constructor(t){super(t);this.uuid=Te(),this.type="Shape",this.holes=[]}getPointsHoles(t){const e=[];for(let n=0,i=this.holes.length;n<i;n++)e[n]=this.holes[n].getPoints(t);return e}extractPoints(t){return{shape:this.getPoints(t),holes:this.getPointsHoles(t)}}copy(t){super.copy(t),this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const i=t.holes[e];this.holes.push(i.clone())}return this}toJSON(){const t=super.toJSON();t.uuid=this.uuid,t.holes=[];for(let e=0,n=this.holes.length;e<n;e++){const i=this.holes[e];t.holes.push(i.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.uuid=t.uuid,this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const i=t.holes[e];this.holes.push(new Cr().fromJSON(i))}return this}}const em={triangulate:function(s,t,e=2){const n=t&&t.length,i=n?t[0]*e:s.length;let r=wo(s,0,i,e,!0);const a=[];if(!r||r.next===r.prev)return a;let o,l,c,d,h,u,m;if(n&&(r=am(s,t,r,e)),s.length>80*e){o=c=s[0],l=d=s[1];for(let b=e;b<i;b+=e)h=s[b],u=s[b+1],h<o&&(o=h),u<l&&(l=u),h>c&&(c=h),u>d&&(d=u);m=Math.max(c-o,d-l),m=m!==0?1/m:0}return wi(r,a,e,o,l,m),a}};function wo(s,t,e,n,i){let r,a;if(i===gm(s,t,e,n)>0)for(r=t;r<e;r+=n)a=Fo(r,s[r],s[r+1],a);else for(r=e-n;r>=t;r-=n)a=Fo(r,s[r],s[r+1],a);return a&&Ws(a,a.next)&&(Ni(a),a=a.next),a}function mn(s,t){if(!s)return s;t||(t=s);let e=s,n;do if(n=!1,!e.steiner&&(Ws(e,e.next)||ne(e.prev,e,e.next)===0)){if(Ni(e),e=t=e.prev,e===e.next)break;n=!0}else e=e.next;while(n||e!==t);return t}function wi(s,t,e,n,i,r,a){if(!s)return;!a&&r&&hm(s,n,i,r);let o=s,l,c;for(;s.prev!==s.next;){if(l=s.prev,c=s.next,r?im(s,n,i,r):nm(s)){t.push(l.i/e),t.push(s.i/e),t.push(c.i/e),Ni(s),s=c.next,o=c.next;continue}if(s=c,s===o){a?a===1?(s=sm(mn(s),t,e),wi(s,t,e,n,i,r,2)):a===2&&rm(s,t,e,n,i,r):wi(mn(s),t,e,n,i,r,1);break}}}function nm(s){const t=s.prev,e=s,n=s.next;if(ne(t,e,n)>=0)return!1;let i=s.next.next;for(;i!==s.prev;){if(ei(t.x,t.y,e.x,e.y,n.x,n.y,i.x,i.y)&&ne(i.prev,i,i.next)>=0)return!1;i=i.next}return!0}function im(s,t,e,n){const i=s.prev,r=s,a=s.next;if(ne(i,r,a)>=0)return!1;const o=i.x<r.x?i.x<a.x?i.x:a.x:r.x<a.x?r.x:a.x,l=i.y<r.y?i.y<a.y?i.y:a.y:r.y<a.y?r.y:a.y,c=i.x>r.x?i.x>a.x?i.x:a.x:r.x>a.x?r.x:a.x,d=i.y>r.y?i.y>a.y?i.y:a.y:r.y>a.y?r.y:a.y,h=Ar(o,l,t,e,n),u=Ar(c,d,t,e,n);let m=s.prevZ,b=s.nextZ;for(;m&&m.z>=h&&b&&b.z<=u;){if(m!==s.prev&&m!==s.next&&ei(i.x,i.y,r.x,r.y,a.x,a.y,m.x,m.y)&&ne(m.prev,m,m.next)>=0||(m=m.prevZ,b!==s.prev&&b!==s.next&&ei(i.x,i.y,r.x,r.y,a.x,a.y,b.x,b.y)&&ne(b.prev,b,b.next)>=0))return!1;b=b.nextZ}for(;m&&m.z>=h;){if(m!==s.prev&&m!==s.next&&ei(i.x,i.y,r.x,r.y,a.x,a.y,m.x,m.y)&&ne(m.prev,m,m.next)>=0)return!1;m=m.prevZ}for(;b&&b.z<=u;){if(b!==s.prev&&b!==s.next&&ei(i.x,i.y,r.x,r.y,a.x,a.y,b.x,b.y)&&ne(b.prev,b,b.next)>=0)return!1;b=b.nextZ}return!0}function sm(s,t,e){let n=s;do{const i=n.prev,r=n.next.next;!Ws(i,r)&&Mo(i,n,n.next,r)&&Mi(i,r)&&Mi(r,i)&&(t.push(i.i/e),t.push(n.i/e),t.push(r.i/e),Ni(n),Ni(n.next),n=s=r),n=n.next}while(n!==s);return mn(n)}function rm(s,t,e,n,i,r){let a=s;do{let o=a.next.next;for(;o!==a.prev;){if(a.i!==o.i&&pm(a,o)){let l=No(a,o);a=mn(a,a.next),l=mn(l,l.next),wi(a,t,e,n,i,r),wi(l,t,e,n,i,r);return}o=o.next}a=a.next}while(a!==s)}function am(s,t,e,n){const i=[];let r,a,o,l,c;for(r=0,a=t.length;r<a;r++)o=t[r]*n,l=r<a-1?t[r+1]*n:s.length,c=wo(s,o,l,n,!1),c===c.next&&(c.steiner=!0),i.push(mm(c));for(i.sort(om),r=0;r<i.length;r++)lm(i[r],e),e=mn(e,e.next);return e}function om(s,t){return s.x-t.x}function lm(s,t){if(t=cm(s,t),t){const e=No(t,s);mn(t,t.next),mn(e,e.next)}}function cm(s,t){let e=t;const n=s.x,i=s.y;let r=-1/0,a;do{if(i<=e.y&&i>=e.next.y&&e.next.y!==e.y){const u=e.x+(i-e.y)*(e.next.x-e.x)/(e.next.y-e.y);if(u<=n&&u>r){if(r=u,u===n){if(i===e.y)return e;if(i===e.next.y)return e.next}a=e.x<e.next.x?e:e.next}}e=e.next}while(e!==t);if(!a)return null;if(n===r)return a;const o=a,l=a.x,c=a.y;let d=1/0,h;e=a;do n>=e.x&&e.x>=l&&n!==e.x&&ei(i<c?n:r,i,l,c,i<c?r:n,i,e.x,e.y)&&(h=Math.abs(i-e.y)/(n-e.x),Mi(e,s)&&(h<d||h===d&&(e.x>a.x||e.x===a.x&&dm(a,e)))&&(a=e,d=h)),e=e.next;while(e!==o);return a}function dm(s,t){return ne(s.prev,s,t.prev)<0&&ne(t.next,s,s.next)<0}function hm(s,t,e,n){let i=s;do i.z===null&&(i.z=Ar(i.x,i.y,t,e,n)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next;while(i!==s);i.prevZ.nextZ=null,i.prevZ=null,um(i)}function um(s){let t,e,n,i,r,a,o,l,c=1;do{for(e=s,s=null,r=null,a=0;e;){for(a++,n=e,o=0,t=0;t<c&&(o++,n=n.nextZ,!!n);t++);for(l=c;o>0||l>0&&n;)o!==0&&(l===0||!n||e.z<=n.z)?(i=e,e=e.nextZ,o--):(i=n,n=n.nextZ,l--),r?r.nextZ=i:s=i,i.prevZ=r,r=i;e=n}r.nextZ=null,c*=2}while(a>1);return s}function Ar(s,t,e,n,i){return s=32767*(s-e)*i,t=32767*(t-n)*i,s=(s|s<<8)&16711935,s=(s|s<<4)&252645135,s=(s|s<<2)&858993459,s=(s|s<<1)&1431655765,t=(t|t<<8)&16711935,t=(t|t<<4)&252645135,t=(t|t<<2)&858993459,t=(t|t<<1)&1431655765,s|t<<1}function mm(s){let t=s,e=s;do(t.x<e.x||t.x===e.x&&t.y<e.y)&&(e=t),t=t.next;while(t!==s);return e}function ei(s,t,e,n,i,r,a,o){return(i-a)*(t-o)-(s-a)*(r-o)>=0&&(s-a)*(n-o)-(e-a)*(t-o)>=0&&(e-a)*(r-o)-(i-a)*(n-o)>=0}function pm(s,t){return s.next.i!==t.i&&s.prev.i!==t.i&&!fm(s,t)&&(Mi(s,t)&&Mi(t,s)&&bm(s,t)&&(ne(s.prev,s,t.prev)||ne(s,t.prev,t))||Ws(s,t)&&ne(s.prev,s,s.next)>0&&ne(t.prev,t,t.next)>0)}function ne(s,t,e){return(t.y-s.y)*(e.x-t.x)-(t.x-s.x)*(e.y-t.y)}function Ws(s,t){return s.x===t.x&&s.y===t.y}function Mo(s,t,e,n){const i=xs(ne(s,t,e)),r=xs(ne(s,t,n)),a=xs(ne(e,n,s)),o=xs(ne(e,n,t));return!!(i!==r&&a!==o||i===0&&ys(s,e,t)||r===0&&ys(s,n,t)||a===0&&ys(e,s,n)||o===0&&ys(e,t,n))}function ys(s,t,e){return t.x<=Math.max(s.x,e.x)&&t.x>=Math.min(s.x,e.x)&&t.y<=Math.max(s.y,e.y)&&t.y>=Math.min(s.y,e.y)}function xs(s){return s>0?1:s<0?-1:0}function fm(s,t){let e=s;do{if(e.i!==s.i&&e.next.i!==s.i&&e.i!==t.i&&e.next.i!==t.i&&Mo(e,e.next,s,t))return!0;e=e.next}while(e!==s);return!1}function Mi(s,t){return ne(s.prev,s,s.next)<0?ne(s,t,s.next)>=0&&ne(s,s.prev,t)>=0:ne(s,t,s.prev)<0||ne(s,s.next,t)<0}function bm(s,t){let e=s,n=!1;const i=(s.x+t.x)/2,r=(s.y+t.y)/2;do e.y>r!=e.next.y>r&&e.next.y!==e.y&&i<(e.next.x-e.x)*(r-e.y)/(e.next.y-e.y)+e.x&&(n=!n),e=e.next;while(e!==s);return n}function No(s,t){const e=new _r(s.i,s.x,s.y),n=new _r(t.i,t.x,t.y),i=s.next,r=t.prev;return s.next=t,t.prev=s,e.next=i,i.prev=e,n.next=e,e.prev=n,r.next=n,n.prev=r,n}function Fo(s,t,e,n){const i=new _r(s,t,e);return n?(i.next=n.next,i.prev=n,n.next.prev=i,n.next=i):(i.prev=i,i.next=i),i}function Ni(s){s.next.prev=s.prev,s.prev.next=s.next,s.prevZ&&(s.prevZ.nextZ=s.nextZ),s.nextZ&&(s.nextZ.prevZ=s.prevZ)}function _r(s,t,e){this.i=s,this.x=t,this.y=e,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}function gm(s,t,e,n){let i=0;for(let r=t,a=e-n;r<e;r+=n)i+=(s[a]-s[r])*(s[r+1]+s[a+1]),a=r;return i}class pn{static area(t){const e=t.length;let n=0;for(let i=e-1,r=0;r<e;i=r++)n+=t[i].x*t[r].y-t[r].x*t[i].y;return n*.5}static isClockWise(t){return pn.area(t)<0}static triangulateShape(t,e){const n=[],i=[],r=[];So(t),Io(n,t);let a=t.length;e.forEach(So);for(let l=0;l<e.length;l++)i.push(a),a+=e[l].length,Io(n,e[l]);const o=em.triangulate(n,i);for(let l=0;l<o.length;l+=3)r.push(o.slice(l,l+3));return r}}function So(s){const t=s.length;t>2&&s[t-1].equals(s[0])&&s.pop()}function Io(s,t){for(let e=0;e<t.length;e++)s.push(t[e].x),s.push(t[e].y)}class ni extends Ot{constructor(t=new Xi([new q(.5,.5),new q(-.5,.5),new q(-.5,-.5),new q(.5,-.5)]),e={}){super();this.type="ExtrudeGeometry",this.parameters={shapes:t,options:e},t=Array.isArray(t)?t:[t];const n=this,i=[],r=[];for(let o=0,l=t.length;o<l;o++){const c=t[o];a(c)}this.setAttribute("position",new he(i,3)),this.setAttribute("uv",new he(r,2)),this.computeVertexNormals();function a(o){const l=[],c=e.curveSegments!==void 0?e.curveSegments:12,d=e.steps!==void 0?e.steps:1;let h=e.depth!==void 0?e.depth:1,u=e.bevelEnabled!==void 0?e.bevelEnabled:!0,m=e.bevelThickness!==void 0?e.bevelThickness:.2,b=e.bevelSize!==void 0?e.bevelSize:m-.1,g=e.bevelOffset!==void 0?e.bevelOffset:0,Z=e.bevelSegments!==void 0?e.bevelSegments:3;const f=e.extrudePath,p=e.UVGenerator!==void 0?e.UVGenerator:Zm;e.amount!==void 0&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),h=e.amount);let Y,y=!1,x,M,N,Q;f&&(Y=f.getSpacedPoints(d),y=!0,u=!1,x=f.computeFrenetFrames(d,!1),M=new R,N=new R,Q=new R),u||(Z=0,m=0,b=0,g=0);const rt=o.extractPoints(c);let E=rt.shape;const G=rt.holes;if(!pn.isClockWise(E)){E=E.reverse();for(let _=0,O=G.length;_<O;_++){const nt=G[_];pn.isClockWise(nt)&&(G[_]=nt.reverse())}}const I=pn.triangulateShape(E,G),C=E;for(let _=0,O=G.length;_<O;_++){const nt=G[_];E=E.concat(nt)}function T(_,O,nt){return O||console.error("THREE.ExtrudeGeometry: vec does not exist"),O.clone().multiplyScalar(nt).add(_)}const A=E.length,z=I.length;function S(_,O,nt){let ht,at,vt;const gt=_.x-O.x,It=_.y-O.y,ee=nt.x-_.x,v=nt.y-_.y,W=gt*gt+It*It,H=gt*v-It*ee;if(Math.abs(H)>Number.EPSILON){const j=Math.sqrt(W),it=Math.sqrt(ee*ee+v*v),ct=O.x-It/j,Wt=O.y+gt/j,U=nt.x-v/it,Yt=nt.y+ee/it,Xt=((U-ct)*v-(Yt-Wt)*ee)/(gt*v-It*ee);ht=ct+gt*Xt-_.x,at=Wt+It*Xt-_.y;const Zt=ht*ht+at*at;if(Zt<=2)return new q(ht,at);vt=Math.sqrt(Zt/2)}else{let j=!1;gt>Number.EPSILON?ee>Number.EPSILON&&(j=!0):gt<-Number.EPSILON?ee<-Number.EPSILON&&(j=!0):Math.sign(It)===Math.sign(v)&&(j=!0),j?(ht=-It,at=gt,vt=Math.sqrt(W)):(ht=gt,at=It,vt=Math.sqrt(W/2))}return new q(ht/vt,at/vt)}const P=[];for(let _=0,O=C.length,nt=O-1,ht=_+1;_<O;_++,nt++,ht++)nt===O&&(nt=0),ht===O&&(ht=0),P[_]=S(C[_],C[nt],C[ht]);const $=[];let K,tt=P.concat();for(let _=0,O=G.length;_<O;_++){const nt=G[_];K=[];for(let ht=0,at=nt.length,vt=at-1,gt=ht+1;ht<at;ht++,vt++,gt++)vt===at&&(vt=0),gt===at&&(gt=0),K[ht]=S(nt[ht],nt[vt],nt[gt]);$.push(K),tt=tt.concat(K)}for(let _=0;_<Z;_++){const O=_/Z,nt=m*Math.cos(O*Math.PI/2),ht=b*Math.sin(O*Math.PI/2)+g;for(let at=0,vt=C.length;at<vt;at++){const gt=T(C[at],P[at],ht);kt(gt.x,gt.y,-nt)}for(let at=0,vt=G.length;at<vt;at++){const gt=G[at];K=$[at];for(let It=0,ee=gt.length;It<ee;It++){const v=T(gt[It],K[It],ht);kt(v.x,v.y,-nt)}}}const Gt=b+g;for(let _=0;_<A;_++){const O=u?T(E[_],tt[_],Gt):E[_];y?(N.copy(x.normals[0]).multiplyScalar(O.x),M.copy(x.binormals[0]).multiplyScalar(O.y),Q.copy(Y[0]).add(N).add(M),kt(Q.x,Q.y,Q.z)):kt(O.x,O.y,0)}for(let _=1;_<=d;_++)for(let O=0;O<A;O++){const nt=u?T(E[O],tt[O],Gt):E[O];y?(N.copy(x.normals[_]).multiplyScalar(nt.x),M.copy(x.binormals[_]).multiplyScalar(nt.y),Q.copy(Y[_]).add(N).add(M),kt(Q.x,Q.y,Q.z)):kt(nt.x,nt.y,h/d*_)}for(let _=Z-1;_>=0;_--){const O=_/Z,nt=m*Math.cos(O*Math.PI/2),ht=b*Math.sin(O*Math.PI/2)+g;for(let at=0,vt=C.length;at<vt;at++){const gt=T(C[at],P[at],ht);kt(gt.x,gt.y,h+nt)}for(let at=0,vt=G.length;at<vt;at++){const gt=G[at];K=$[at];for(let It=0,ee=gt.length;It<ee;It++){const v=T(gt[It],K[It],ht);y?kt(v.x,v.y+Y[d-1].y,Y[d-1].x+nt):kt(v.x,v.y,h+nt)}}}Ut(),Vt();function Ut(){const _=i.length/3;if(u){let O=0,nt=A*O;for(let ht=0;ht<z;ht++){const at=I[ht];St(at[2]+nt,at[1]+nt,at[0]+nt)}O=d+Z*2,nt=A*O;for(let ht=0;ht<z;ht++){const at=I[ht];St(at[0]+nt,at[1]+nt,at[2]+nt)}}else{for(let O=0;O<z;O++){const nt=I[O];St(nt[2],nt[1],nt[0])}for(let O=0;O<z;O++){const nt=I[O];St(nt[0]+A*d,nt[1]+A*d,nt[2]+A*d)}}n.addGroup(_,i.length/3-_,0)}function Vt(){const _=i.length/3;let O=0;L(C,O),O+=C.length;for(let nt=0,ht=G.length;nt<ht;nt++){const at=G[nt];L(at,O),O+=at.length}n.addGroup(_,i.length/3-_,1)}function L(_,O){let nt=_.length;for(;--nt>=0;){const ht=nt;let at=nt-1;at<0&&(at=_.length-1);for(let vt=0,gt=d+Z*2;vt<gt;vt++){const It=A*vt,ee=A*(vt+1),v=O+ht+It,W=O+at+It,H=O+at+ee,j=O+ht+ee;ut(v,W,H,j)}}}function kt(_,O,nt){l.push(_),l.push(O),l.push(nt)}function St(_,O,nt){mt(_),mt(O),mt(nt);const ht=i.length/3,at=p.generateTopUV(n,i,ht-3,ht-2,ht-1);Jt(at[0]),Jt(at[1]),Jt(at[2])}function ut(_,O,nt,ht){mt(_),mt(O),mt(ht),mt(O),mt(nt),mt(ht);const at=i.length/3,vt=p.generateSideWallUV(n,i,at-6,at-3,at-2,at-1);Jt(vt[0]),Jt(vt[1]),Jt(vt[3]),Jt(vt[1]),Jt(vt[2]),Jt(vt[3])}function mt(_){i.push(l[_*3+0]),i.push(l[_*3+1]),i.push(l[_*3+2])}function Jt(_){r.push(_.x),r.push(_.y)}}}toJSON(){const t=super.toJSON(),e=this.parameters.shapes,n=this.parameters.options;return Gm(e,n,t)}static fromJSON(t,e){const n=[];for(let r=0,a=t.shapes.length;r<a;r++){const o=e[t.shapes[r]];n.push(o)}const i=t.options.extrudePath;return i!==void 0&&(t.options.extrudePath=new Xo[i.type]().fromJSON(i)),new ni(n,t.options)}}const Zm={generateTopUV:function(s,t,e,n,i){const r=t[e*3],a=t[e*3+1],o=t[n*3],l=t[n*3+1],c=t[i*3],d=t[i*3+1];return[new q(r,a),new q(o,l),new q(c,d)]},generateSideWallUV:function(s,t,e,n,i,r){const a=t[e*3],o=t[e*3+1],l=t[e*3+2],c=t[n*3],d=t[n*3+1],h=t[n*3+2],u=t[i*3],m=t[i*3+1],b=t[i*3+2],g=t[r*3],Z=t[r*3+1],f=t[r*3+2];return Math.abs(o-d)<Math.abs(a-c)?[new q(a,1-l),new q(c,1-h),new q(u,1-b),new q(g,1-f)]:[new q(o,1-l),new q(d,1-h),new q(m,1-b),new q(Z,1-f)]}};function Gm(s,t,e){if(e.shapes=[],Array.isArray(s))for(let n=0,i=s.length;n<i;n++){const r=s[n];e.shapes.push(r.uuid)}else e.shapes.push(s.uuid);return t.extrudePath!==void 0&&(e.options.extrudePath=t.extrudePath.toJSON()),e}class Jr extends Ot{constructor(t=new Xi([new q(0,.5),new q(-.5,-.5),new q(.5,-.5)]),e=12){super();this.type="ShapeGeometry",this.parameters={shapes:t,curveSegments:e};const n=[],i=[],r=[],a=[];let o=0,l=0;if(Array.isArray(t)===!1)c(t);else for(let d=0;d<t.length;d++)c(t[d]),this.addGroup(o,l,d),o+=l,l=0;this.setIndex(n),this.setAttribute("position",new he(i,3)),this.setAttribute("normal",new he(r,3)),this.setAttribute("uv",new he(a,2));function c(d){const h=i.length/3,u=d.extractPoints(e);let m=u.shape;const b=u.holes;pn.isClockWise(m)===!1&&(m=m.reverse());for(let Z=0,f=b.length;Z<f;Z++){const p=b[Z];pn.isClockWise(p)===!0&&(b[Z]=p.reverse())}const g=pn.triangulateShape(m,b);for(let Z=0,f=b.length;Z<f;Z++){const p=b[Z];m=m.concat(p)}for(let Z=0,f=m.length;Z<f;Z++){const p=m[Z];i.push(p.x,p.y,0),r.push(0,0,1),a.push(p.x,p.y)}for(let Z=0,f=g.length;Z<f;Z++){const p=g[Z],Y=p[0]+h,y=p[1]+h,x=p[2]+h;n.push(Y,y,x),l+=3}}}toJSON(){const t=super.toJSON(),e=this.parameters.shapes;return Wm(e,t)}static fromJSON(t,e){const n=[];for(let i=0,r=t.shapes.length;i<r;i++){const a=e[t.shapes[i]];n.push(a)}return new Jr(n,t.curveSegments)}}function Wm(s,t){if(t.shapes=[],Array.isArray(s))for(let e=0,n=s.length;e<n;e++){const i=s[e];t.shapes.push(i.uuid)}else t.shapes.push(s.uuid);return t}class Bo extends ce{constructor(t){super();this.type="ShadowMaterial",this.color=new D(0),this.transparent=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this}}Bo.prototype.isShadowMaterial=!0;class Tr extends _e{constructor(t){super(t);this.type="RawShaderMaterial"}}Tr.prototype.isRawShaderMaterial=!0;class Dr extends ce{constructor(t){super();this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new D(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new D(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new q(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.setValues(t)}copy(t){return super.copy(t),this.defines={STANDARD:""},this.color.copy(t.color),this.roughness=t.roughness,this.metalness=t.metalness,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.roughnessMap=t.roughnessMap,this.metalnessMap=t.metalnessMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapIntensity=t.envMapIntensity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this}}Dr.prototype.isMeshStandardMaterial=!0;class Co extends Dr{constructor(t){super();this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new q(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return we(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(e){this.ior=(1+.4*e)/(1-.4*e)}}),this.sheenColor=new D(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=0,this.attenuationColor=new D(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new D(1,1,1),this.specularColorMap=null,this._sheen=0,this._clearcoat=0,this._transmission=0,this.setValues(t)}get sheen(){return this._sheen}set sheen(t){this._sheen>0!=t>0&&this.version++,this._sheen=t}get clearcoat(){return this._clearcoat}set clearcoat(t){this._clearcoat>0!=t>0&&this.version++,this._clearcoat=t}get transmission(){return this._transmission}set transmission(t){this._transmission>0!=t>0&&this.version++,this._transmission=t}copy(t){return super.copy(t),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=t.clearcoat,this.clearcoatMap=t.clearcoatMap,this.clearcoatRoughness=t.clearcoatRoughness,this.clearcoatRoughnessMap=t.clearcoatRoughnessMap,this.clearcoatNormalMap=t.clearcoatNormalMap,this.clearcoatNormalScale.copy(t.clearcoatNormalScale),this.ior=t.ior,this.sheen=t.sheen,this.sheenColor.copy(t.sheenColor),this.sheenColorMap=t.sheenColorMap,this.sheenRoughness=t.sheenRoughness,this.sheenRoughnessMap=t.sheenRoughnessMap,this.transmission=t.transmission,this.transmissionMap=t.transmissionMap,this.thickness=t.thickness,this.thicknessMap=t.thicknessMap,this.attenuationDistance=t.attenuationDistance,this.attenuationColor.copy(t.attenuationColor),this.specularIntensity=t.specularIntensity,this.specularIntensityMap=t.specularIntensityMap,this.specularColor.copy(t.specularColor),this.specularColorMap=t.specularColorMap,this}}Co.prototype.isMeshPhysicalMaterial=!0;class Ao extends ce{constructor(t){super();this.type="MeshPhongMaterial",this.color=new D(16777215),this.specular=new D(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new D(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new q(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.specular.copy(t.specular),this.shininess=t.shininess,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this}}Ao.prototype.isMeshPhongMaterial=!0;class _o extends ce{constructor(t){super();this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new D(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new D(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new q(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.gradientMap=t.gradientMap,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this}}_o.prototype.isMeshToonMaterial=!0;class Jo extends ce{constructor(t){super();this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new q(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.flatShading=!1,this.setValues(t)}copy(t){return super.copy(t),this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.flatShading=t.flatShading,this}}Jo.prototype.isMeshNormalMaterial=!0;class To extends ce{constructor(t){super();this.type="MeshLambertMaterial",this.color=new D(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new D(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this}}To.prototype.isMeshLambertMaterial=!0;class Do extends ce{constructor(t){super();this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new D(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new q(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.setValues(t)}copy(t){return super.copy(t),this.defines={MATCAP:""},this.color.copy(t.color),this.matcap=t.matcap,this.map=t.map,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.flatShading=t.flatShading,this}}Do.prototype.isMeshMatcapMaterial=!0;class zo extends Mn{constructor(t){super();this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(t)}copy(t){return super.copy(t),this.scale=t.scale,this.dashSize=t.dashSize,this.gapSize=t.gapSize,this}}zo.prototype.isLineDashedMaterial=!0;const ym={ShadowMaterial:Bo,SpriteMaterial:Gr,RawShaderMaterial:Tr,ShaderMaterial:_e,PointsMaterial:Rr,MeshPhysicalMaterial:Co,MeshStandardMaterial:Dr,MeshPhongMaterial:Ao,MeshToonMaterial:_o,MeshNormalMaterial:Jo,MeshLambertMaterial:To,MeshDepthMaterial:fr,MeshDistanceMaterial:br,MeshBasicMaterial:ji,MeshMatcapMaterial:Do,LineDashedMaterial:zo,LineBasicMaterial:Mn,Material:ce};ce.fromType=function(s){return new ym[s]};const te={arraySlice:function(s,t,e){return te.isTypedArray(s)?new s.constructor(s.subarray(t,e!==void 0?e:s.length)):s.slice(t,e)},convertArray:function(s,t,e){return!s||!e&&s.constructor===t?s:typeof t.BYTES_PER_ELEMENT=="number"?new t(s):Array.prototype.slice.call(s)},isTypedArray:function(s){return ArrayBuffer.isView(s)&&!(s instanceof DataView)},getKeyframeOrder:function(s){function t(i,r){return s[i]-s[r]}const e=s.length,n=new Array(e);for(let i=0;i!==e;++i)n[i]=i;return n.sort(t),n},sortedArray:function(s,t,e){const n=s.length,i=new s.constructor(n);for(let r=0,a=0;a!==n;++r){const o=e[r]*t;for(let l=0;l!==t;++l)i[a++]=s[o+l]}return i},flattenJSON:function(s,t,e,n){let i=1,r=s[0];for(;r!==void 0&&r[n]===void 0;)r=s[i++];if(r===void 0)return;let a=r[n];if(a!==void 0)if(Array.isArray(a))do a=r[n],a!==void 0&&(t.push(r.time),e.push.apply(e,a)),r=s[i++];while(r!==void 0);else if(a.toArray!==void 0)do a=r[n],a!==void 0&&(t.push(r.time),a.toArray(e,e.length)),r=s[i++];while(r!==void 0);else do a=r[n],a!==void 0&&(t.push(r.time),e.push(a)),r=s[i++];while(r!==void 0)},subclip:function(s,t,e,n,i=30){const r=s.clone();r.name=t;const a=[];for(let l=0;l<r.tracks.length;++l){const c=r.tracks[l],d=c.getValueSize(),h=[],u=[];for(let m=0;m<c.times.length;++m){const b=c.times[m]*i;if(!(b<e||b>=n)){h.push(c.times[m]);for(let g=0;g<d;++g)u.push(c.values[m*d+g])}}h.length!==0&&(c.times=te.convertArray(h,c.times.constructor),c.values=te.convertArray(u,c.values.constructor),a.push(c))}r.tracks=a;let o=1/0;for(let l=0;l<r.tracks.length;++l)o>r.tracks[l].times[0]&&(o=r.tracks[l].times[0]);for(let l=0;l<r.tracks.length;++l)r.tracks[l].shift(-1*o);return r.resetDuration(),r},makeClipAdditive:function(s,t=0,e=s,n=30){n<=0&&(n=30);const i=e.tracks.length,r=t/n;for(let a=0;a<i;++a){const o=e.tracks[a],l=o.ValueTypeName;if(l==="bool"||l==="string")continue;const c=s.tracks.find(function(f){return f.name===o.name&&f.ValueTypeName===l});if(c===void 0)continue;let d=0;const h=o.getValueSize();o.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(d=h/3);let u=0;const m=c.getValueSize();c.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(u=m/3);const b=o.times.length-1;let g;if(r<=o.times[0]){const f=d,p=h-d;g=te.arraySlice(o.values,f,p)}else if(r>=o.times[b]){const f=b*h+d,p=f+h-d;g=te.arraySlice(o.values,f,p)}else{const f=o.createInterpolant(),p=d,Y=h-d;f.evaluate(r),g=te.arraySlice(f.resultBuffer,p,Y)}l==="quaternion"&&new ve().fromArray(g).normalize().conjugate().toArray(g);const Z=c.times.length;for(let f=0;f<Z;++f){const p=f*m+u;if(l==="quaternion")ve.multiplyQuaternionsFlat(c.values,p,g,0,c.values,p);else{const Y=m-u*2;for(let y=0;y<Y;++y)c.values[p+y]-=g[y]}}}return s.blendMode=2501,s}};class fn{constructor(t,e,n,i){this.parameterPositions=t,this._cachedIndex=0,this.resultBuffer=i!==void 0?i:new e.constructor(n),this.sampleValues=e,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(t){const e=this.parameterPositions;let n=this._cachedIndex,i=e[n],r=e[n-1];t:{e:{let a;n:{i:if(!(t<i)){for(let o=n+2;;){if(i===void 0){if(t<r)break i;return n=e.length,this._cachedIndex=n,this.afterEnd_(n-1,t,r)}if(n===o)break;if(r=i,i=e[++n],t<i)break e}a=e.length;break n}if(!(t>=r)){const o=e[1];t<o&&(n=2,r=o);for(let l=n-2;;){if(r===void 0)return this._cachedIndex=0,this.beforeStart_(0,t,i);if(n===l)break;if(i=r,r=e[--n-1],t>=r)break e}a=n,n=0;break n}break t}for(;n<a;){const o=n+a>>>1;t<e[o]?a=o:n=o+1}if(i=e[n],r=e[n-1],r===void 0)return this._cachedIndex=0,this.beforeStart_(0,t,i);if(i===void 0)return n=e.length,this._cachedIndex=n,this.afterEnd_(n-1,r,t)}this._cachedIndex=n,this.intervalChanged_(n,r,i)}return this.interpolate_(n,r,t,i)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(t){const e=this.resultBuffer,n=this.sampleValues,i=this.valueSize,r=t*i;for(let a=0;a!==i;++a)e[a]=n[r+a];return e}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}fn.prototype.beforeStart_=fn.prototype.copySampleValue_,fn.prototype.afterEnd_=fn.prototype.copySampleValue_;class xm extends fn{constructor(t,e,n,i){super(t,e,n,i);this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:2400,endingEnd:2400}}intervalChanged_(t,e,n){const i=this.parameterPositions;let r=t-2,a=t+1,o=i[r],l=i[a];if(o===void 0)switch(this.getSettings_().endingStart){case 2401:r=t,o=2*e-n;break;case 2402:r=i.length-2,o=e+i[r]-i[r+1];break;default:r=t,o=n}if(l===void 0)switch(this.getSettings_().endingEnd){case 2401:a=t,l=2*n-e;break;case 2402:a=1,l=n+i[1]-i[0];break;default:a=t-1,l=e}const c=(n-e)*.5,d=this.valueSize;this._weightPrev=c/(e-o),this._weightNext=c/(l-n),this._offsetPrev=r*d,this._offsetNext=a*d}interpolate_(t,e,n,i){const r=this.resultBuffer,a=this.sampleValues,o=this.valueSize,l=t*o,c=l-o,d=this._offsetPrev,h=this._offsetNext,u=this._weightPrev,m=this._weightNext,b=(n-e)/(i-e),g=b*b,Z=g*b,f=-u*Z+2*u*g-u*b,p=(1+u)*Z+(-1.5-2*u)*g+(-.5+u)*b+1,Y=(-1-m)*Z+(1.5+m)*g+.5*b,y=m*Z-m*g;for(let x=0;x!==o;++x)r[x]=f*a[d+x]+p*a[c+x]+Y*a[l+x]+y*a[h+x];return r}}class Eo extends fn{constructor(t,e,n,i){super(t,e,n,i)}interpolate_(t,e,n,i){const r=this.resultBuffer,a=this.sampleValues,o=this.valueSize,l=t*o,c=l-o,d=(n-e)/(i-e),h=1-d;for(let u=0;u!==o;++u)r[u]=a[c+u]*h+a[l+u]*d;return r}}class Vm extends fn{constructor(t,e,n,i){super(t,e,n,i)}interpolate_(t){return this.copySampleValue_(t-1)}}class ze{constructor(t,e,n,i){if(t===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(e===void 0||e.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+t);this.name=t,this.times=te.convertArray(e,this.TimeBufferType),this.values=te.convertArray(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(t){const e=t.constructor;let n;if(e.toJSON!==this.toJSON)n=e.toJSON(t);else{n={name:t.name,times:te.convertArray(t.times,Array),values:te.convertArray(t.values,Array)};const i=t.getInterpolation();i!==t.DefaultInterpolation&&(n.interpolation=i)}return n.type=t.ValueTypeName,n}InterpolantFactoryMethodDiscrete(t){return new Vm(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodLinear(t){return new Eo(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodSmooth(t){return new xm(this.times,this.values,this.getValueSize(),t)}setInterpolation(t){let e;switch(t){case 2300:e=this.InterpolantFactoryMethodDiscrete;break;case 2301:e=this.InterpolantFactoryMethodLinear;break;case 2302:e=this.InterpolantFactoryMethodSmooth;break}if(e===void 0){const n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(t!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(n);return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=e,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return 2300;case this.InterpolantFactoryMethodLinear:return 2301;case this.InterpolantFactoryMethodSmooth:return 2302}}getValueSize(){return this.values.length/this.times.length}shift(t){if(t!==0){const e=this.times;for(let n=0,i=e.length;n!==i;++n)e[n]+=t}return this}scale(t){if(t!==1){const e=this.times;for(let n=0,i=e.length;n!==i;++n)e[n]*=t}return this}trim(t,e){const n=this.times,i=n.length;let r=0,a=i-1;for(;r!==i&&n[r]<t;)++r;for(;a!==-1&&n[a]>e;)--a;if(++a,r!==0||a!==i){r>=a&&(a=Math.max(a,1),r=a-1);const o=this.getValueSize();this.times=te.arraySlice(n,r,a),this.values=te.arraySlice(this.values,r*o,a*o)}return this}validate(){let t=!0;const e=this.getValueSize();e-Math.floor(e)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),t=!1);const n=this.times,i=this.values,r=n.length;r===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),t=!1);let a=null;for(let o=0;o!==r;o++){const l=n[o];if(typeof l=="number"&&isNaN(l)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,o,l),t=!1;break}if(a!==null&&a>l){console.error("THREE.KeyframeTrack: Out of order keys.",this,o,l,a),t=!1;break}a=l}if(i!==void 0&&te.isTypedArray(i))for(let o=0,l=i.length;o!==l;++o){const c=i[o];if(isNaN(c)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,o,c),t=!1;break}}return t}optimize(){const t=te.arraySlice(this.times),e=te.arraySlice(this.values),n=this.getValueSize(),i=this.getInterpolation()===2302,r=t.length-1;let a=1;for(let o=1;o<r;++o){let l=!1;const c=t[o],d=t[o+1];if(c!==d&&(o!==1||c!==t[0]))if(i)l=!0;else{const h=o*n,u=h-n,m=h+n;for(let b=0;b!==n;++b){const g=e[h+b];if(g!==e[u+b]||g!==e[m+b]){l=!0;break}}}if(l){if(o!==a){t[a]=t[o];const h=o*n,u=a*n;for(let m=0;m!==n;++m)e[u+m]=e[h+m]}++a}}if(r>0){t[a]=t[r];for(let o=r*n,l=a*n,c=0;c!==n;++c)e[l+c]=e[o+c];++a}return a!==t.length?(this.times=te.arraySlice(t,0,a),this.values=te.arraySlice(e,0,a*n)):(this.times=t,this.values=e),this}clone(){const t=te.arraySlice(this.times,0),e=te.arraySlice(this.values,0),n=this.constructor,i=new n(this.name,t,e);return i.createInterpolant=this.createInterpolant,i}}ze.prototype.TimeBufferType=Float32Array,ze.prototype.ValueBufferType=Float32Array,ze.prototype.DefaultInterpolation=2301;class ii extends ze{}ii.prototype.ValueTypeName="bool",ii.prototype.ValueBufferType=Array,ii.prototype.DefaultInterpolation=2300,ii.prototype.InterpolantFactoryMethodLinear=void 0,ii.prototype.InterpolantFactoryMethodSmooth=void 0;class Ho extends ze{}Ho.prototype.ValueTypeName="color";class Vs extends ze{}Vs.prototype.ValueTypeName="number";class vm extends fn{constructor(t,e,n,i){super(t,e,n,i)}interpolate_(t,e,n,i){const r=this.resultBuffer,a=this.sampleValues,o=this.valueSize,l=(n-e)/(i-e);let c=t*o;for(let d=c+o;c!==d;c+=4)ve.slerpFlat(r,0,a,c-o,a,c,l);return r}}class Fi extends ze{InterpolantFactoryMethodLinear(t){return new vm(this.times,this.values,this.getValueSize(),t)}}Fi.prototype.ValueTypeName="quaternion",Fi.prototype.DefaultInterpolation=2301,Fi.prototype.InterpolantFactoryMethodSmooth=void 0;class si extends ze{}si.prototype.ValueTypeName="string",si.prototype.ValueBufferType=Array,si.prototype.DefaultInterpolation=2300,si.prototype.InterpolantFactoryMethodLinear=void 0,si.prototype.InterpolantFactoryMethodSmooth=void 0;class vs extends ze{}vs.prototype.ValueTypeName="vector";class Uo{constructor(t,e=-1,n,i=2500){this.name=t,this.tracks=n,this.duration=e,this.blendMode=i,this.uuid=Te(),this.duration<0&&this.resetDuration()}static parse(t){const e=[],n=t.tracks,i=1/(t.fps||1);for(let a=0,o=n.length;a!==o;++a)e.push(Ym(n[a]).scale(i));const r=new this(t.name,t.duration,e,t.blendMode);return r.uuid=t.uuid,r}static toJSON(t){const e=[],n=t.tracks,i={name:t.name,duration:t.duration,tracks:e,uuid:t.uuid,blendMode:t.blendMode};for(let r=0,a=n.length;r!==a;++r)e.push(ze.toJSON(n[r]));return i}static CreateFromMorphTargetSequence(t,e,n,i){const r=e.length,a=[];for(let o=0;o<r;o++){let l=[],c=[];l.push((o+r-1)%r,o,(o+1)%r),c.push(0,1,0);const d=te.getKeyframeOrder(l);l=te.sortedArray(l,1,d),c=te.sortedArray(c,1,d),!i&&l[0]===0&&(l.push(r),c.push(c[0])),a.push(new Vs(".morphTargetInfluences["+e[o].name+"]",l,c).scale(1/n))}return new this(t,-1,a)}static findByName(t,e){let n=t;if(!Array.isArray(t)){const i=t;n=i.geometry&&i.geometry.animations||i.animations}for(let i=0;i<n.length;i++)if(n[i].name===e)return n[i];return null}static CreateClipsFromMorphTargetSequences(t,e,n){const i={},r=/^([\w-]*?)([\d]+)$/;for(let o=0,l=t.length;o<l;o++){const c=t[o],d=c.name.match(r);if(d&&d.length>1){const h=d[1];let u=i[h];u||(i[h]=u=[]),u.push(c)}}const a=[];for(const o in i)a.push(this.CreateFromMorphTargetSequence(o,i[o],e,n));return a}static parseAnimation(t,e){if(!t)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(h,u,m,b,g){if(m.length!==0){const Z=[],f=[];te.flattenJSON(m,Z,f,b),Z.length!==0&&g.push(new h(u,Z,f))}},i=[],r=t.name||"default",a=t.fps||30,o=t.blendMode;let l=t.length||-1;const c=t.hierarchy||[];for(let h=0;h<c.length;h++){const u=c[h].keys;if(!(!u||u.length===0))if(u[0].morphTargets){const m={};let b;for(b=0;b<u.length;b++)if(u[b].morphTargets)for(let g=0;g<u[b].morphTargets.length;g++)m[u[b].morphTargets[g]]=-1;for(const g in m){const Z=[],f=[];for(let p=0;p!==u[b].morphTargets.length;++p){const Y=u[b];Z.push(Y.time),f.push(Y.morphTarget===g?1:0)}i.push(new Vs(".morphTargetInfluence["+g+"]",Z,f))}l=m.length*a}else{const m=".bones["+e[h].name+"]";n(vs,m+".position",u,"pos",i),n(Fi,m+".quaternion",u,"rot",i),n(vs,m+".scale",u,"scl",i)}}return i.length===0?null:new this(r,l,i,o)}resetDuration(){const t=this.tracks;let e=0;for(let n=0,i=t.length;n!==i;++n){const r=this.tracks[n];e=Math.max(e,r.times[r.times.length-1])}return this.duration=e,this}trim(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].trim(0,this.duration);return this}validate(){let t=!0;for(let e=0;e<this.tracks.length;e++)t=t&&this.tracks[e].validate();return t}optimize(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].optimize();return this}clone(){const t=[];for(let e=0;e<this.tracks.length;e++)t.push(this.tracks[e].clone());return new this.constructor(this.name,this.duration,t,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function Rm(s){switch(s.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Vs;case"vector":case"vector2":case"vector3":case"vector4":return vs;case"color":return Ho;case"quaternion":return Fi;case"bool":case"boolean":return ii;case"string":return si}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+s)}function Ym(s){if(s.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const t=Rm(s.type);if(s.times===void 0){const e=[],n=[];te.flattenJSON(s.keys,e,n,"value"),s.times=e,s.values=n}return t.parse!==void 0?t.parse(s):new t(s.name,s.times,s.values,s.interpolation)}const ri={enabled:!1,files:{},add:function(s,t){this.enabled!==!1&&(this.files[s]=t)},get:function(s){if(this.enabled!==!1)return this.files[s]},remove:function(s){delete this.files[s]},clear:function(){this.files={}}};class Xm{constructor(t,e,n){const i=this;let r=!1,a=0,o=0,l;const c=[];this.onStart=void 0,this.onLoad=t,this.onProgress=e,this.onError=n,this.itemStart=function(d){o++,r===!1&&i.onStart!==void 0&&i.onStart(d,a,o),r=!0},this.itemEnd=function(d){a++,i.onProgress!==void 0&&i.onProgress(d,a,o),a===o&&(r=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(d){i.onError!==void 0&&i.onError(d)},this.resolveURL=function(d){return l?l(d):d},this.setURLModifier=function(d){return l=d,this},this.addHandler=function(d,h){return c.push(d,h),this},this.removeHandler=function(d){const h=c.indexOf(d);return h!==-1&&c.splice(h,2),this},this.getHandler=function(d){for(let h=0,u=c.length;h<u;h+=2){const m=c[h],b=c[h+1];if(m.global&&(m.lastIndex=0),m.test(d))return b}return null}}}const wm=new Xm;class bn{constructor(t){this.manager=t!==void 0?t:wm,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(t,e){const n=this;return new Promise(function(i,r){n.load(t,i,e,r)})}parse(){}setCrossOrigin(t){return this.crossOrigin=t,this}setWithCredentials(t){return this.withCredentials=t,this}setPath(t){return this.path=t,this}setResourcePath(t){return this.resourcePath=t,this}setRequestHeader(t){return this.requestHeader=t,this}}const sn={};class Mm extends bn{constructor(t){super(t)}load(t,e,n,i){t===void 0&&(t=""),this.path!==void 0&&(t=this.path+t),t=this.manager.resolveURL(t);const r=ri.get(t);if(r!==void 0)return this.manager.itemStart(t),setTimeout(()=>{e&&e(r),this.manager.itemEnd(t)},0),r;if(sn[t]!==void 0){sn[t].push({onLoad:e,onProgress:n,onError:i});return}sn[t]=[],sn[t].push({onLoad:e,onProgress:n,onError:i});const a=new Request(t,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),o=this.mimeType,l=this.responseType;fetch(a).then(c=>{if(c.status===200||c.status===0){if(c.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream=="undefined"||c.body===void 0||c.body.getReader===void 0)return c;const d=sn[t],h=c.body.getReader(),u=c.headers.get("Content-Length"),m=u?parseInt(u):0,b=m!==0;let g=0;const Z=new ReadableStream({start(f){p();function p(){h.read().then(({done:Y,value:y})=>{if(Y)f.close();else{g+=y.byteLength;const x=new ProgressEvent("progress",{lengthComputable:b,loaded:g,total:m});for(let M=0,N=d.length;M<N;M++){const Q=d[M];Q.onProgress&&Q.onProgress(x)}f.enqueue(y),p()}})}}});return new Response(Z)}else throw Error(`fetch for "${c.url}" responded with ${c.status}: ${c.statusText}`)}).then(c=>{switch(l){case"arraybuffer":return c.arrayBuffer();case"blob":return c.blob();case"document":return c.text().then(d=>new DOMParser().parseFromString(d,o));case"json":return c.json();default:if(o===void 0)return c.text();{const h=/charset="?([^;"\s]*)"?/i.exec(o),u=h&&h[1]?h[1].toLowerCase():void 0,m=new TextDecoder(u);return c.arrayBuffer().then(b=>m.decode(b))}}}).then(c=>{ri.add(t,c);const d=sn[t];delete sn[t];for(let h=0,u=d.length;h<u;h++){const m=d[h];m.onLoad&&m.onLoad(c)}}).catch(c=>{const d=sn[t];if(d===void 0)throw this.manager.itemError(t),c;delete sn[t];for(let h=0,u=d.length;h<u;h++){const m=d[h];m.onError&&m.onError(c)}this.manager.itemError(t)}).finally(()=>{this.manager.itemEnd(t)}),this.manager.itemStart(t)}setResponseType(t){return this.responseType=t,this}setMimeType(t){return this.mimeType=t,this}}class ko extends bn{constructor(t){super(t)}load(t,e,n,i){this.path!==void 0&&(t=this.path+t),t=this.manager.resolveURL(t);const r=this,a=ri.get(t);if(a!==void 0)return r.manager.itemStart(t),setTimeout(function(){e&&e(a),r.manager.itemEnd(t)},0),a;const o=hi("img");function l(){d(),ri.add(t,this),e&&e(this),r.manager.itemEnd(t)}function c(h){d(),i&&i(h),r.manager.itemError(t),r.manager.itemEnd(t)}function d(){o.removeEventListener("load",l,!1),o.removeEventListener("error",c,!1)}return o.addEventListener("load",l,!1),o.addEventListener("error",c,!1),t.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(o.crossOrigin=this.crossOrigin),r.manager.itemStart(t),o.src=t,o}}class Nm extends bn{constructor(t){super(t)}load(t,e,n,i){const r=new rs,a=new ko(this.manager);a.setCrossOrigin(this.crossOrigin),a.setPath(this.path);let o=0;function l(c){a.load(t[c],function(d){r.images[c]=d,o++,o===6&&(r.needsUpdate=!0,e&&e(r))},void 0,i)}for(let c=0;c<t.length;++c)l(c);return r}}class Fm extends bn{constructor(t){super(t)}load(t,e,n,i){const r=new se,a=new ko(this.manager);return a.setCrossOrigin(this.crossOrigin),a.setPath(this.path),a.load(t,function(o){r.image=o,r.needsUpdate=!0,e!==void 0&&e(r)},n,i),r}}class Ee extends Ht{constructor(t,e=1){super();this.type="Light",this.color=new D(t),this.intensity=e}dispose(){}copy(t){return super.copy(t),this.color.copy(t.color),this.intensity=t.intensity,this}toJSON(t){const e=super.toJSON(t);return e.object.color=this.color.getHex(),e.object.intensity=this.intensity,this.groundColor!==void 0&&(e.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(e.object.distance=this.distance),this.angle!==void 0&&(e.object.angle=this.angle),this.decay!==void 0&&(e.object.decay=this.decay),this.penumbra!==void 0&&(e.object.penumbra=this.penumbra),this.shadow!==void 0&&(e.object.shadow=this.shadow.toJSON()),e}}Ee.prototype.isLight=!0;class Sm extends Ee{constructor(t,e,n){super(t,n);this.type="HemisphereLight",this.position.copy(Ht.DefaultUp),this.updateMatrix(),this.groundColor=new D(e)}copy(t){return Ee.prototype.copy.call(this,t),this.groundColor.copy(t.groundColor),this}}Sm.prototype.isHemisphereLight=!0;const Po=new ft,Lo=new R,Qo=new R;class zr{constructor(t){this.camera=t,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new q(512,512),this.map=null,this.mapPass=null,this.matrix=new ft,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new bi,this._frameExtents=new q(1,1),this._viewportCount=1,this._viewports=[new Mt(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(t){const e=this.camera,n=this.matrix;Lo.setFromMatrixPosition(t.matrixWorld),e.position.copy(Lo),Qo.setFromMatrixPosition(t.target.matrixWorld),e.lookAt(Qo),e.updateMatrixWorld(),Po.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Po),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(e.projectionMatrix),n.multiply(e.matrixWorldInverse)}getViewport(t){return this._viewports[t]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(t){return this.camera=t.camera.clone(),this.bias=t.bias,this.radius=t.radius,this.mapSize.copy(t.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const t={};return this.bias!==0&&(t.bias=this.bias),this.normalBias!==0&&(t.normalBias=this.normalBias),this.radius!==1&&(t.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(t.mapSize=this.mapSize.toArray()),t.camera=this.camera.toJSON(!1).object,delete t.camera.matrix,t}}class jo extends zr{constructor(){super(new Xe(50,1,.5,500));this.focus=1}updateMatrices(t){const e=this.camera,n=Bs*2*t.angle*this.focus,i=this.mapSize.width/this.mapSize.height,r=t.distance||e.far;(n!==e.fov||i!==e.aspect||r!==e.far)&&(e.fov=n,e.aspect=i,e.far=r,e.updateProjectionMatrix()),super.updateMatrices(t)}copy(t){return super.copy(t),this.focus=t.focus,this}}jo.prototype.isSpotLightShadow=!0;class Im extends Ee{constructor(t,e,n=0,i=Math.PI/3,r=0,a=1){super(t,e);this.type="SpotLight",this.position.copy(Ht.DefaultUp),this.updateMatrix(),this.target=new Ht,this.distance=n,this.angle=i,this.penumbra=r,this.decay=a,this.shadow=new jo}get power(){return this.intensity*Math.PI}set power(t){this.intensity=t/Math.PI}dispose(){this.shadow.dispose()}copy(t){return super.copy(t),this.distance=t.distance,this.angle=t.angle,this.penumbra=t.penumbra,this.decay=t.decay,this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}Im.prototype.isSpotLight=!0;const Oo=new ft,Si=new R,Er=new R;class Ko extends zr{constructor(){super(new Xe(90,1,.5,500));this._frameExtents=new q(4,2),this._viewportCount=6,this._viewports=[new Mt(2,1,1,1),new Mt(0,1,1,1),new Mt(3,1,1,1),new Mt(1,1,1,1),new Mt(3,0,1,1),new Mt(1,0,1,1)],this._cubeDirections=[new R(1,0,0),new R(-1,0,0),new R(0,0,1),new R(0,0,-1),new R(0,1,0),new R(0,-1,0)],this._cubeUps=[new R(0,1,0),new R(0,1,0),new R(0,1,0),new R(0,1,0),new R(0,0,1),new R(0,0,-1)]}updateMatrices(t,e=0){const n=this.camera,i=this.matrix,r=t.distance||n.far;r!==n.far&&(n.far=r,n.updateProjectionMatrix()),Si.setFromMatrixPosition(t.matrixWorld),n.position.copy(Si),Er.copy(n.position),Er.add(this._cubeDirections[e]),n.up.copy(this._cubeUps[e]),n.lookAt(Er),n.updateMatrixWorld(),i.makeTranslation(-Si.x,-Si.y,-Si.z),Oo.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Oo)}}Ko.prototype.isPointLightShadow=!0;class Bm extends Ee{constructor(t,e,n=0,i=1){super(t,e);this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new Ko}get power(){return this.intensity*4*Math.PI}set power(t){this.intensity=t/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(t){return super.copy(t),this.distance=t.distance,this.decay=t.decay,this.shadow=t.shadow.clone(),this}}Bm.prototype.isPointLight=!0;class qo extends zr{constructor(){super(new lr(-5,5,5,-5,.5,500))}}qo.prototype.isDirectionalLightShadow=!0;class Cm extends Ee{constructor(t,e){super(t,e);this.type="DirectionalLight",this.position.copy(Ht.DefaultUp),this.updateMatrix(),this.target=new Ht,this.shadow=new qo}dispose(){this.shadow.dispose()}copy(t){return super.copy(t),this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}Cm.prototype.isDirectionalLight=!0;class Am extends Ee{constructor(t,e){super(t,e);this.type="AmbientLight"}}Am.prototype.isAmbientLight=!0;class _m extends Ee{constructor(t,e,n=10,i=10){super(t,e);this.type="RectAreaLight",this.width=n,this.height=i}get power(){return this.intensity*this.width*this.height*Math.PI}set power(t){this.intensity=t/(this.width*this.height*Math.PI)}copy(t){return super.copy(t),this.width=t.width,this.height=t.height,this}toJSON(t){const e=super.toJSON(t);return e.object.width=this.width,e.object.height=this.height,e}}_m.prototype.isRectAreaLight=!0;class $o{constructor(){this.coefficients=[];for(let t=0;t<9;t++)this.coefficients.push(new R)}set(t){for(let e=0;e<9;e++)this.coefficients[e].copy(t[e]);return this}zero(){for(let t=0;t<9;t++)this.coefficients[t].set(0,0,0);return this}getAt(t,e){const n=t.x,i=t.y,r=t.z,a=this.coefficients;return e.copy(a[0]).multiplyScalar(.282095),e.addScaledVector(a[1],.488603*i),e.addScaledVector(a[2],.488603*r),e.addScaledVector(a[3],.488603*n),e.addScaledVector(a[4],1.092548*(n*i)),e.addScaledVector(a[5],1.092548*(i*r)),e.addScaledVector(a[6],.315392*(3*r*r-1)),e.addScaledVector(a[7],1.092548*(n*r)),e.addScaledVector(a[8],.546274*(n*n-i*i)),e}getIrradianceAt(t,e){const n=t.x,i=t.y,r=t.z,a=this.coefficients;return e.copy(a[0]).multiplyScalar(.886227),e.addScaledVector(a[1],2*.511664*i),e.addScaledVector(a[2],2*.511664*r),e.addScaledVector(a[3],2*.511664*n),e.addScaledVector(a[4],2*.429043*n*i),e.addScaledVector(a[5],2*.429043*i*r),e.addScaledVector(a[6],.743125*r*r-.247708),e.addScaledVector(a[7],2*.429043*n*r),e.addScaledVector(a[8],.429043*(n*n-i*i)),e}add(t){for(let e=0;e<9;e++)this.coefficients[e].add(t.coefficients[e]);return this}addScaledSH(t,e){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(t.coefficients[n],e);return this}scale(t){for(let e=0;e<9;e++)this.coefficients[e].multiplyScalar(t);return this}lerp(t,e){for(let n=0;n<9;n++)this.coefficients[n].lerp(t.coefficients[n],e);return this}equals(t){for(let e=0;e<9;e++)if(!this.coefficients[e].equals(t.coefficients[e]))return!1;return!0}copy(t){return this.set(t.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(t,e=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].fromArray(t,e+i*3);return this}toArray(t=[],e=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].toArray(t,e+i*3);return t}static getBasisAt(t,e){const n=t.x,i=t.y,r=t.z;e[0]=.282095,e[1]=.488603*i,e[2]=.488603*r,e[3]=.488603*n,e[4]=1.092548*n*i,e[5]=1.092548*i*r,e[6]=.315392*(3*r*r-1),e[7]=1.092548*n*r,e[8]=.546274*(n*n-i*i)}}$o.prototype.isSphericalHarmonics3=!0;class Hr extends Ee{constructor(t=new $o,e=1){super(void 0,e);this.sh=t}copy(t){return super.copy(t),this.sh.copy(t.sh),this}fromJSON(t){return this.intensity=t.intensity,this.sh.fromArray(t.sh),this}toJSON(t){const e=super.toJSON(t);return e.object.sh=this.sh.toArray(),e}}Hr.prototype.isLightProbe=!0;class Jm{static decodeText(t){if(typeof TextDecoder!="undefined")return new TextDecoder().decode(t);let e="";for(let n=0,i=t.length;n<i;n++)e+=String.fromCharCode(t[n]);try{return decodeURIComponent(escape(e))}catch{return e}}static extractUrlBase(t){const e=t.lastIndexOf("/");return e===-1?"./":t.slice(0,e+1)}static resolveURL(t,e){return typeof t!="string"||t===""?"":(/^https?:\/\//i.test(e)&&/^\//.test(t)&&(e=e.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(t)||/^data:.*,.*$/i.test(t)||/^blob:.*$/i.test(t)?t:e+t)}}class Tm extends Ot{constructor(){super();this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(t){return super.copy(t),this.instanceCount=t.instanceCount,this}clone(){return new this.constructor().copy(this)}toJSON(){const t=super.toJSON(this);return t.instanceCount=this.instanceCount,t.isInstancedBufferGeometry=!0,t}}Tm.prototype.isInstancedBufferGeometry=!0;class Dm extends bn{constructor(t){super(t);typeof createImageBitmap=="undefined"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch=="undefined"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(t){return this.options=t,this}load(t,e,n,i){t===void 0&&(t=""),this.path!==void 0&&(t=this.path+t),t=this.manager.resolveURL(t);const r=this,a=ri.get(t);if(a!==void 0)return r.manager.itemStart(t),setTimeout(function(){e&&e(a),r.manager.itemEnd(t)},0),a;const o={};o.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",o.headers=this.requestHeader,fetch(t,o).then(function(l){return l.blob()}).then(function(l){return createImageBitmap(l,Object.assign(r.options,{colorSpaceConversion:"none"}))}).then(function(l){ri.add(t,l),e&&e(l),r.manager.itemEnd(t)}).catch(function(l){i&&i(l),r.manager.itemError(t),r.manager.itemEnd(t)}),r.manager.itemStart(t)}}Dm.prototype.isImageBitmapLoader=!0;let Rs;const zm={getContext:function(){return Rs===void 0&&(Rs=new(window.AudioContext||window.webkitAudioContext)),Rs},setContext:function(s){Rs=s}};class Em extends bn{constructor(t){super(t)}load(t,e,n,i){const r=this,a=new Mm(this.manager);a.setResponseType("arraybuffer"),a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(t,function(o){try{const l=o.slice(0);zm.getContext().decodeAudioData(l,function(d){e(d)})}catch(l){i?i(l):console.error(l),r.manager.itemError(t)}},n,i)}}class Hm extends Hr{constructor(t,e,n=1){super(void 0,n);const i=new D().set(t),r=new D().set(e),a=new R(i.r,i.g,i.b),o=new R(r.r,r.g,r.b),l=Math.sqrt(Math.PI),c=l*Math.sqrt(.75);this.sh.coefficients[0].copy(a).add(o).multiplyScalar(l),this.sh.coefficients[1].copy(a).sub(o).multiplyScalar(c)}}Hm.prototype.isHemisphereLightProbe=!0;class Um extends Hr{constructor(t,e=1){super(void 0,e);const n=new D().set(t);this.sh.coefficients[0].set(n.r,n.g,n.b).multiplyScalar(2*Math.sqrt(Math.PI))}}Um.prototype.isAmbientLightProbe=!0;class km extends Ht{constructor(t){super();this.type="Audio",this.listener=t,this.context=t.context,this.gain=this.context.createGain(),this.gain.connect(t.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(t){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=t,this.connect(),this}setMediaElementSource(t){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(t),this.connect(),this}setMediaStreamSource(t){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(t),this.connect(),this}setBuffer(t){return this.buffer=t,this.sourceType="buffer",this.autoplay&&this.play(),this}play(t=0){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+t;const e=this.context.createBufferSource();return e.buffer=this.buffer,e.loop=this.loop,e.loopStart=this.loopStart,e.loopEnd=this.loopEnd,e.onended=this.onEnded.bind(this),e.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=e,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let t=1,e=this.filters.length;t<e;t++)this.filters[t-1].connect(this.filters[t]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let t=1,e=this.filters.length;t<e;t++)this.filters[t-1].disconnect(this.filters[t]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(t){return t||(t=[]),this._connected===!0?(this.disconnect(),this.filters=t.slice(),this.connect()):this.filters=t.slice(),this}setDetune(t){if(this.detune=t,this.source.detune!==void 0)return this.isPlaying===!0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(t){return this.setFilters(t?[t]:[])}setPlaybackRate(t){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=t,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(t){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=t,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(t){return this.loopStart=t,this}setLoopEnd(t){return this.loopEnd=t,this}getVolume(){return this.gain.gain.value}setVolume(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this}}class Pm{constructor(t,e,n){this.binding=t,this.valueSize=n;let i,r,a;switch(e){case"quaternion":i=this._slerp,r=this._slerpAdditive,a=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(n*6),this._workIndex=5;break;case"string":case"bool":i=this._select,r=this._select,a=this._setAdditiveIdentityOther,this.buffer=new Array(n*5);break;default:i=this._lerp,r=this._lerpAdditive,a=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(n*5)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=r,this._setIdentity=a,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(t,e){const n=this.buffer,i=this.valueSize,r=t*i+i;let a=this.cumulativeWeight;if(a===0){for(let o=0;o!==i;++o)n[r+o]=n[o];a=e}else{a+=e;const o=e/a;this._mixBufferRegion(n,r,0,o,i)}this.cumulativeWeight=a}accumulateAdditive(t){const e=this.buffer,n=this.valueSize,i=n*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(e,i,0,t,n),this.cumulativeWeightAdditive+=t}apply(t){const e=this.valueSize,n=this.buffer,i=t*e+e,r=this.cumulativeWeight,a=this.cumulativeWeightAdditive,o=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,r<1){const l=e*this._origIndex;this._mixBufferRegion(n,i,l,1-r,e)}a>0&&this._mixBufferRegionAdditive(n,i,this._addIndex*e,1,e);for(let l=e,c=e+e;l!==c;++l)if(n[l]!==n[l+e]){o.setValue(n,i);break}}saveOriginalState(){const t=this.binding,e=this.buffer,n=this.valueSize,i=n*this._origIndex;t.getValue(e,i);for(let r=n,a=i;r!==a;++r)e[r]=e[i+r%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const t=this.valueSize*3;this.binding.setValue(this.buffer,t)}_setAdditiveIdentityNumeric(){const t=this._addIndex*this.valueSize,e=t+this.valueSize;for(let n=t;n<e;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const t=this._origIndex*this.valueSize,e=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[e+n]=this.buffer[t+n]}_select(t,e,n,i,r){if(i>=.5)for(let a=0;a!==r;++a)t[e+a]=t[n+a]}_slerp(t,e,n,i){ve.slerpFlat(t,e,t,e,t,n,i)}_slerpAdditive(t,e,n,i,r){const a=this._workIndex*r;ve.multiplyQuaternionsFlat(t,a,t,e,t,n),ve.slerpFlat(t,e,t,e,t,a,i)}_lerp(t,e,n,i,r){const a=1-i;for(let o=0;o!==r;++o){const l=e+o;t[l]=t[l]*a+t[n+o]*i}}_lerpAdditive(t,e,n,i,r){for(let a=0;a!==r;++a){const o=e+a;t[o]=t[o]+t[n+a]*i}}}const Ur="\\[\\]\\.:\\/",Lm=new RegExp("["+Ur+"]","g"),kr="[^"+Ur+"]",Qm="[^"+Ur.replace("\\.","")+"]",jm=/((?:WC+[\/:])*)/.source.replace("WC",kr),Om=/(WCOD+)?/.source.replace("WCOD",Qm),Km=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",kr),qm=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",kr),$m=new RegExp("^"+jm+Om+Km+qm+"$"),tp=["material","materials","bones"];class ep{constructor(t,e,n){const i=n||Lt.parseTrackName(e);this._targetGroup=t,this._bindings=t.subscribe_(e,i)}getValue(t,e){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];i!==void 0&&i.getValue(t,e)}setValue(t,e){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,r=n.length;i!==r;++i)n[i].setValue(t,e)}bind(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].bind()}unbind(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].unbind()}}class Lt{constructor(t,e,n){this.path=e,this.parsedPath=n||Lt.parseTrackName(e),this.node=Lt.findNode(t,this.parsedPath.nodeName)||t,this.rootNode=t,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(t,e,n){return t&&t.isAnimationObjectGroup?new Lt.Composite(t,e,n):new Lt(t,e,n)}static sanitizeNodeName(t){return t.replace(/\s/g,"_").replace(Lm,"")}static parseTrackName(t){const e=$m.exec(t);if(e===null)throw new Error("PropertyBinding: Cannot parse trackName: "+t);const n={nodeName:e[2],objectName:e[3],objectIndex:e[4],propertyName:e[5],propertyIndex:e[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(i!==void 0&&i!==-1){const r=n.nodeName.substring(i+1);tp.indexOf(r)!==-1&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=r)}if(n.propertyName===null||n.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+t);return n}static findNode(t,e){if(e===void 0||e===""||e==="."||e===-1||e===t.name||e===t.uuid)return t;if(t.skeleton){const n=t.skeleton.getBoneByName(e);if(n!==void 0)return n}if(t.children){const n=function(r){for(let a=0;a<r.length;a++){const o=r[a];if(o.name===e||o.uuid===e)return o;const l=n(o.children);if(l)return l}return null},i=n(t.children);if(i)return i}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(t,e){t[e]=this.targetObject[this.propertyName]}_getValue_array(t,e){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)t[e++]=n[i]}_getValue_arrayElement(t,e){t[e]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(t,e){this.resolvedProperty.toArray(t,e)}_setValue_direct(t,e){this.targetObject[this.propertyName]=t[e]}_setValue_direct_setNeedsUpdate(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(t,e){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=t[e++]}_setValue_array_setNeedsUpdate(t,e){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=t[e++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(t,e){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=t[e++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(t,e){this.resolvedProperty[this.propertyIndex]=t[e]}_setValue_arrayElement_setNeedsUpdate(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(t,e){this.resolvedProperty.fromArray(t,e)}_setValue_fromArray_setNeedsUpdate(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(t,e){this.bind(),this.getValue(t,e)}_setValue_unbound(t,e){this.bind(),this.setValue(t,e)}bind(){let t=this.node;const e=this.parsedPath,n=e.objectName,i=e.propertyName;let r=e.propertyIndex;if(t||(t=Lt.findNode(this.rootNode,e.nodeName)||this.rootNode,this.node=t),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!t){console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");return}if(n){let c=e.objectIndex;switch(n){case"materials":if(!t.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!t.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}t=t.material.materials;break;case"bones":if(!t.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}t=t.skeleton.bones;for(let d=0;d<t.length;d++)if(t[d].name===c){c=d;break}break;default:if(t[n]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}t=t[n]}if(c!==void 0){if(t[c]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,t);return}t=t[c]}}const a=t[i];if(a===void 0){const c=e.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+c+"."+i+" but it wasn't found.",t);return}let o=this.Versioning.None;this.targetObject=t,t.needsUpdate!==void 0?o=this.Versioning.NeedsUpdate:t.matrixWorldNeedsUpdate!==void 0&&(o=this.Versioning.MatrixWorldNeedsUpdate);let l=this.BindingType.Direct;if(r!==void 0){if(i==="morphTargetInfluences"){if(!t.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(t.geometry.isBufferGeometry){if(!t.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}t.morphTargetDictionary[r]!==void 0&&(r=t.morphTargetDictionary[r])}else{console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.",this);return}}l=this.BindingType.ArrayElement,this.resolvedProperty=a,this.propertyIndex=r}else a.fromArray!==void 0&&a.toArray!==void 0?(l=this.BindingType.HasFromToArray,this.resolvedProperty=a):Array.isArray(a)?(l=this.BindingType.EntireArray,this.resolvedProperty=a):this.propertyName=i;this.getValue=this.GetterByBindingType[l],this.setValue=this.SetterByBindingTypeAndVersioning[l][o]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}Lt.Composite=ep,Lt.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Lt.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},Lt.prototype.GetterByBindingType=[Lt.prototype._getValue_direct,Lt.prototype._getValue_array,Lt.prototype._getValue_arrayElement,Lt.prototype._getValue_toArray],Lt.prototype.SetterByBindingTypeAndVersioning=[[Lt.prototype._setValue_direct,Lt.prototype._setValue_direct_setNeedsUpdate,Lt.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[Lt.prototype._setValue_array,Lt.prototype._setValue_array_setNeedsUpdate,Lt.prototype._setValue_array_setMatrixWorldNeedsUpdate],[Lt.prototype._setValue_arrayElement,Lt.prototype._setValue_arrayElement_setNeedsUpdate,Lt.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[Lt.prototype._setValue_fromArray,Lt.prototype._setValue_fromArray_setNeedsUpdate,Lt.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class np{constructor(t,e,n=null,i=e.blendMode){this._mixer=t,this._clip=e,this._localRoot=n,this.blendMode=i;const r=e.tracks,a=r.length,o=new Array(a),l={endingStart:2400,endingEnd:2400};for(let c=0;c!==a;++c){const d=r[c].createInterpolant(null);o[c]=d,d.settings=l}this._interpolantSettings=l,this._interpolants=o,this._propertyBindings=new Array(a),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=2201,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(t){return this._startTime=t,this}setLoop(t,e){return this.loop=t,this.repetitions=e,this}setEffectiveWeight(t){return this.weight=t,this._effectiveWeight=this.enabled?t:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(t){return this._scheduleFading(t,0,1)}fadeOut(t){return this._scheduleFading(t,1,0)}crossFadeFrom(t,e,n){if(t.fadeOut(e),this.fadeIn(e),n){const i=this._clip.duration,r=t._clip.duration,a=r/i,o=i/r;t.warp(1,a,e),this.warp(o,1,e)}return this}crossFadeTo(t,e,n){return t.crossFadeFrom(this,e,n)}stopFading(){const t=this._weightInterpolant;return t!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}setEffectiveTimeScale(t){return this.timeScale=t,this._effectiveTimeScale=this.paused?0:t,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(t){return this.timeScale=this._clip.duration/t,this.stopWarping()}syncWith(t){return this.time=t.time,this.timeScale=t.timeScale,this.stopWarping()}halt(t){return this.warp(this._effectiveTimeScale,0,t)}warp(t,e,n){const i=this._mixer,r=i.time,a=this.timeScale;let o=this._timeScaleInterpolant;o===null&&(o=i._lendControlInterpolant(),this._timeScaleInterpolant=o);const l=o.parameterPositions,c=o.sampleValues;return l[0]=r,l[1]=r+n,c[0]=t/a,c[1]=e/a,this}stopWarping(){const t=this._timeScaleInterpolant;return t!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(t,e,n,i){if(!this.enabled){this._updateWeight(t);return}const r=this._startTime;if(r!==null){const l=(t-r)*n;if(l<0||n===0)return;this._startTime=null,e=n*l}e*=this._updateTimeScale(t);const a=this._updateTime(e),o=this._updateWeight(t);if(o>0){const l=this._interpolants,c=this._propertyBindings;switch(this.blendMode){case 2501:for(let d=0,h=l.length;d!==h;++d)l[d].evaluate(a),c[d].accumulateAdditive(o);break;case 2500:default:for(let d=0,h=l.length;d!==h;++d)l[d].evaluate(a),c[d].accumulate(i,o)}}}_updateWeight(t){let e=0;if(this.enabled){e=this.weight;const n=this._weightInterpolant;if(n!==null){const i=n.evaluate(t)[0];e*=i,t>n.parameterPositions[1]&&(this.stopFading(),i===0&&(this.enabled=!1))}}return this._effectiveWeight=e,e}_updateTimeScale(t){let e=0;if(!this.paused){e=this.timeScale;const n=this._timeScaleInterpolant;n!==null&&(e*=n.evaluate(t)[0],t>n.parameterPositions[1]&&(this.stopWarping(),e===0?this.paused=!0:this.timeScale=e))}return this._effectiveTimeScale=e,e}_updateTime(t){const e=this._clip.duration,n=this.loop;let i=this.time+t,r=this._loopCount;const a=n===2202;if(t===0)return r===-1?i:a&&(r&1)===1?e-i:i;if(n===2200){r===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));t:{if(i>=e)i=e;else if(i<0)i=0;else{this.time=i;break t}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:t<0?-1:1})}}else{if(r===-1&&(t>=0?(r=0,this._setEndings(!0,this.repetitions===0,a)):this._setEndings(this.repetitions===0,!0,a)),i>=e||i<0){const o=Math.floor(i/e);i-=e*o,r+=Math.abs(o);const l=this.repetitions-r;if(l<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,i=t>0?e:0,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:t>0?1:-1});else{if(l===1){const c=t<0;this._setEndings(c,!c,a)}else this._setEndings(!1,!1,a);this._loopCount=r,this.time=i,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:o})}}else this.time=i;if(a&&(r&1)===1)return e-i}return i}_setEndings(t,e,n){const i=this._interpolantSettings;n?(i.endingStart=2401,i.endingEnd=2401):(t?i.endingStart=this.zeroSlopeAtStart?2401:2400:i.endingStart=2402,e?i.endingEnd=this.zeroSlopeAtEnd?2401:2400:i.endingEnd=2402)}_scheduleFading(t,e,n){const i=this._mixer,r=i.time;let a=this._weightInterpolant;a===null&&(a=i._lendControlInterpolant(),this._weightInterpolant=a);const o=a.parameterPositions,l=a.sampleValues;return o[0]=r,l[0]=e,o[1]=r+t,l[1]=n,this}}class ip extends Oe{constructor(t){super();this._root=t,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(t,e){const n=t._localRoot||this._root,i=t._clip.tracks,r=i.length,a=t._propertyBindings,o=t._interpolants,l=n.uuid,c=this._bindingsByRootAndName;let d=c[l];d===void 0&&(d={},c[l]=d);for(let h=0;h!==r;++h){const u=i[h],m=u.name;let b=d[m];if(b!==void 0)++b.referenceCount,a[h]=b;else{if(b=a[h],b!==void 0){b._cacheIndex===null&&(++b.referenceCount,this._addInactiveBinding(b,l,m));continue}const g=e&&e._propertyBindings[h].binding.parsedPath;b=new Pm(Lt.create(n,m,g),u.ValueTypeName,u.getValueSize()),++b.referenceCount,this._addInactiveBinding(b,l,m),a[h]=b}o[h].resultBuffer=b.buffer}}_activateAction(t){if(!this._isActiveAction(t)){if(t._cacheIndex===null){const n=(t._localRoot||this._root).uuid,i=t._clip.uuid,r=this._actionsByClip[i];this._bindAction(t,r&&r.knownActions[0]),this._addInactiveAction(t,i,n)}const e=t._propertyBindings;for(let n=0,i=e.length;n!==i;++n){const r=e[n];r.useCount++===0&&(this._lendBinding(r),r.saveOriginalState())}this._lendAction(t)}}_deactivateAction(t){if(this._isActiveAction(t)){const e=t._propertyBindings;for(let n=0,i=e.length;n!==i;++n){const r=e[n];--r.useCount===0&&(r.restoreOriginalState(),this._takeBackBinding(r))}this._takeBackAction(t)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const t=this;this.stats={actions:{get total(){return t._actions.length},get inUse(){return t._nActiveActions}},bindings:{get total(){return t._bindings.length},get inUse(){return t._nActiveBindings}},controlInterpolants:{get total(){return t._controlInterpolants.length},get inUse(){return t._nActiveControlInterpolants}}}}_isActiveAction(t){const e=t._cacheIndex;return e!==null&&e<this._nActiveActions}_addInactiveAction(t,e,n){const i=this._actions,r=this._actionsByClip;let a=r[e];if(a===void 0)a={knownActions:[t],actionByRoot:{}},t._byClipCacheIndex=0,r[e]=a;else{const o=a.knownActions;t._byClipCacheIndex=o.length,o.push(t)}t._cacheIndex=i.length,i.push(t),a.actionByRoot[n]=t}_removeInactiveAction(t){const e=this._actions,n=e[e.length-1],i=t._cacheIndex;n._cacheIndex=i,e[i]=n,e.pop(),t._cacheIndex=null;const r=t._clip.uuid,a=this._actionsByClip,o=a[r],l=o.knownActions,c=l[l.length-1],d=t._byClipCacheIndex;c._byClipCacheIndex=d,l[d]=c,l.pop(),t._byClipCacheIndex=null;const h=o.actionByRoot,u=(t._localRoot||this._root).uuid;delete h[u],l.length===0&&delete a[r],this._removeInactiveBindingsForAction(t)}_removeInactiveBindingsForAction(t){const e=t._propertyBindings;for(let n=0,i=e.length;n!==i;++n){const r=e[n];--r.referenceCount===0&&this._removeInactiveBinding(r)}}_lendAction(t){const e=this._actions,n=t._cacheIndex,i=this._nActiveActions++,r=e[i];t._cacheIndex=i,e[i]=t,r._cacheIndex=n,e[n]=r}_takeBackAction(t){const e=this._actions,n=t._cacheIndex,i=--this._nActiveActions,r=e[i];t._cacheIndex=i,e[i]=t,r._cacheIndex=n,e[n]=r}_addInactiveBinding(t,e,n){const i=this._bindingsByRootAndName,r=this._bindings;let a=i[e];a===void 0&&(a={},i[e]=a),a[n]=t,t._cacheIndex=r.length,r.push(t)}_removeInactiveBinding(t){const e=this._bindings,n=t.binding,i=n.rootNode.uuid,r=n.path,a=this._bindingsByRootAndName,o=a[i],l=e[e.length-1],c=t._cacheIndex;l._cacheIndex=c,e[c]=l,e.pop(),delete o[r],Object.keys(o).length===0&&delete a[i]}_lendBinding(t){const e=this._bindings,n=t._cacheIndex,i=this._nActiveBindings++,r=e[i];t._cacheIndex=i,e[i]=t,r._cacheIndex=n,e[n]=r}_takeBackBinding(t){const e=this._bindings,n=t._cacheIndex,i=--this._nActiveBindings,r=e[i];t._cacheIndex=i,e[i]=t,r._cacheIndex=n,e[n]=r}_lendControlInterpolant(){const t=this._controlInterpolants,e=this._nActiveControlInterpolants++;let n=t[e];return n===void 0&&(n=new Eo(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),n.__cacheIndex=e,t[e]=n),n}_takeBackControlInterpolant(t){const e=this._controlInterpolants,n=t.__cacheIndex,i=--this._nActiveControlInterpolants,r=e[i];t.__cacheIndex=i,e[i]=t,r.__cacheIndex=n,e[n]=r}clipAction(t,e,n){const i=e||this._root,r=i.uuid;let a=typeof t=="string"?Uo.findByName(i,t):t;const o=a!==null?a.uuid:t,l=this._actionsByClip[o];let c=null;if(n===void 0&&(a!==null?n=a.blendMode:n=2500),l!==void 0){const h=l.actionByRoot[r];if(h!==void 0&&h.blendMode===n)return h;c=l.knownActions[0],a===null&&(a=c._clip)}if(a===null)return null;const d=new np(this,a,e,n);return this._bindAction(d,c),this._addInactiveAction(d,o,r),d}existingAction(t,e){const n=e||this._root,i=n.uuid,r=typeof t=="string"?Uo.findByName(n,t):t,a=r?r.uuid:t,o=this._actionsByClip[a];return o!==void 0&&o.actionByRoot[i]||null}stopAllAction(){const t=this._actions,e=this._nActiveActions;for(let n=e-1;n>=0;--n)t[n].stop();return this}update(t){t*=this.timeScale;const e=this._actions,n=this._nActiveActions,i=this.time+=t,r=Math.sign(t),a=this._accuIndex^=1;for(let c=0;c!==n;++c)e[c]._update(i,t,r,a);const o=this._bindings,l=this._nActiveBindings;for(let c=0;c!==l;++c)o[c].apply(a);return this}setTime(t){this.time=0;for(let e=0;e<this._actions.length;e++)this._actions[e].time=0;return this.update(t)}getRoot(){return this._root}uncacheClip(t){const e=this._actions,n=t.uuid,i=this._actionsByClip,r=i[n];if(r!==void 0){const a=r.knownActions;for(let o=0,l=a.length;o!==l;++o){const c=a[o];this._deactivateAction(c);const d=c._cacheIndex,h=e[e.length-1];c._cacheIndex=null,c._byClipCacheIndex=null,h._cacheIndex=d,e[d]=h,e.pop(),this._removeInactiveBindingsForAction(c)}delete i[n]}}uncacheRoot(t){const e=t.uuid,n=this._actionsByClip;for(const a in n){const o=n[a].actionByRoot,l=o[e];l!==void 0&&(this._deactivateAction(l),this._removeInactiveAction(l))}const i=this._bindingsByRootAndName,r=i[e];if(r!==void 0)for(const a in r){const o=r[a];o.restoreOriginalState(),this._removeInactiveBinding(o)}}uncacheAction(t,e){const n=this.existingAction(t,e);n!==null&&(this._deactivateAction(n),this._removeInactiveAction(n))}}ip.prototype._controlInterpolantsResultBuffer=new Float32Array(1);class sp extends Gi{constructor(t,e,n=1){super(t,e);this.meshPerAttribute=n}copy(t){return super.copy(t),this.meshPerAttribute=t.meshPerAttribute,this}clone(t){const e=super.clone(t);return e.meshPerAttribute=this.meshPerAttribute,e}toJSON(t){const e=super.toJSON(t);return e.isInstancedInterleavedBuffer=!0,e.meshPerAttribute=this.meshPerAttribute,e}}sp.prototype.isInstancedInterleavedBuffer=!0;const gn=new R,Ys=new ft,Pr=new ft;class rp extends ps{constructor(t){const e=tl(t),n=new Ot,i=[],r=[],a=new D(0,0,1),o=new D(0,1,0);for(let c=0;c<e.length;c++){const d=e[c];d.parent&&d.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),r.push(a.r,a.g,a.b),r.push(o.r,o.g,o.b))}n.setAttribute("position",new he(i,3)),n.setAttribute("color",new he(r,3));const l=new Mn({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(n,l);this.type="SkeletonHelper",this.isSkeletonHelper=!0,this.root=t,this.bones=e,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(t){const e=this.bones,n=this.geometry,i=n.getAttribute("position");Pr.copy(this.root.matrixWorld).invert();for(let r=0,a=0;r<e.length;r++){const o=e[r];o.parent&&o.parent.isBone&&(Ys.multiplyMatrices(Pr,o.matrixWorld),gn.setFromMatrixPosition(Ys),i.setXYZ(a,gn.x,gn.y,gn.z),Ys.multiplyMatrices(Pr,o.parent.matrixWorld),gn.setFromMatrixPosition(Ys),i.setXYZ(a+1,gn.x,gn.y,gn.z),a+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(t)}}function tl(s){const t=[];s.isBone===!0&&t.push(s);for(let e=0;e<s.children.length;e++)t.push.apply(t,tl(s.children[e]));return t}class ap extends ps{constructor(t=10,e=10,n=4473924,i=8947848){n=new D(n),i=new D(i);const r=e/2,a=t/e,o=t/2,l=[],c=[];for(let u=0,m=0,b=-o;u<=e;u++,b+=a){l.push(-o,0,b,o,0,b),l.push(b,0,-o,b,0,o);const g=u===r?n:i;g.toArray(c,m),m+=3,g.toArray(c,m),m+=3,g.toArray(c,m),m+=3,g.toArray(c,m),m+=3}const d=new Ot;d.setAttribute("position",new he(l,3)),d.setAttribute("color",new he(c,3));const h=new Mn({vertexColors:!0,toneMapped:!1});super(d,h);this.type="GridHelper"}}const op=new Float32Array(1);new Int32Array(op.buffer),Ie.create=function(s,t){return console.log("THREE.Curve.create() has been deprecated"),s.prototype=Object.create(Ie.prototype),s.prototype.constructor=s,s.prototype.getPoint=t,s},Cr.prototype.fromPoints=function(s){return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(s)},ap.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")},rp.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")},bn.prototype.extractUrlBase=function(s){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),Jm.extractUrlBase(s)},bn.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}},ae.prototype.center=function(s){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(s)},ae.prototype.empty=function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()},ae.prototype.isIntersectionBox=function(s){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(s)},ae.prototype.isIntersectionSphere=function(s){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(s)},ae.prototype.size=function(s){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(s)},Yn.prototype.toVector3=function(){console.error("THREE.Euler: .toVector3() has been removed. Use Vector3.setFromEuler() instead")},Re.prototype.empty=function(){return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."),this.isEmpty()},bi.prototype.setFromMatrix=function(s){return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."),this.setFromProjectionMatrix(s)},fe.prototype.flattenToArrayOffset=function(s,t){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(s,t)},fe.prototype.multiplyVector3=function(s){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),s.applyMatrix3(this)},fe.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")},fe.prototype.applyToBufferAttribute=function(s){return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."),s.applyMatrix3(this)},fe.prototype.applyToVector3Array=function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")},fe.prototype.getInverse=function(s){return console.warn("THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(s).invert()},ft.prototype.extractPosition=function(s){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(s)},ft.prototype.flattenToArrayOffset=function(s,t){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(s,t)},ft.prototype.getPosition=function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),new R().setFromMatrixColumn(this,3)},ft.prototype.setRotationFromQuaternion=function(s){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(s)},ft.prototype.multiplyToArray=function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")},ft.prototype.multiplyVector3=function(s){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),s.applyMatrix4(this)},ft.prototype.multiplyVector4=function(s){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),s.applyMatrix4(this)},ft.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")},ft.prototype.rotateAxis=function(s){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),s.transformDirection(this)},ft.prototype.crossVector=function(s){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),s.applyMatrix4(this)},ft.prototype.translate=function(){console.error("THREE.Matrix4: .translate() has been removed.")},ft.prototype.rotateX=function(){console.error("THREE.Matrix4: .rotateX() has been removed.")},ft.prototype.rotateY=function(){console.error("THREE.Matrix4: .rotateY() has been removed.")},ft.prototype.rotateZ=function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},ft.prototype.rotateByAxis=function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},ft.prototype.applyToBufferAttribute=function(s){return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."),s.applyMatrix4(this)},ft.prototype.applyToVector3Array=function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")},ft.prototype.makeFrustum=function(s,t,e,n,i,r){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(s,t,n,e,i,r)},ft.prototype.getInverse=function(s){return console.warn("THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(s).invert()},nn.prototype.isIntersectionLine=function(s){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(s)},ve.prototype.multiplyVector3=function(s){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),s.applyQuaternion(this)},ve.prototype.inverse=function(){return console.warn("THREE.Quaternion: .inverse() has been renamed to invert()."),this.invert()},_n.prototype.isIntersectionBox=function(s){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(s)},_n.prototype.isIntersectionPlane=function(s){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(s)},_n.prototype.isIntersectionSphere=function(s){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(s)},oe.prototype.area=function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()},oe.prototype.barycoordFromPoint=function(s,t){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(s,t)},oe.prototype.midpoint=function(s){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(s)},oe.prototypenormal=function(s){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(s)},oe.prototype.plane=function(s){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(s)},oe.barycoordFromPoint=function(s,t,e,n,i){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),oe.getBarycoord(s,t,e,n,i)},oe.normal=function(s,t,e,n){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),oe.getNormal(s,t,e,n)},Xi.prototype.extractAllPoints=function(s){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(s)},Xi.prototype.extrude=function(s){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new ni(this,s)},Xi.prototype.makeGeometry=function(s){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new Jr(this,s)},q.prototype.fromAttribute=function(s,t,e){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(s,t,e)},q.prototype.distanceToManhattan=function(s){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(s)},q.prototype.lengthManhattan=function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},R.prototype.setEulerFromRotationMatrix=function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},R.prototype.setEulerFromQuaternion=function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},R.prototype.getPositionFromMatrix=function(s){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(s)},R.prototype.getScaleFromMatrix=function(s){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(s)},R.prototype.getColumnFromMatrix=function(s,t){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(t,s)},R.prototype.applyProjection=function(s){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(s)},R.prototype.fromAttribute=function(s,t,e){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(s,t,e)},R.prototype.distanceToManhattan=function(s){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(s)},R.prototype.lengthManhattan=function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},Mt.prototype.fromAttribute=function(s,t,e){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(s,t,e)},Mt.prototype.lengthManhattan=function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},Ht.prototype.getChildByName=function(s){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(s)},Ht.prototype.renderDepth=function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},Ht.prototype.translate=function(s,t){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(t,s)},Ht.prototype.getWorldRotation=function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")},Ht.prototype.applyMatrix=function(s){return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(s)},Object.defineProperties(Ht.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(s){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=s}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}}),Ye.prototype.setDrawMode=function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")},Object.defineProperties(Ye.prototype,{drawMode:{get:function(){return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),0},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}}),ho.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")},Xe.prototype.setLens=function(s,t){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),t!==void 0&&(this.filmGauge=t),this.setFocalLength(s)},Object.defineProperties(Ee.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(s){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=s}},shadowCameraLeft:{set:function(s){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=s}},shadowCameraRight:{set:function(s){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=s}},shadowCameraTop:{set:function(s){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=s}},shadowCameraBottom:{set:function(s){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=s}},shadowCameraNear:{set:function(s){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=s}},shadowCameraFar:{set:function(s){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=s}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(s){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=s}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(s){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=s}},shadowMapHeight:{set:function(s){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=s}}}),Object.defineProperties(_t.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},dynamic:{get:function(){return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.usage===35048},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.setUsage(35048)}}}),_t.prototype.setDynamic=function(s){return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(s===!0?35048:35044),this},_t.prototype.copyIndicesArray=function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},_t.prototype.setArray=function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")},Ot.prototype.addIndex=function(s){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(s)},Ot.prototype.addAttribute=function(s,t){return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),!(t&&t.isBufferAttribute)&&!(t&&t.isInterleavedBufferAttribute)?(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(s,new _t(arguments[1],arguments[2]))):s==="index"?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(t),this):this.setAttribute(s,t)},Ot.prototype.addDrawCall=function(s,t,e){e!==void 0&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(s,t)},Ot.prototype.clearDrawCalls=function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()},Ot.prototype.computeOffsets=function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")},Ot.prototype.removeAttribute=function(s){return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),this.deleteAttribute(s)},Ot.prototype.applyMatrix=function(s){return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(s)},Object.defineProperties(Ot.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}}),Gi.prototype.setDynamic=function(s){return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(s===!0?35048:35044),this},Gi.prototype.setArray=function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")},ni.prototype.getArrays=function(){console.error("THREE.ExtrudeGeometry: .getArrays() has been removed.")},ni.prototype.addShapeList=function(){console.error("THREE.ExtrudeGeometry: .addShapeList() has been removed.")},ni.prototype.addShape=function(){console.error("THREE.ExtrudeGeometry: .addShape() has been removed.")},Zr.prototype.dispose=function(){console.error("THREE.Scene: .dispose() has been removed.")},Object.defineProperties(ce.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new D}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(s){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=s===1}},stencilMask:{get:function(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask},set:function(s){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=s}},vertexTangents:{get:function(){console.warn("THREE."+this.type+": .vertexTangents has been removed.")},set:function(){console.warn("THREE."+this.type+": .vertexTangents has been removed.")}}}),Object.defineProperties(_e.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(s){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=s}}}),Kt.prototype.clearTarget=function(s,t,e,n){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(s),this.clear(t,e,n)},Kt.prototype.animate=function(s){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(s)},Kt.prototype.getCurrentRenderTarget=function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()},Kt.prototype.getMaxAnisotropy=function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()},Kt.prototype.getPrecision=function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision},Kt.prototype.resetGLState=function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()},Kt.prototype.supportsFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")},Kt.prototype.supportsHalfFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")},Kt.prototype.supportsStandardDerivatives=function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")},Kt.prototype.supportsCompressedTextureS3TC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")},Kt.prototype.supportsCompressedTexturePVRTC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")},Kt.prototype.supportsBlendMinMax=function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")},Kt.prototype.supportsVertexTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures},Kt.prototype.supportsInstancedArrays=function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")},Kt.prototype.enableScissorTest=function(s){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(s)},Kt.prototype.initMaterial=function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},Kt.prototype.addPrePlugin=function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},Kt.prototype.addPostPlugin=function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},Kt.prototype.updateShadowMap=function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")},Kt.prototype.setFaceCulling=function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")},Kt.prototype.allocTextureUnit=function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")},Kt.prototype.setTexture=function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")},Kt.prototype.setTexture2D=function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")},Kt.prototype.setTextureCube=function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")},Kt.prototype.getActiveMipMapLevel=function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()},Object.defineProperties(Kt.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(s){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=s}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(s){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=s}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}},vr:{get:function(){return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),this.xr}},gammaInput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),!1},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),!1},set:function(s){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),this.outputEncoding=s===!0?3001:3e3}},toneMappingWhitePoint:{get:function(){return console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."),1},set:function(){console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.")}},gammaFactor:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaFactor has been removed."),2},set:function(){console.warn("THREE.WebGLRenderer: .gammaFactor has been removed.")}}}),Object.defineProperties(to.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}}),Object.defineProperties(ye.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(s){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=s}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(s){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=s}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(s){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=s}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(s){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=s}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(s){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=s}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(s){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=s}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(s){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=s}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(s){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=s}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(s){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=s}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(s){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=s}}}),km.prototype.load=function(s){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");const t=this;return new Em().load(s,function(n){t.setBuffer(n)}),this},rr.prototype.updateCubeMap=function(s,t){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(s,t)},rr.prototype.clear=function(s,t,e,n){return console.warn("THREE.CubeCamera: .clear() is now .renderTarget.clear()."),this.renderTarget.clear(s,t,e,n)},xn.crossOrigin=void 0,xn.loadTexture=function(s,t,e,n){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");const i=new Fm;i.setCrossOrigin(this.crossOrigin);const r=i.load(s,e,void 0,n);return t&&(r.mapping=t),r},xn.loadTextureCube=function(s,t,e,n){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");const i=new Nm;i.setCrossOrigin(this.crossOrigin);const r=i.load(s,e,void 0,n);return t&&(r.mapping=t),r},xn.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},xn.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")},typeof __THREE_DEVTOOLS__!="undefined"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:yn}})),typeof window!="undefined"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=yn);class el{constructor(t,e){this.loader=t,this.boundingBox=e,this.url=null,this.pointAttributes=null,this.spacing=0,this.numNodesLoading=0,this.maxNumNodesLoading=3,this.disposed=!1,this.tightBoundingBox=this.boundingBox.clone(),this.boundingSphere=this.boundingBox.getBoundingSphere(new Re),this.tightBoundingSphere=this.boundingBox.getBoundingSphere(new Re)}dispose(){this.root.traverse(t=>t.dispose()),this.disposed=!0}}const nl=0,il=0,sl=1,lp=50,cp=50,dp=2,hp=15,up=1e6,rl=2,mp=4,al="PerspectiveCamera",pp=new D(0,0,0),fp=new Mt(1,0,0,1);var Zn=(s=>(s[s.DISABLED=0]="DISABLED",s[s.CLIP_OUTSIDE=1]="CLIP_OUTSIDE",s[s.HIGHLIGHT_INSIDE=2]="HIGHLIGHT_INSIDE",s))(Zn||{}),ai=(s=>(s[s.FIXED=0]="FIXED",s[s.ATTENUATED=1]="ATTENUATED",s[s.ADAPTIVE=2]="ADAPTIVE",s))(ai||{}),Ii=(s=>(s[s.SQUARE=0]="SQUARE",s[s.CIRCLE=1]="CIRCLE",s[s.PARABOLOID=2]="PARABOLOID",s))(Ii||{}),Bi=(s=>(s[s.OCTREE=0]="OCTREE",s[s.KDTREE=1]="KDTREE",s))(Bi||{}),Xs=(s=>(s[s.FIXED=0]="FIXED",s[s.ATTENUATED=1]="ATTENUATED",s))(Xs||{}),de=(s=>(s[s.RGB=0]="RGB",s[s.COLOR=1]="COLOR",s[s.DEPTH=2]="DEPTH",s[s.HEIGHT=3]="HEIGHT",s[s.ELEVATION=3]="ELEVATION",s[s.INTENSITY=4]="INTENSITY",s[s.INTENSITY_GRADIENT=5]="INTENSITY_GRADIENT",s[s.LOD=6]="LOD",s[s.LEVEL_OF_DETAIL=6]="LEVEL_OF_DETAIL",s[s.POINT_INDEX=7]="POINT_INDEX",s[s.CLASSIFICATION=8]="CLASSIFICATION",s[s.RETURN_NUMBER=9]="RETURN_NUMBER",s[s.SOURCE=10]="SOURCE",s[s.NORMAL=11]="NORMAL",s[s.PHONG=12]="PHONG",s[s.RGB_HEIGHT=13]="RGB_HEIGHT",s[s.COMPOSITE=50]="COMPOSITE",s))(de||{}),bp=`#version 300 es

precision highp float;\r
precision highp int;

#define max_clip_boxes 30

in vec3 position;\r
in vec3 normal;\r
in float intensity;\r
in float classification;\r
in float returnNumber;\r
in float numberOfReturns;\r
in float pointSourceID;\r
in vec4 indices;

uniform mat4 modelMatrix;\r
uniform mat4 modelViewMatrix;\r
uniform mat4 projectionMatrix;\r
uniform mat4 viewMatrix;\r
uniform mat3 normalMatrix;

uniform float pcIndex;

uniform float screenWidth;\r
uniform float screenHeight;\r
uniform float fov;\r
uniform float spacing;

#if defined use_clip_box\r
	uniform mat4 clipBoxes[max_clip_boxes];\r
#endif

uniform float heightMin;\r
uniform float heightMax;\r
uniform float size; 
uniform float minSize; 
uniform float maxSize; 
uniform float octreeSize;\r
uniform vec3 bbSize;\r
uniform vec3 uColor;\r
uniform float opacity;\r
uniform float clipBoxCount;\r
uniform float level;\r
uniform float vnStart;\r
uniform bool isLeafNode;

uniform float filterByNormalThreshold;\r
uniform vec2 intensityRange;\r
uniform float opacityAttenuation;\r
uniform float intensityGamma;\r
uniform float intensityContrast;\r
uniform float intensityBrightness;\r
uniform float rgbGamma;\r
uniform float rgbContrast;\r
uniform float rgbBrightness;\r
uniform float transition;\r
uniform float wRGB;\r
uniform float wIntensity;\r
uniform float wElevation;\r
uniform float wClassification;\r
uniform float wReturnNumber;\r
uniform float wSourceID;

uniform sampler2D visibleNodes;\r
uniform sampler2D gradient;\r
uniform sampler2D classificationLUT;\r
uniform sampler2D depthMap;

#ifdef highlight_point\r
	uniform vec3 highlightedPointCoordinate;\r
	uniform bool enablePointHighlighting;\r
	uniform float highlightedPointScale;\r
#endif

#ifdef new_format\r
	in vec4 rgba;\r
	out vec4 vColor;\r
#else\r
	in vec3 color;\r
	out vec3 vColor;\r
#endif

#if !defined(color_type_point_index)\r
	out float vOpacity;\r
#endif

#if defined(weighted_splats)\r
	out float vLinearDepth;\r
#endif

#if !defined(paraboloid_point_shape) && defined(use_edl)\r
	out float vLogDepth;\r
#endif

#if defined(color_type_phong) && (MAX_POINT_LIGHTS > 0 || MAX_DIR_LIGHTS > 0) || defined(paraboloid_point_shape)\r
	out vec3 vViewPosition;\r
#endif

#if defined(weighted_splats) || defined(paraboloid_point_shape)\r
	out float vRadius;\r
#endif

#if defined(color_type_phong) && (MAX_POINT_LIGHTS > 0 || MAX_DIR_LIGHTS > 0)\r
	out vec3 vNormal;\r
#endif

#ifdef highlight_point\r
	out float vHighlight;\r
#endif\r
 \r

#if (defined(adaptive_point_size) || defined(color_type_lod)) && defined(tree_type_octree)

/**\r
 * Gets the number of 1-bits up to inclusive index position.\r
 * \r
 * number is treated as if it were an integer in the range 0-255\r
 */\r
int numberOfOnes(int number, int index) {\r
	int numOnes = 0;\r
	int tmp = 128;\r
	for (int i = 7; i >= 0; i--) {

		if (number >= tmp) {\r
			number = number - tmp;

			if (i <= index) {\r
				numOnes++;\r
			}\r
		}

		tmp = tmp / 2;\r
	}

	return numOnes;\r
}

/**\r
 * Checks whether the bit at index is 1.0\r
 *\r
 * number is treated as if it were an integer in the range 0-255\r
 */\r
bool isBitSet(int number, int index){

	
	int powi = 1;\r
	if (index == 0) {\r
		powi = 1;\r
	} else if (index == 1) {\r
		powi = 2;\r
	} else if (index == 2) {\r
		powi = 4;\r
	} else if (index == 3) {\r
		powi = 8;\r
	} else if (index == 4) {\r
		powi = 16;\r
	} else if (index == 5) {\r
		powi = 32;\r
	} else if (index == 6) {\r
		powi = 64;\r
	} else if (index == 7) {\r
		powi = 128;\r
	}

	int ndp = number / powi;

	return mod(float(ndp), 2.0) != 0.0;\r
}

/**\r
 * Gets the the LOD at the point position.\r
 */\r
float getLOD() {\r
	vec3 offset = vec3(0.0, 0.0, 0.0);\r
	int iOffset = int(vnStart);\r
	float depth = level;

	for (float i = 0.0; i <= 30.0; i++) {\r
		float nodeSizeAtLevel = octreeSize  / pow(2.0, i + level + 0.0);\r
		\r
		vec3 index3d = (position-offset) / nodeSizeAtLevel;\r
		index3d = floor(index3d + 0.5);\r
		int index = int(round(4.0 * index3d.x + 2.0 * index3d.y + index3d.z));\r
		\r
		vec4 value = texture(visibleNodes, vec2(float(iOffset) / 2048.0, 0.0));\r
		int mask = int(round(value.r * 255.0));

		if (isBitSet(mask, index)) {\r
			
			int advanceG = int(round(value.g * 255.0)) * 256;\r
			int advanceB = int(round(value.b * 255.0));\r
			int advanceChild = numberOfOnes(mask, index - 1);\r
			int advance = advanceG + advanceB + advanceChild;

			iOffset = iOffset + advance;

			depth++;\r
		} else {\r
			return value.a * 255.0; 
		}\r
		\r
		offset = offset + (vec3(1.0, 1.0, 1.0) * nodeSizeAtLevel * 0.5) * index3d;  \r
	}\r
		\r
	return depth;\r
}

float getPointSizeAttenuation() {\r
	return 0.5 * pow(2.0, getLOD());\r
}

#endif\r

#if (defined(adaptive_point_size) || defined(color_type_lod)) && defined(tree_type_kdtree)

float getLOD() {\r
	vec3 offset = vec3(0.0, 0.0, 0.0);\r
	float intOffset = 0.0;\r
	float depth = 0.0;\r
			\r
	vec3 size = bbSize;	\r
	vec3 pos = position;\r
		\r
	for (float i = 0.0; i <= 1000.0; i++) {\r
		\r
		vec4 value = texture(visibleNodes, vec2(intOffset / 2048.0, 0.0));\r
		\r
		int children = int(value.r * 255.0);\r
		float next = value.g * 255.0;\r
		int split = int(value.b * 255.0);\r
		\r
		if (next == 0.0) {\r
		 	return depth;\r
		}\r
		\r
		vec3 splitv = vec3(0.0, 0.0, 0.0);\r
		if (split == 1) {\r
			splitv.x = 1.0;\r
		} else if (split == 2) {\r
		 	splitv.y = 1.0;\r
		} else if (split == 4) {\r
		 	splitv.z = 1.0;\r
		}\r
		\r
		intOffset = intOffset + next;\r
		\r
		float factor = length(pos * splitv / size);\r
		if (factor < 0.5) {\r
		 	
			if (children == 0 || children == 2) {\r
				return depth;\r
			}\r
		} else {\r
			
			pos = pos - size * splitv * 0.5;\r
			if (children == 0 || children == 1) {\r
				return depth;\r
			}\r
			if (children == 3) {\r
				intOffset = intOffset + 1.0;\r
			}\r
		}\r
		size = size * ((1.0 - (splitv + 1.0) / 2.0) + 0.5);\r
		\r
		depth++;\r
	}\r
		\r
		\r
	return depth;	\r
}

float getPointSizeAttenuation() {\r
	return 0.5 * pow(1.3, getLOD());\r
}

#endif

float getContrastFactor(float contrast) {\r
	return (1.0158730158730156 * (contrast + 1.0)) / (1.0158730158730156 - contrast);\r
}

#ifndef new_format

vec3 getRGB() {\r
	#if defined(use_rgb_gamma_contrast_brightness)\r
	  vec3 rgb = color;\r
		rgb = pow(rgb, vec3(rgbGamma));\r
		rgb = rgb + rgbBrightness;\r
		rgb = (rgb - 0.5) * getContrastFactor(rgbContrast) + 0.5;\r
		rgb = clamp(rgb, 0.0, 1.0);\r
		return rgb;\r
	#else\r
		return color;\r
	#endif\r
}

#endif

float getIntensity() {\r
	float w = (intensity - intensityRange.x) / (intensityRange.y - intensityRange.x);\r
	w = pow(w, intensityGamma);\r
	w = w + intensityBrightness;\r
	w = (w - 0.5) * getContrastFactor(intensityContrast) + 0.5;\r
	w = clamp(w, 0.0, 1.0);\r
	\r
	return w;\r
}

vec3 getElevation() {\r
	vec4 world = modelMatrix * vec4( position, 1.0 );\r
	float w = (world.z - heightMin) / (heightMax-heightMin);\r
	vec3 cElevation = texture(gradient, vec2(w,1.0-w)).rgb;\r
	\r
	return cElevation;\r
}

vec4 getClassification() {\r
	vec2 uv = vec2(classification / 255.0, 0.5);\r
	vec4 classColor = texture(classificationLUT, uv);\r
	\r
	return classColor;\r
}

vec3 getReturnNumber() {\r
	if (numberOfReturns == 1.0) {\r
		return vec3(1.0, 1.0, 0.0);\r
	} else {\r
		if (returnNumber == 1.0) {\r
			return vec3(1.0, 0.0, 0.0);\r
		} else if (returnNumber == numberOfReturns) {\r
			return vec3(0.0, 0.0, 1.0);\r
		} else {\r
			return vec3(0.0, 1.0, 0.0);\r
		}\r
	}\r
}

vec3 getSourceID() {\r
	float w = mod(pointSourceID, 10.0) / 10.0;\r
	return texture(gradient, vec2(w, 1.0 - w)).rgb;\r
}

#ifndef new_format

vec3 getCompositeColor() {\r
	vec3 c;\r
	float w;

	c += wRGB * getRGB();\r
	w += wRGB;\r
	\r
	c += wIntensity * getIntensity() * vec3(1.0, 1.0, 1.0);\r
	w += wIntensity;\r
	\r
	c += wElevation * getElevation();\r
	w += wElevation;\r
	\r
	c += wReturnNumber * getReturnNumber();\r
	w += wReturnNumber;\r
	\r
	c += wSourceID * getSourceID();\r
	w += wSourceID;\r
	\r
	vec4 cl = wClassification * getClassification();\r
	c += cl.a * cl.rgb;\r
	w += wClassification * cl.a;

	c = c / w;\r
	\r
	if (w == 0.0) {\r
		gl_Position = vec4(100.0, 100.0, 100.0, 0.0);\r
	}\r
	\r
	return c;\r
}

#endif

#ifdef new_format\r
	vec4 fromLinear(vec4 linearRGB) {\r
		bvec4 cutoff = lessThan(linearRGB, vec4(0.0031308));\r
		vec4 higher = vec4(1.055)*pow(linearRGB, vec4(1.0/2.4)) - vec4(0.055);\r
		vec4 lower = linearRGB * vec4(12.92);\r
		return mix(higher, lower, cutoff);\r
	} \r
	vec4 toLinear(vec4 sRGB) {\r
		bvec4 cutoff = lessThan(sRGB, vec4(0.04045));\r
		vec4 higher = pow((sRGB + vec4(0.055))/vec4(1.055), vec4(2.4));\r
		vec4 lower = sRGB/vec4(12.92);\r
		return mix(higher, lower, cutoff);\r
	}\r
#else\r
	vec3 fromLinear(vec3 linearRGB) {\r
		bvec3 cutoff = lessThan(linearRGB, vec3(0.0031308));\r
		vec3 higher = vec3(1.055)*pow(linearRGB, vec3(1.0/2.4)) - vec3(0.055);\r
		vec3 lower = linearRGB * vec3(12.92);\r
		return mix(higher, lower, cutoff);\r
	}\r
	vec3 toLinear(vec3 sRGB) {\r
		bvec3 cutoff = lessThan(sRGB, vec3(0.04045));\r
		vec3 higher = pow((sRGB + vec3(0.055))/vec3(1.055), vec3(2.4));\r
		vec3 lower = sRGB/vec3(12.92);\r
		return mix(higher, lower, cutoff);\r
	}\r
#endif\r

void main() {\r
	vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);

	gl_Position = projectionMatrix * mvPosition;

	#if defined(color_type_phong) && (MAX_POINT_LIGHTS > 0 || MAX_DIR_LIGHTS > 0) || defined(paraboloid_point_shape)\r
		vViewPosition = mvPosition.xyz;\r
	#endif

	#if defined weighted_splats\r
		vLinearDepth = gl_Position.w;\r
	#endif

	#if defined(color_type_phong) && (MAX_POINT_LIGHTS > 0 || MAX_DIR_LIGHTS > 0)\r
		vNormal = normalize(normalMatrix * normal);\r
	#endif

	#if !defined(paraboloid_point_shape) && defined(use_edl)\r
		vLogDepth = log2(-mvPosition.z);\r
	#endif

	
	
	

	float pointSize = 1.0;\r
	float slope = tan(fov / 2.0);\r
	float projFactor =  -0.5 * screenHeight / (slope * mvPosition.z);

	#if defined fixed_point_size\r
		pointSize = size;\r
	#elif defined attenuated_point_size\r
		pointSize = size * spacing * projFactor;\r
	#elif defined adaptive_point_size\r
		float worldSpaceSize = 2.0 * size * spacing / getPointSizeAttenuation();\r
		pointSize = worldSpaceSize * projFactor;\r
	#endif

	pointSize = max(minSize, pointSize);\r
	pointSize = min(maxSize, pointSize);

	#if defined(weighted_splats) || defined(paraboloid_point_shape)\r
		vRadius = pointSize / projFactor;\r
	#endif

	gl_PointSize = pointSize;

	
	
	

	#ifdef highlight_point\r
		vec4 mPosition = modelMatrix * vec4(position, 1.0);\r
		if (enablePointHighlighting && abs(mPosition.x - highlightedPointCoordinate.x) < 0.0001 &&\r
			abs(mPosition.y - highlightedPointCoordinate.y) < 0.0001 &&\r
			abs(mPosition.z - highlightedPointCoordinate.z) < 0.0001) {\r
			vHighlight = 1.0;\r
			gl_PointSize = pointSize * highlightedPointScale;\r
		} else {\r
			vHighlight = 0.0;\r
		}\r
	#endif

	
	
	

	#ifndef color_type_point_index\r
		#ifdef attenuated_opacity\r
			vOpacity = opacity * exp(-length(-mvPosition.xyz) / opacityAttenuation);\r
		#else\r
			vOpacity = opacity;\r
		#endif\r
	#endif

	
	
	

	#ifdef use_filter_by_normal\r
		if(abs((modelViewMatrix * vec4(normal, 0.0)).z) > filterByNormalThreshold) {\r
			
			gl_Position = vec4(0.0, 0.0, 2.0, 1.0);\r
		}\r
	#endif

	
	
	
	#ifdef new_format\r
		vColor = rgba;\r
	#elif defined color_type_rgb\r
		vColor = getRGB();\r
	#elif defined color_type_height\r
		vColor = getElevation();\r
	#elif defined color_type_rgb_height\r
		vec3 cHeight = getElevation();\r
		vColor = (1.0 - transition) * getRGB() + transition * cHeight;\r
	#elif defined color_type_depth\r
		float linearDepth = -mvPosition.z ;\r
		float expDepth = (gl_Position.z / gl_Position.w) * 0.5 + 0.5;\r
		vColor = vec3(linearDepth, expDepth, 0.0);\r
	#elif defined color_type_intensity\r
		float w = getIntensity();\r
		vColor = vec3(w, w, w);\r
	#elif defined color_type_intensity_gradient\r
		float w = getIntensity();\r
		vColor = texture(gradient, vec2(w, 1.0 - w)).rgb;\r
	#elif defined color_type_color\r
		vColor = uColor;\r
	#elif defined color_type_lod\r
	float w = getLOD() / 10.0;\r
	vColor = texture(gradient, vec2(w, 1.0 - w)).rgb;\r
	#elif defined color_type_point_index\r
		vColor = indices.rgb;\r
	#elif defined color_type_classification\r
	  vec4 cl = getClassification(); \r
		vColor = cl.rgb;\r
	#elif defined color_type_return_number\r
		vColor = getReturnNumber();\r
	#elif defined color_type_source\r
		vColor = getSourceID();\r
	#elif defined color_type_normal\r
		vColor = (modelMatrix * vec4(normal, 0.0)).xyz;\r
	#elif defined color_type_phong\r
		vColor = color;\r
	#elif defined color_type_composite\r
		vColor = getCompositeColor();\r
	#endif\r
	\r
	#if !defined color_type_composite && defined color_type_classification\r
		if (cl.a == 0.0) {\r
			gl_Position = vec4(100.0, 100.0, 100.0, 0.0);\r
			return;\r
		}\r
	#endif

	
	
	

	#if defined use_clip_box\r
		bool insideAny = false;\r
		for (int i = 0; i < max_clip_boxes; i++) {\r
			if (i == int(clipBoxCount)) {\r
				break;\r
			}\r
		\r
			vec4 clipPosition = clipBoxes[i] * modelMatrix * vec4(position, 1.0);\r
			bool inside = -0.5 <= clipPosition.x && clipPosition.x <= 0.5;\r
			inside = inside && -0.5 <= clipPosition.y && clipPosition.y <= 0.5;\r
			inside = inside && -0.5 <= clipPosition.z && clipPosition.z <= 0.5;\r
			insideAny = insideAny || inside;\r
		}

		if (!insideAny) {\r
			#if defined clip_outside\r
				gl_Position = vec4(1000.0, 1000.0, 1000.0, 1.0);\r
			#elif defined clip_highlight_inside && !defined(color_type_depth)\r
				float c = (vColor.r + vColor.g + vColor.b) / 6.0;\r
			#endif\r
		} else {\r
			#if defined clip_highlight_inside\r
				vColor.r += 0.5;\r
			#endif\r
		}\r
	#endif

	
	
	
	
	

	#if defined(output_color_encoding_sRGB) && defined(input_color_encoding_linear)\r
		vColor = toLinear(vColor);\r
	#endif

	#if defined(output_color_encoding_linear) && defined(input_color_encoding_sRGB)\r
		vColor = fromLinear(vColor);\r
	#endif\r
}`,gp=`#version 300 es

precision highp float;\r
precision highp int;

uniform mat4 viewMatrix;\r
uniform vec3 cameraPosition;

uniform mat4 projectionMatrix;\r
uniform float opacity;

uniform float blendHardness;\r
uniform float blendDepthSupplement;\r
uniform float fov;\r
uniform float spacing;\r
uniform float pcIndex;\r
uniform float screenWidth;\r
uniform float screenHeight;

uniform sampler2D depthMap;

out vec4 fragColor;

#ifdef highlight_point\r
	uniform vec4 highlightedPointColor;\r
#endif

#ifdef new_format\r
	in vec4 vColor;\r
#else\r
	in vec3 vColor;\r
#endif

#if !defined(color_type_point_index)\r
	in float vOpacity;\r
#endif

#if defined(weighted_splats)\r
	in float vLinearDepth;\r
#endif

#if !defined(paraboloid_point_shape) && defined(use_edl)\r
	in float vLogDepth;\r
#endif

#if defined(color_type_phong) && (MAX_POINT_LIGHTS > 0 || MAX_DIR_LIGHTS > 0) || defined(paraboloid_point_shape)\r
	in vec3 vViewPosition;\r
#endif

#if defined(weighted_splats) || defined(paraboloid_point_shape)\r
	in float vRadius;\r
#endif

#if defined(color_type_phong) && (MAX_POINT_LIGHTS > 0 || MAX_DIR_LIGHTS > 0)\r
	in vec3 vNormal;\r
#endif

#ifdef highlight_point\r
	in float vHighlight;\r
#endif

float specularStrength = 1.0;

void main() {

	#ifdef new_format\r
		
		vec3 actualColor = vColor.xyz;\r
	#else\r
		
		vec3 actualColor = vColor;\r
	#endif\r
	\r
	vec3 color = actualColor;\r
	float depth = gl_FragCoord.z;

	#if defined(circle_point_shape) || defined(paraboloid_point_shape) || defined (weighted_splats)\r
		float u = 2.0 * gl_PointCoord.x - 1.0;\r
		float v = 2.0 * gl_PointCoord.y - 1.0;\r
	#endif\r
	\r
	#if defined(circle_point_shape) || defined (weighted_splats)\r
		float cc = u*u + v*v;\r
		if(cc > 1.0){\r
			discard;\r
		}\r
	#endif

	#if defined weighted_splats\r
		vec2 uv = gl_FragCoord.xy / vec2(screenWidth, screenHeight);\r
		float sDepth = texture2D(depthMap, uv).r;\r
		if(vLinearDepth > sDepth + vRadius + blendDepthSupplement){\r
			discard;\r
		}\r
	#endif\r
		\r
	#if defined color_type_point_index\r
		fragColor = vec4(color, pcIndex / 255.0);\r
	#else\r
		fragColor = vec4(color, vOpacity);\r
	#endif

	#if defined(color_type_phong)\r
		#if MAX_POINT_LIGHTS > 0 || MAX_DIR_LIGHTS > 0\r
			vec3 normal = normalize( vNormal );\r
			normal.z = abs(normal.z);

			vec3 viewPosition = normalize( vViewPosition );\r
		#endif

		
	\r
		#if MAX_POINT_LIGHTS > 0

			vec3 pointDiffuse = vec3( 0.0 );\r
			vec3 pointSpecular = vec3( 0.0 );

			for ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {

				vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\r
				vec3 lVector = lPosition.xyz + vViewPosition.xyz;

				float lDistance = 1.0;\r
				if ( pointLightDistance[ i ] > 0.0 )\r
					lDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );

				lVector = normalize( lVector );

						

				float dotProduct = dot( normal, lVector );

				#ifdef WRAP_AROUND

					float pointDiffuseWeightFull = max( dotProduct, 0.0 );\r
					float pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );

					vec3 pointDiffuseWeight = mix( vec3( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );

				#else

					float pointDiffuseWeight = max( dotProduct, 0.0 );

				#endif

				pointDiffuse += diffuse * pointLightColor[ i ] * pointDiffuseWeight * lDistance;

				

				vec3 pointHalfVector = normalize( lVector + viewPosition );\r
				float pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\r
				float pointSpecularWeight = specularStrength * max( pow( pointDotNormalHalf, shininess ), 0.0 );

				float specularNormalization = ( shininess + 2.0 ) / 8.0;

				vec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, pointHalfVector ), 0.0 ), 5.0 );\r
				pointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance * specularNormalization;\r
				pointSpecular = vec3(0.0, 0.0, 0.0);\r
			}\r
		\r
		#endif\r
		\r
		#if MAX_DIR_LIGHTS > 0

			vec3 dirDiffuse = vec3( 0.0 );\r
			vec3 dirSpecular = vec3( 0.0 );

			for( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {

				vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\r
				vec3 dirVector = normalize( lDirection.xyz );

						

				float dotProduct = dot( normal, dirVector );

				#ifdef WRAP_AROUND

					float dirDiffuseWeightFull = max( dotProduct, 0.0 );\r
					float dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );

					vec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );

				#else

					float dirDiffuseWeight = max( dotProduct, 0.0 );

				#endif

				dirDiffuse += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;

				

				vec3 dirHalfVector = normalize( dirVector + viewPosition );\r
				float dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\r
				float dirSpecularWeight = specularStrength * max( pow( dirDotNormalHalf, shininess ), 0.0 );

				float specularNormalization = ( shininess + 2.0 ) / 8.0;

				vec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( dirVector, dirHalfVector ), 0.0 ), 5.0 );\r
				dirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\r
			}

		#endif\r
		\r
		vec3 totalDiffuse = vec3( 0.0 );\r
		vec3 totalSpecular = vec3( 0.0 );\r
		\r
		#if MAX_POINT_LIGHTS > 0

			totalDiffuse += pointDiffuse;\r
			totalSpecular += pointSpecular;

		#endif\r
		\r
		#if MAX_DIR_LIGHTS > 0

			totalDiffuse += dirDiffuse;\r
			totalSpecular += dirSpecular;

		#endif\r
		\r
		gl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient ) + totalSpecular;

	#endif\r
	\r
	#if defined weighted_splats\r
	    
		\r
		float wx = 2.0 * length(2.0 * gl_PointCoord - 1.0);\r
		float w = exp(-wx * wx * 0.5);\r
		\r
		
		
		\r
		gl_FragColor.rgb = gl_FragColor.rgb * w;\r
		gl_FragColor.a = w;\r
	#endif\r
	\r
	#if defined paraboloid_point_shape\r
		float wi = 0.0 - ( u*u + v*v);\r
		vec4 pos = vec4(vViewPosition, 1.0);\r
		pos.z += wi * vRadius;\r
		float linearDepth = -pos.z;\r
		pos = projectionMatrix * pos;\r
		pos = pos / pos.w;\r
		float expDepth = pos.z;\r
		depth = (pos.z + 1.0) / 2.0;\r
		gl_FragDepth = depth;\r
		\r
		#if defined(color_type_depth)\r
			gl_FragColor.r = linearDepth;\r
			gl_FragColor.g = expDepth;\r
		#endif\r
		\r
		#if defined(use_edl)\r
			gl_FragColor.a = log2(linearDepth);\r
		#endif\r
		\r
	#else\r
		#if defined(use_edl)\r
			gl_FragColor.a = vLogDepth;\r
		#endif\r
	#endif

	#ifdef highlight_point\r
		if (vHighlight > 0.0) {\r
			gl_FragColor = highlightedPointColor;\r
		}\r
	#endif\r
}`;function Lr(s){return parseInt(s.charAt(s.length-1),10)}function Zp(s,t){const e=s.name,n=t.name;return e.length!==n.length?e.length-n.length:e<n?-1:e>n?1:0}const ol={0:new Mt(.5,.5,.5,1),1:new Mt(.5,.5,.5,1),2:new Mt(.63,.32,.18,1),3:new Mt(0,1,0,1),4:new Mt(0,.8,0,1),5:new Mt(0,.6,0,1),6:new Mt(1,.66,0,1),7:new Mt(1,0,1,1),8:new Mt(1,0,0,1),9:new Mt(0,0,1,1),12:new Mt(1,1,0,1),DEFAULT:new Mt(.3,.6,.6,.5)};new D(0,0,0),new D(1,1,1),new D(.077,.042,.206),new D(.225,.036,.388),new D(.373,.074,.432),new D(.522,.128,.42),new D(.665,.182,.37),new D(.797,.255,.287),new D(.902,.364,.184),new D(.969,.516,.063),new D(.988,.683,.072),new D(.961,.859,.298),new D(.988,.998,.645),new D(.241,.015,.61),new D(.387,.001,.654),new D(.524,.025,.653),new D(.651,.125,.596),new D(.752,.227,.513),new D(.837,.329,.431),new D(.907,.435,.353),new D(.963,.554,.272),new D(.992,.681,.195),new D(.987,.822,.144),new D(.94,.975,.131),new D(.278,0,.714),1/6,new D(0,0,1),2/6,new D(0,1,1),3/6,new D(0,1,0),4/6,new D(1,1,0),5/6,new D(1,.64,0),new D(1,0,0);const Gp=[[0,new D(.3686,.3098,.6353)],[.1,new D(.1961,.5333,.7412)],[.2,new D(.4,.7608,.6471)],[.3,new D(.6706,.8667,.6431)],[.4,new D(.902,.9608,.5961)],[.5,new D(1,1,.749)],[.6,new D(.9961,.8784,.5451)],[.7,new D(.9922,.6824,.3804)],[.8,new D(.9569,.4275,.2627)],[.9,new D(.8353,.2431,.3098)],[1,new D(.6196,.0039,.2588)]];new D(.267,.005,.329),new D(.283,.141,.458),new D(.254,.265,.53),new D(.207,.372,.553),new D(.164,.471,.558),new D(.128,.567,.551),new D(.135,.659,.518),new D(.267,.749,.441),new D(.478,.821,.318),new D(.741,.873,.15),new D(.993,.906,.144),new D(.1647,.2824,.3451),new D(.1338,.3555,.4227),new D(.061,.4319,.4864),new D(0,.5099,.5319),new D(0,.5881,.5569),new D(.137,.665,.5614),new D(.2906,.7395,.5477),new D(.4453,.8099,.5201),new D(.6102,.8748,.485),new D(.7883,.9323,.4514),new D(.9804,.9804,.4314);function Wp(s,t,e){const n=s*t,i=new Uint8Array(4*n),r=Math.floor(e.r*255),a=Math.floor(e.g*255),o=Math.floor(e.b*255);for(let c=0;c<n;c++)i[c*3]=r,i[c*3+1]=a,i[c*3+2]=o;const l=new yr(i,s,t,1023);return l.needsUpdate=!0,l.magFilter=1003,l}function ll(s){const e=document.createElement("canvas");e.width=64,e.height=64;const n=e.getContext("2d");n.rect(0,0,64,64);const i=n.createLinearGradient(0,0,64,64);for(let a=0;a<s.length;a++){const o=s[a];i.addColorStop(o[0],`#${o[1].getHexString()}`)}n.fillStyle=i,n.fill();const r=new yo(e);return r.needsUpdate=!0,r.minFilter=1006,r}function cl(s){const i=new Uint8Array(262144);for(let a=0;a<256;a++)for(let o=0;o<256;o++){const l=a+256*o;let c;s[a]?c=s[a]:s[a%32]?c=s[a%32]:c=s.DEFAULT,i[4*l+0]=255*c.x,i[4*l+1]=255*c.y,i[4*l+2]=255*c.z,i[4*l+3]=255*c.w}const r=new yr(i,256,256,1023);return r.magFilter=1003,r.needsUpdate=!0,r}var Nn=(s=>(s[s.LINEAR=0]="LINEAR",s[s.SRGB=1]="SRGB",s))(Nn||{}),yp=Object.defineProperty,xp=Object.getOwnPropertyDescriptor,yt=(s,t,e,n)=>{for(var i=n>1?void 0:n?xp(t,e):t,r=s.length-1,a;r>=0;r--)(a=s[r])&&(i=(n?a(t,e,i):a(i))||i);return n&&i&&yp(t,e,i),i};const Vp={[Bi.OCTREE]:"tree_type_octree",[Bi.KDTREE]:"tree_type_kdtree"},vp={[ai.FIXED]:"fixed_point_size",[ai.ATTENUATED]:"attenuated_point_size",[ai.ADAPTIVE]:"adaptive_point_size"},Rp={[Xs.ATTENUATED]:"attenuated_opacity",[Xs.FIXED]:"fixed_opacity"},Yp={[Ii.SQUARE]:"square_point_shape",[Ii.CIRCLE]:"circle_point_shape",[Ii.PARABOLOID]:"paraboloid_point_shape"},Xp={[de.RGB]:"color_type_rgb",[de.COLOR]:"color_type_color",[de.DEPTH]:"color_type_depth",[de.HEIGHT]:"color_type_height",[de.INTENSITY]:"color_type_intensity",[de.INTENSITY_GRADIENT]:"color_type_intensity_gradient",[de.LOD]:"color_type_lod",[de.POINT_INDEX]:"color_type_point_index",[de.CLASSIFICATION]:"color_type_classification",[de.RETURN_NUMBER]:"color_type_return_number",[de.SOURCE]:"color_type_source",[de.NORMAL]:"color_type_normal",[de.PHONG]:"color_type_phong",[de.RGB_HEIGHT]:"color_type_rgb_height",[de.COMPOSITE]:"color_type_composite"},wp={[Zn.DISABLED]:"clip_disabled",[Zn.CLIP_OUTSIDE]:"clip_outside",[Zn.HIGHLIGHT_INSIDE]:"clip_highlight_inside"},Mp={[Nn.LINEAR]:"input_color_encoding_linear",[Nn.SRGB]:"input_color_encoding_sRGB"},Np={[Nn.LINEAR]:"output_color_encoding_linear",[Nn.SRGB]:"output_color_encoding_sRGB"},dl=class extends Tr{constructor(s={}){super();this.lights=!1,this.fog=!1,this.numClipBoxes=0,this.clipBoxes=[],this.visibleNodeTextureOffsets=new Map,this._gradient=Gp,this.gradientTexture=ll(this._gradient),this._classification=ol,this.classificationTexture=cl(this._classification),this.uniforms={bbSize:xt("fv",[0,0,0]),blendDepthSupplement:xt("f",0),blendHardness:xt("f",2),classificationLUT:xt("t",this.classificationTexture||new se),clipBoxCount:xt("f",0),clipBoxes:xt("Matrix4fv",[]),depthMap:xt("t",null),diffuse:xt("fv",[1,1,1]),fov:xt("f",1),gradient:xt("t",this.gradientTexture||new se),heightMax:xt("f",1),heightMin:xt("f",0),intensityBrightness:xt("f",0),intensityContrast:xt("f",0),intensityGamma:xt("f",1),intensityRange:xt("fv",[0,65e3]),isLeafNode:xt("b",0),level:xt("f",0),maxSize:xt("f",lp),minSize:xt("f",dp),octreeSize:xt("f",0),opacity:xt("f",1),pcIndex:xt("f",0),rgbBrightness:xt("f",nl),rgbContrast:xt("f",il),rgbGamma:xt("f",sl),screenHeight:xt("f",1),screenWidth:xt("f",1),size:xt("f",1),spacing:xt("f",1),toModel:xt("Matrix4f",[]),transition:xt("f",.5),uColor:xt("c",new D(16777215)),visibleNodes:xt("t",this.visibleNodesTexture||new se),vnStart:xt("f",0),wClassification:xt("f",0),wElevation:xt("f",0),wIntensity:xt("f",0),wReturnNumber:xt("f",0),wRGB:xt("f",1),wSourceID:xt("f",0),opacityAttenuation:xt("f",1),filterByNormalThreshold:xt("f",0),highlightedPointCoordinate:xt("fv",new R),highlightedPointColor:xt("fv",fp.clone()),enablePointHighlighting:xt("b",!0),highlightedPointScale:xt("f",2)},this.useClipBox=!1,this.weighted=!1,this.pointColorType=de.RGB,this.pointSizeType=ai.ADAPTIVE,this.clipMode=Zn.DISABLED,this.useEDL=!1,this.shape=Ii.SQUARE,this.treeType=Bi.OCTREE,this.pointOpacityType=Xs.FIXED,this.useFilterByNormal=!1,this.highlightPoint=!1,this.inputColorEncoding=Nn.SRGB,this.outputColorEncoding=Nn.LINEAR,this.attributes={position:{type:"fv",value:[]},color:{type:"fv",value:[]},normal:{type:"fv",value:[]},intensity:{type:"f",value:[]},classification:{type:"f",value:[]},returnNumber:{type:"f",value:[]},numberOfReturns:{type:"f",value:[]},pointSourceID:{type:"f",value:[]},indices:{type:"fv",value:[]}};const t=this.visibleNodesTexture=Wp(2048,1,new D(16777215));t.minFilter=1003,t.magFilter=1003,this.setUniform("visibleNodes",t),this.treeType=ws(s.treeType,Bi.OCTREE),this.size=ws(s.size,1),this.minSize=ws(s.minSize,2),this.maxSize=ws(s.maxSize,50),this.newFormat=!!s.newFormat,this.classification=ol,this.defaultAttributeValues.normal=[0,0,0],this.defaultAttributeValues.classification=[0,0,0],this.defaultAttributeValues.indices=[0,0,0,0],this.vertexColors=!0,this.updateShaderSource()}dispose(){super.dispose(),this.gradientTexture&&(this.gradientTexture.dispose(),this.gradientTexture=void 0),this.visibleNodesTexture&&(this.visibleNodesTexture.dispose(),this.visibleNodesTexture=void 0),this.clearVisibleNodeTextureOffsets(),this.classificationTexture&&(this.classificationTexture.dispose(),this.classificationTexture=void 0),this.depthMap&&(this.depthMap.dispose(),this.depthMap=void 0)}clearVisibleNodeTextureOffsets(){this.visibleNodeTextureOffsets.clear()}updateShaderSource(){this.vertexShader=this.applyDefines(bp),this.fragmentShader=this.applyDefines(gp),this.opacity===1?(this.blending=0,this.transparent=!1,this.depthTest=!0,this.depthWrite=!0,this.depthFunc=3):this.opacity<1&&!this.useEDL&&(this.blending=2,this.transparent=!0,this.depthTest=!1,this.depthWrite=!0),this.weighted&&(this.blending=2,this.transparent=!0,this.depthTest=!0,this.depthWrite=!1,this.depthFunc=3),this.needsUpdate=!0}applyDefines(s){const t=[];function e(i){i&&t.push(`#define ${i}`)}e(Vp[this.treeType]),e(vp[this.pointSizeType]),e(Yp[this.shape]),e(Xp[this.pointColorType]),e(wp[this.clipMode]),e(Rp[this.pointOpacityType]),e(Np[this.outputColorEncoding]),e(Mp[this.inputColorEncoding]),(this.rgbGamma!==sl||this.rgbBrightness!==nl||this.rgbContrast!==il)&&e("use_rgb_gamma_contrast_brightness"),this.useFilterByNormal&&e("use_filter_by_normal"),this.useEDL&&e("use_edl"),this.weighted&&e("weighted_splats"),this.numClipBoxes>0&&e("use_clip_box"),this.highlightPoint&&e("highlight_point"),e("MAX_POINT_LIGHTS 0"),e("MAX_DIR_LIGHTS 0"),this.newFormat&&e("new_format");const n=s.match(/^\s*#version\s+300\s+es\s*\n/);return n&&(t.unshift(n[0]),s=s.replace(n[0],"")),t.push(s),t.join(`
`)}setClipBoxes(s){if(!s)return;this.clipBoxes=s;const t=this.numClipBoxes!==s.length&&(s.length===0||this.numClipBoxes===0);this.numClipBoxes=s.length,this.setUniform("clipBoxCount",this.numClipBoxes),t&&this.updateShaderSource();const e=this.numClipBoxes*16,n=new Float32Array(e);for(let i=0;i<this.numClipBoxes;i++)n.set(s[i].inverse.elements,16*i);for(let i=0;i<e;i++)isNaN(n[i])&&(n[i]=1/0);this.setUniform("clipBoxes",n)}get gradient(){return this._gradient}set gradient(s){this._gradient!==s&&(this._gradient=s,this.gradientTexture=ll(this._gradient),this.setUniform("gradient",this.gradientTexture))}get classification(){return this._classification}set classification(s){const t={};for(const n of Object.keys(s))t[n]=s[n].clone();let e=!1;if(this._classification===void 0)e=!1;else{e=Object.keys(t).length===Object.keys(this._classification).length;for(const n of Object.keys(t))e=e&&this._classification[n]!==void 0,e=e&&t[n].equals(this._classification[n])}e||(this._classification=t,this.recomputeClassification())}recomputeClassification(){this.classificationTexture=cl(this._classification),this.setUniform("classificationLUT",this.classificationTexture)}get elevationRange(){return[this.heightMin,this.heightMax]}set elevationRange(s){this.heightMin=s[0],this.heightMax=s[1]}getUniform(s){return this.uniforms===void 0?void 0:this.uniforms[s].value}setUniform(s,t){if(this.uniforms===void 0)return;const e=this.uniforms[s];e.type==="c"?e.value.copy(t):t!==e.value&&(e.value=t)}updateMaterial(s,t,e,n){const i=n.getPixelRatio();e.type===al?this.fov=e.fov*(Math.PI/180):this.fov=Math.PI/2;const r=n.getRenderTarget();r!==null&&r instanceof ye?(this.screenWidth=r.width,this.screenHeight=r.height):(this.screenWidth=n.domElement.clientWidth*i,this.screenHeight=n.domElement.clientHeight*i);const a=Math.max(s.scale.x,s.scale.y,s.scale.z);this.spacing=s.pcoGeometry.spacing*a,this.octreeSize=s.pcoGeometry.boundingBox.getSize(dl.helperVec3).x,(this.pointSizeType===ai.ADAPTIVE||this.pointColorType===de.LOD)&&this.updateVisibilityTextureData(t)}updateVisibilityTextureData(s){s.sort(Zp);const t=new Uint8Array(s.length*4),e=new Array(s.length).fill(1/0);this.visibleNodeTextureOffsets.clear();for(let i=0;i<s.length;i++){const r=s[i];if(this.visibleNodeTextureOffsets.set(r.name,i),i>0){const a=r.name.slice(0,-1),o=this.visibleNodeTextureOffsets.get(a),l=i-o;e[o]=Math.min(e[o],l);const c=o*4;t[c]=t[c]|1<<r.index,t[c+1]=e[o]>>8,t[c+2]=e[o]%256}t[i*4+3]=r.name.length}const n=this.visibleNodesTexture;n&&(n.image.data.set(t),n.needsUpdate=!0)}static makeOnBeforeRender(s,t,e){return(n,i,r,a,o)=>{const l=o,c=l.uniforms;c.level.value=t.level,c.isLeafNode.value=t.isLeafNode;const d=l.visibleNodeTextureOffsets.get(t.name);d!==void 0&&(c.vnStart.value=d),c.pcIndex.value=e!==void 0?e:s.visibleNodes.indexOf(t),o.uniformsNeedUpdate=!0}}};let bt=dl;bt.helperVec3=new R,yt([Tt("bbSize")],bt.prototype,"bbSize",2),yt([Tt("depthMap")],bt.prototype,"depthMap",2),yt([Tt("fov")],bt.prototype,"fov",2),yt([Tt("heightMax")],bt.prototype,"heightMax",2),yt([Tt("heightMin")],bt.prototype,"heightMin",2),yt([Tt("intensityBrightness")],bt.prototype,"intensityBrightness",2),yt([Tt("intensityContrast")],bt.prototype,"intensityContrast",2),yt([Tt("intensityGamma")],bt.prototype,"intensityGamma",2),yt([Tt("intensityRange")],bt.prototype,"intensityRange",2),yt([Tt("maxSize")],bt.prototype,"maxSize",2),yt([Tt("minSize")],bt.prototype,"minSize",2),yt([Tt("octreeSize")],bt.prototype,"octreeSize",2),yt([Tt("opacity",!0)],bt.prototype,"opacity",2),yt([Tt("rgbBrightness",!0)],bt.prototype,"rgbBrightness",2),yt([Tt("rgbContrast",!0)],bt.prototype,"rgbContrast",2),yt([Tt("rgbGamma",!0)],bt.prototype,"rgbGamma",2),yt([Tt("screenHeight")],bt.prototype,"screenHeight",2),yt([Tt("screenWidth")],bt.prototype,"screenWidth",2),yt([Tt("size")],bt.prototype,"size",2),yt([Tt("spacing")],bt.prototype,"spacing",2),yt([Tt("transition")],bt.prototype,"transition",2),yt([Tt("uColor")],bt.prototype,"color",2),yt([Tt("wClassification")],bt.prototype,"weightClassification",2),yt([Tt("wElevation")],bt.prototype,"weightElevation",2),yt([Tt("wIntensity")],bt.prototype,"weightIntensity",2),yt([Tt("wReturnNumber")],bt.prototype,"weightReturnNumber",2),yt([Tt("wRGB")],bt.prototype,"weightRGB",2),yt([Tt("wSourceID")],bt.prototype,"weightSourceID",2),yt([Tt("opacityAttenuation")],bt.prototype,"opacityAttenuation",2),yt([Tt("filterByNormalThreshold")],bt.prototype,"filterByNormalThreshold",2),yt([Tt("highlightedPointCoordinate")],bt.prototype,"highlightedPointCoordinate",2),yt([Tt("highlightedPointColor")],bt.prototype,"highlightedPointColor",2),yt([Tt("enablePointHighlighting")],bt.prototype,"enablePointHighlighting",2),yt([Tt("highlightedPointScale")],bt.prototype,"highlightedPointScale",2),yt([Fe()],bt.prototype,"useClipBox",2),yt([Fe()],bt.prototype,"weighted",2),yt([Fe()],bt.prototype,"pointColorType",2),yt([Fe()],bt.prototype,"pointSizeType",2),yt([Fe()],bt.prototype,"clipMode",2),yt([Fe()],bt.prototype,"useEDL",2),yt([Fe()],bt.prototype,"shape",2),yt([Fe()],bt.prototype,"treeType",2),yt([Fe()],bt.prototype,"pointOpacityType",2),yt([Fe()],bt.prototype,"useFilterByNormal",2),yt([Fe()],bt.prototype,"highlightPoint",2),yt([Fe()],bt.prototype,"inputColorEncoding",2),yt([Fe()],bt.prototype,"outputColorEncoding",2);function xt(s,t){return{type:s,value:t}}function ws(s,t){return s===void 0?t:s}function Tt(s,t=!1){return(e,n)=>{Object.defineProperty(e,n,{get(){return this.getUniform(s)},set(i){i!==this.getUniform(s)&&(this.setUniform(s,i),t&&this.updateShaderSource())}})}}function Fe(){return(s,t)=>{const e=`_${t.toString()}`;Object.defineProperty(s,t,{get(){return this[e]},set(n){n!==this[e]&&(this[e]=n,this.updateShaderSource())}})}}class Fp extends Oe{constructor(t,e){super();this.pcIndex=void 0,this.boundingBoxNode=null,this.loaded=!0,this.isTreeNode=!0,this.isGeometryNode=!1,this.geometryNode=t,this.sceneNode=e,this.children=t.children.slice()}dispose(){this.geometryNode.dispose()}disposeSceneNode(){const t=this.sceneNode;if(t.geometry instanceof Ot){const e=t.geometry.attributes;for(const n in e)n==="position"&&delete e[n].array,delete e[n];t.geometry.dispose(),t.geometry=void 0}}traverse(t,e){this.geometryNode.traverse(t,e)}get id(){return this.geometryNode.id}get name(){return this.geometryNode.name}get level(){return this.geometryNode.level}get isLeafNode(){return this.geometryNode.isLeafNode}get numPoints(){return this.geometryNode.numPoints}get index(){return this.geometryNode.index}get boundingSphere(){return this.geometryNode.boundingSphere}get boundingBox(){return this.geometryNode.boundingBox}get spacing(){return this.geometryNode.spacing}}function hl(s,t,e){return Math.min(Math.max(t,s),e)}const be=class{dispose(){this.pickState&&(this.pickState.material.dispose(),this.pickState.renderTarget.dispose())}pick(s,t,e,n,i={}){if(n.length===0)return null;const r=this.pickState?this.pickState:this.pickState=be.getPickState(),a=r.material,o=s.getPixelRatio(),l=Math.ceil(s.domElement.clientWidth*o),c=Math.ceil(s.domElement.clientHeight*o);be.updatePickRenderTarget(this.pickState,l,c);const d=be.helperVec3;i.pixelPosition?d.copy(i.pixelPosition):(d.addVectors(t.position,e.direction).project(t),d.x=(d.x+1)*l*.5,d.y=(d.y+1)*c*.5);const h=Math.floor((i.pickWindowSize||hp)*o),u=(h-1)/2,m=Math.floor(hl(d.x-u,0,l)),b=Math.floor(hl(d.y-u,0,c));be.prepareRender(s,m,b,h,a,r);const g=be.render(s,t,a,n,e,r,i);a.clearVisibleNodeTextureOffsets();const Z=be.readPixels(s,m,b,h),f=be.findHit(Z,h);return be.getPickPoint(f,g)}static prepareRender(s,t,e,n,i,r){s.setScissor(t,e,n,n),s.setScissorTest(!0),s.state.buffers.depth.setTest(i.depthTest),s.state.buffers.depth.setMask(i.depthWrite),s.state.setBlending(0),s.setRenderTarget(r.renderTarget),s.getClearColor(this.clearColor);const a=s.getClearAlpha();s.setClearColor(pp,0),s.clear(!0,!0,!0),s.setClearColor(this.clearColor,a)}static render(s,t,e,n,i,r,a){const o=[];for(const l of n){const c=be.nodesOnRay(l,i);!c.length||(be.updatePickMaterial(e,l.material,a),e.updateMaterial(l,c,t,s),a.onBeforePickRender&&a.onBeforePickRender(e,r.renderTarget),r.scene.children=be.createTempNodes(l,c,e,o.length),s.render(r.scene,t),c.forEach(d=>o.push({node:d,octree:l})))}return o}static nodesOnRay(s,t){const e=[],n=t.clone();for(const i of s.visibleNodes){const r=be.helperSphere.copy(i.boundingSphere).applyMatrix4(s.matrixWorld);n.intersectsSphere(r)&&e.push(i)}return e}static readPixels(s,t,e,n){const i=new Uint8Array(4*n*n);return s.readRenderTargetPixels(s.getRenderTarget(),t,e,n,n,i),s.setScissorTest(!1),s.setRenderTarget(null),i}static createTempNodes(s,t,e,n){const i=[];for(let r=0;r<t.length;r++){const a=t[r],o=a.sceneNode,l=new Xr(o.geometry,e);l.matrix=o.matrix,l.matrixWorld=o.matrixWorld,l.matrixAutoUpdate=!1,l.frustumCulled=!1;const c=n+r+1;c>255&&console.error("More than 255 nodes for pick are not supported."),l.onBeforeRender=bt.makeOnBeforeRender(s,a,c),i.push(l)}return i}static updatePickMaterial(s,t,e){s.pointSizeType=t.pointSizeType,s.shape=t.shape,s.size=t.size,s.minSize=t.minSize,s.maxSize=t.maxSize,s.classification=t.classification,s.useFilterByNormal=t.useFilterByNormal,s.filterByNormalThreshold=t.filterByNormalThreshold,e.pickOutsideClipRegion?s.clipMode=Zn.DISABLED:(s.clipMode=t.clipMode,s.setClipBoxes(t.clipMode===Zn.CLIP_OUTSIDE?t.clipBoxes:[]))}static updatePickRenderTarget(s,t,e){s.renderTarget.width===t&&s.renderTarget.height===e||(s.renderTarget.dispose(),s.renderTarget=be.makePickRenderTarget(),s.renderTarget.setSize(t,e))}static makePickRenderTarget(){return new ye(1,1,{minFilter:1006,magFilter:1003,format:1023})}static findHit(s,t){const e=new Uint32Array(s.buffer);let n=Number.MAX_VALUE,i=null;for(let r=0;r<t;r++)for(let a=0;a<t;a++){const o=r+a*t,l=Math.pow(r-(t-1)/2,2)+Math.pow(a-(t-1)/2,2),c=s[4*o+3];s[4*o+3]=0;const d=e[o];c>0&&l<n&&(i={pIndex:d,pcIndex:c-1},n=l)}return i}static getPickPoint(s,t){if(!s)return null;const e={},n=t[s.pcIndex]&&t[s.pcIndex].node.sceneNode;if(!n)return null;e.pointCloud=t[s.pcIndex].octree;const i=n.geometry.attributes;for(const r in i){if(!i.hasOwnProperty(r))continue;const a=i[r];if(r==="position")be.addPositionToPickPoint(e,s,a,n);else if(r==="normal")be.addNormalToPickPoint(e,s,a,n);else if(r!=="indices")if(a.itemSize===1)e[r]=a.array[s.pIndex];else{const o=[];for(let l=0;l<a.itemSize;l++)o.push(a.array[a.itemSize*s.pIndex+l]);e[r]=o}}return e}static addPositionToPickPoint(s,t,e,n){s.position=new R().fromBufferAttribute(e,t.pIndex).applyMatrix4(n.matrixWorld)}static addNormalToPickPoint(s,t,e,n){const i=new R().fromBufferAttribute(e,t.pIndex),r=new Mt(i.x,i.y,i.z,0).applyMatrix4(n.matrixWorld);i.set(r.x,r.y,r.z),s.normal=i}static getPickState(){const s=new Zr;s.autoUpdate=!1;const t=new bt;return t.pointColorType=de.POINT_INDEX,{renderTarget:be.makePickRenderTarget(),material:t,scene:s}}};let Ci=be;Ci.helperVec3=new R,Ci.helperSphere=new Re,Ci.clearColor=new D;class Sp extends Ht{constructor(){super(...arguments);this.root=null}initialized(){return this.root!==null}}function ul(s,t){return new ae().setFromPoints([new R(s.min.x,s.min.y,s.min.z).applyMatrix4(t),new R(s.min.x,s.min.y,s.min.z).applyMatrix4(t),new R(s.max.x,s.min.y,s.min.z).applyMatrix4(t),new R(s.min.x,s.max.y,s.min.z).applyMatrix4(t),new R(s.min.x,s.min.y,s.max.z).applyMatrix4(t),new R(s.min.x,s.max.y,s.max.z).applyMatrix4(t),new R(s.max.x,s.max.y,s.min.z).applyMatrix4(t),new R(s.max.x,s.min.y,s.max.z).applyMatrix4(t),new R(s.max.x,s.max.y,s.max.z).applyMatrix4(t)])}function ml(s,t){const e=s.min.clone(),n=s.max.clone(),i=new R().subVectors(n,e);return(t&1)>0?e.z+=i.z/2:n.z-=i.z/2,(t&2)>0?e.y+=i.y/2:n.y-=i.y/2,(t&4)>0?e.x+=i.x/2:n.x-=i.x/2,new ae(e,n)}class Qr extends Sp{constructor(t,e,n){super();this.disposed=!1,this.level=0,this.maxLevel=1/0,this.minNodePixelSize=cp,this.root=null,this.boundingBoxNodes=[],this.visibleNodes=[],this.visibleGeometry=[],this.numVisiblePoints=0,this.showBoundingBox=!1,this.visibleBounds=new ae,this.name="",this.potree=t,this.root=e.root,this.pcoGeometry=e,this.boundingBox=e.boundingBox,this.boundingSphere=this.boundingBox.getBoundingSphere(new Re),this.position.copy(e.offset),this.updateMatrix(),this.material=n||e instanceof el?new bt({newFormat:!0}):new bt,this.initMaterial(this.material)}initMaterial(t){this.updateMatrixWorld(!0);const{min:e,max:n}=ul(this.pcoGeometry.tightBoundingBox||this.getBoundingBoxWorld(),this.matrixWorld),i=n.z-e.z;t.heightMin=e.z-.2*i,t.heightMax=n.z+.2*i}dispose(){this.root&&this.root.dispose(),this.pcoGeometry.root.traverse(t=>this.potree.lru.remove(t)),this.pcoGeometry.dispose(),this.material.dispose(),this.visibleNodes=[],this.visibleGeometry=[],this.picker&&(this.picker.dispose(),this.picker=void 0),this.disposed=!0}get pointSizeType(){return this.material.pointSizeType}set pointSizeType(t){this.material.pointSizeType=t}toTreeNode(t,e){const n=new Xr(t.geometry,this.material),i=new Fp(t,n);return n.name=t.name,n.position.copy(t.boundingBox.min),n.frustumCulled=!1,n.onBeforeRender=bt.makeOnBeforeRender(this,i),e?(e.sceneNode.add(n),e.children[t.index]=i,t.oneTimeDisposeHandlers.push(()=>{i.disposeSceneNode(),e.sceneNode.remove(i.sceneNode),e.children[t.index]=t})):(this.root=i,this.add(n)),i}updateVisibleBounds(){const t=this.visibleBounds;t.min.set(1/0,1/0,1/0),t.max.set(-1/0,-1/0,-1/0);for(const e of this.visibleNodes)e.isLeafNode&&(t.expandByPoint(e.boundingBox.min),t.expandByPoint(e.boundingBox.max))}updateBoundingBoxes(){if(!this.showBoundingBox||!this.parent)return;let t=this.parent.getObjectByName("bbroot");t||(t=new Ht,t.name="bbroot",this.parent.add(t));const e=[];for(const n of this.visibleNodes)n.boundingBoxNode!==void 0&&n.isLeafNode&&e.push(n.boundingBoxNode);t.children=e}updateMatrixWorld(t){this.matrixAutoUpdate===!0&&this.updateMatrix(),(this.matrixWorldNeedsUpdate===!0||t===!0)&&(this.parent?this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0)}hideDescendants(t){const e=[];for(n(t);e.length>0;){const i=e.shift();i.visible=!1,n(i)}function n(i){for(const r of i.children)r.visible&&e.push(r)}}moveToOrigin(){this.position.set(0,0,0),this.position.set(0,0,0).sub(this.getBoundingBoxWorld().getCenter(new R))}moveToGroundPlane(){this.position.y+=-this.getBoundingBoxWorld().min.y}getBoundingBoxWorld(){return this.updateMatrixWorld(!0),ul(this.boundingBox,this.matrixWorld)}getVisibleExtent(){return this.visibleBounds.applyMatrix4(this.matrixWorld)}pick(t,e,n,i={}){return this.picker=this.picker||new Ci,this.picker.pick(t,e,n,[this],i)}get progress(){return this.visibleGeometry.length===0?0:this.visibleNodes.length/this.visibleGeometry.length}}const Qt={DATA_TYPE_DOUBLE:{ordinal:0,name:"double",size:8},DATA_TYPE_FLOAT:{ordinal:1,name:"float",size:4},DATA_TYPE_INT8:{ordinal:2,name:"int8",size:1},DATA_TYPE_UINT8:{ordinal:3,name:"uint8",size:1},DATA_TYPE_INT16:{ordinal:4,name:"int16",size:2},DATA_TYPE_UINT16:{ordinal:5,name:"uint16",size:2},DATA_TYPE_INT32:{ordinal:6,name:"int32",size:4},DATA_TYPE_UINT32:{ordinal:7,name:"uint32",size:4},DATA_TYPE_INT64:{ordinal:8,name:"int64",size:8},DATA_TYPE_UINT64:{ordinal:9,name:"uint64",size:8}};let pl=0;for(let s in Qt)Qt[pl]=Qt[s],pl++;class ge{constructor(t,e,n,i=[1/0,-1/0]){this.name=t,this.type=e,this.numElements=n,this.range=i,this.byteSize=this.numElements*this.type.size,this.description=""}}const Ai={POSITION_CARTESIAN:new ge("POSITION_CARTESIAN",Qt.DATA_TYPE_FLOAT,3),RGBA_PACKED:new ge("COLOR_PACKED",Qt.DATA_TYPE_INT8,4),COLOR_PACKED:new ge("COLOR_PACKED",Qt.DATA_TYPE_INT8,4),RGB_PACKED:new ge("COLOR_PACKED",Qt.DATA_TYPE_INT8,3),NORMAL_FLOATS:new ge("NORMAL_FLOATS",Qt.DATA_TYPE_FLOAT,3),INTENSITY:new ge("INTENSITY",Qt.DATA_TYPE_UINT16,1),CLASSIFICATION:new ge("CLASSIFICATION",Qt.DATA_TYPE_UINT8,1),NORMAL_SPHEREMAPPED:new ge("NORMAL_SPHEREMAPPED",Qt.DATA_TYPE_UINT8,2),NORMAL_OCT16:new ge("NORMAL_OCT16",Qt.DATA_TYPE_UINT8,2),NORMAL:new ge("NORMAL",Qt.DATA_TYPE_FLOAT,3),RETURN_NUMBER:new ge("RETURN_NUMBER",Qt.DATA_TYPE_UINT8,1),NUMBER_OF_RETURNS:new ge("NUMBER_OF_RETURNS",Qt.DATA_TYPE_UINT8,1),SOURCE_ID:new ge("SOURCE_ID",Qt.DATA_TYPE_UINT16,1),INDICES:new ge("INDICES",Qt.DATA_TYPE_UINT32,1),SPACING:new ge("SPACING",Qt.DATA_TYPE_FLOAT,1),GPS_TIME:new ge("GPS_TIME",Qt.DATA_TYPE_DOUBLE,1)};class Ip{constructor(t,e=[],n=0,i=0,r=[]){if(this.attributes=e,this.byteSize=n,this.size=i,this.vectors=r,t!=null)for(let a=0;a<t.length;a++){let o=t[a],l=Ai[o];this.attributes.push(l),this.byteSize+=l.byteSize,this.size++}}add(t){this.attributes.push(t),this.byteSize+=t.byteSize,this.size++}addVector(t){this.vectors.push(t)}hasNormals(){for(let t in this.attributes){let e=this.attributes[t];if(e===Ai.NORMAL_SPHEREMAPPED||e===Ai.NORMAL_FLOATS||e===Ai.NORMAL||e===Ai.NORMAL_OCT16)return!0}return!1}}const fl="",bl=typeof window!="undefined"&&window.Blob&&new Blob([atob(fl)],{type:"text/javascript;charset=utf-8"});function Bp(){const s=bl&&(window.URL||window.webkitURL).createObjectURL(bl);try{return s?new Worker(s,{}):new Worker("data:application/javascript;base64,"+fl,{type:"module"})}finally{s&&(window.URL||window.webkitURL).revokeObjectURL(s)}}const gl="KGZ1bmN0aW9uKCl7InVzZSBzdHJpY3QiO2NvbnN0IHQ9e0RBVEFfVFlQRV9ET1VCTEU6e29yZGluYWw6MCxuYW1lOiJkb3VibGUiLHNpemU6OH0sREFUQV9UWVBFX0ZMT0FUOntvcmRpbmFsOjEsbmFtZToiZmxvYXQiLHNpemU6NH0sREFUQV9UWVBFX0lOVDg6e29yZGluYWw6MixuYW1lOiJpbnQ4IixzaXplOjF9LERBVEFfVFlQRV9VSU5UODp7b3JkaW5hbDozLG5hbWU6InVpbnQ4IixzaXplOjF9LERBVEFfVFlQRV9JTlQxNjp7b3JkaW5hbDo0LG5hbWU6ImludDE2IixzaXplOjJ9LERBVEFfVFlQRV9VSU5UMTY6e29yZGluYWw6NSxuYW1lOiJ1aW50MTYiLHNpemU6Mn0sREFUQV9UWVBFX0lOVDMyOntvcmRpbmFsOjYsbmFtZToiaW50MzIiLHNpemU6NH0sREFUQV9UWVBFX1VJTlQzMjp7b3JkaW5hbDo3LG5hbWU6InVpbnQzMiIsc2l6ZTo0fSxEQVRBX1RZUEVfSU5UNjQ6e29yZGluYWw6OCxuYW1lOiJpbnQ2NCIsc2l6ZTo4fSxEQVRBX1RZUEVfVUlOVDY0OntvcmRpbmFsOjksbmFtZToidWludDY0IixzaXplOjh9fTtsZXQgZz0wO2ZvcihsZXQgTyBpbiB0KXRbZ109dFtPXSxnKys7Y2xhc3MgaXtjb25zdHJ1Y3RvcihiLHksRCxZPVsxLzAsLTEvMF0pe3RoaXMubmFtZT1iLHRoaXMudHlwZT15LHRoaXMubnVtRWxlbWVudHM9RCx0aGlzLnJhbmdlPVksdGhpcy5ieXRlU2l6ZT10aGlzLm51bUVsZW1lbnRzKnRoaXMudHlwZS5zaXplLHRoaXMuZGVzY3JpcHRpb249IiJ9fW5ldyBpKCJQT1NJVElPTl9DQVJURVNJQU4iLHQuREFUQV9UWVBFX0ZMT0FULDMpLG5ldyBpKCJDT0xPUl9QQUNLRUQiLHQuREFUQV9UWVBFX0lOVDgsNCksbmV3IGkoIkNPTE9SX1BBQ0tFRCIsdC5EQVRBX1RZUEVfSU5UOCw0KSxuZXcgaSgiQ09MT1JfUEFDS0VEIix0LkRBVEFfVFlQRV9JTlQ4LDMpLG5ldyBpKCJOT1JNQUxfRkxPQVRTIix0LkRBVEFfVFlQRV9GTE9BVCwzKSxuZXcgaSgiSU5URU5TSVRZIix0LkRBVEFfVFlQRV9VSU5UMTYsMSksbmV3IGkoIkNMQVNTSUZJQ0FUSU9OIix0LkRBVEFfVFlQRV9VSU5UOCwxKSxuZXcgaSgiTk9STUFMX1NQSEVSRU1BUFBFRCIsdC5EQVRBX1RZUEVfVUlOVDgsMiksbmV3IGkoIk5PUk1BTF9PQ1QxNiIsdC5EQVRBX1RZUEVfVUlOVDgsMiksbmV3IGkoIk5PUk1BTCIsdC5EQVRBX1RZUEVfRkxPQVQsMyksbmV3IGkoIlJFVFVSTl9OVU1CRVIiLHQuREFUQV9UWVBFX1VJTlQ4LDEpLG5ldyBpKCJOVU1CRVJfT0ZfUkVUVVJOUyIsdC5EQVRBX1RZUEVfVUlOVDgsMSksbmV3IGkoIlNPVVJDRV9JRCIsdC5EQVRBX1RZUEVfVUlOVDE2LDEpLG5ldyBpKCJJTkRJQ0VTIix0LkRBVEFfVFlQRV9VSU5UMzIsMSksbmV3IGkoIlNQQUNJTkciLHQuREFUQV9UWVBFX0ZMT0FULDEpLG5ldyBpKCJHUFNfVElNRSIsdC5EQVRBX1RZUEVfRE9VQkxFLDEpO2NvbnN0IE09e2ludDg6SW50OEFycmF5LGludDE2OkludDE2QXJyYXksaW50MzI6SW50MzJBcnJheSxpbnQ2NDpGbG9hdDY0QXJyYXksdWludDg6VWludDhBcnJheSx1aW50MTY6VWludDE2QXJyYXksdWludDMyOlVpbnQzMkFycmF5LHVpbnQ2NDpGbG9hdDY0QXJyYXksZmxvYXQ6RmxvYXQzMkFycmF5LGRvdWJsZTpGbG9hdDY0QXJyYXl9O29ubWVzc2FnZT1mdW5jdGlvbihPKXtsZXR7YnVmZmVyOmIscG9pbnRBdHRyaWJ1dGVzOnksc2NhbGU6RCxuYW1lOlksbWluOlUsbWF4Okcsc2l6ZTpwLG9mZnNldDpSLG51bVBvaW50czpzfT1PLmRhdGE7cGVyZm9ybWFuY2Uubm93KCk7bGV0IEE9bmV3IERhdGFWaWV3KGIpLEU9e30sST0wLG09MDtmb3IobGV0IGUgb2YgeS5hdHRyaWJ1dGVzKW0rPWUuYnl0ZVNpemU7bGV0IF89MzIsej1uZXcgVWludDMyQXJyYXkoXyoqMyksRj0oZSxULHIpPT57bGV0IG49XyplL3AueCxhPV8qVC9wLnksbD1fKnIvcC56LGY9TWF0aC5taW4ocGFyc2VJbnQobiksXy0xKSx1PU1hdGgubWluKHBhcnNlSW50KGEpLF8tMSksTj1NYXRoLm1pbihwYXJzZUludChsKSxfLTEpO3JldHVybiBmK3UqXytOKl8qX30sQz0wO2ZvcihsZXQgZSBvZiB5LmF0dHJpYnV0ZXMpe2lmKFsiUE9TSVRJT05fQ0FSVEVTSUFOIiwicG9zaXRpb24iXS5pbmNsdWRlcyhlLm5hbWUpKXtsZXQgVD1uZXcgQXJyYXlCdWZmZXIocyo0KjMpLHI9bmV3IEZsb2F0MzJBcnJheShUKTtmb3IobGV0IG49MDtuPHM7bisrKXtsZXQgYT1uKm0sbD1BLmdldEludDMyKGErSSswLCEwKSpEWzBdK1JbMF0tVS54LGY9QS5nZXRJbnQzMihhK0krNCwhMCkqRFsxXStSWzFdLVUueSx1PUEuZ2V0SW50MzIoYStJKzgsITApKkRbMl0rUlsyXS1VLnosTj1GKGwsZix1KTt6W05dKys9PT0wJiZDKyssclszKm4rMF09bCxyWzMqbisxXT1mLHJbMypuKzJdPXV9RVtlLm5hbWVdPXtidWZmZXI6VCxhdHRyaWJ1dGU6ZX19ZWxzZSBpZihbIlJHQkEiLCJyZ2JhIl0uaW5jbHVkZXMoZS5uYW1lKSl7bGV0IFQ9bmV3IEFycmF5QnVmZmVyKHMqNCkscj1uZXcgVWludDhBcnJheShUKTtmb3IobGV0IG49MDtuPHM7bisrKXtsZXQgYT1uKm0sbD1BLmdldFVpbnQxNihhK0krMCwhMCksZj1BLmdldFVpbnQxNihhK0krMiwhMCksdT1BLmdldFVpbnQxNihhK0krNCwhMCk7cls0Km4rMF09bD4yNTU/bC8yNTY6bCxyWzQqbisxXT1mPjI1NT9mLzI1NjpmLHJbNCpuKzJdPXU+MjU1P3UvMjU2OnV9RVtlLm5hbWVdPXtidWZmZXI6VCxhdHRyaWJ1dGU6ZX19ZWxzZXtsZXQgVD1uZXcgQXJyYXlCdWZmZXIocyo0KSxyPW5ldyBGbG9hdDMyQXJyYXkoVCksbj1NW2UudHlwZS5uYW1lXSxhPW5ldyBuKHMpLFtsLGZdPVswLDFdO2NvbnN0IE49e2ludDg6QS5nZXRJbnQ4LGludDE2OkEuZ2V0SW50MTYsaW50MzI6QS5nZXRJbnQzMix1aW50ODpBLmdldFVpbnQ4LHVpbnQxNjpBLmdldFVpbnQxNix1aW50MzI6QS5nZXRVaW50MzIsZmxvYXQ6QS5nZXRGbG9hdDMyLGRvdWJsZTpBLmdldEZsb2F0NjR9W2UudHlwZS5uYW1lXS5iaW5kKEEpO2lmKGUudHlwZS5zaXplPjQpe2xldFtvLFBdPWUucmFuZ2U7bD1vLGY9MS8oUC1vKX1mb3IobGV0IG89MDtvPHM7bysrKXtsZXQgUD1vKm0sYz1OKFArSSwhMCk7cltvXT0oYy1sKSpmLGFbb109Y31FW2UubmFtZV09e2J1ZmZlcjpULHByZWNpc2VCdWZmZXI6YSxhdHRyaWJ1dGU6ZSxvZmZzZXQ6bCxzY2FsZTpmfX1JKz1lLmJ5dGVTaXplfWxldCBCPXBhcnNlSW50KHMvQyk7e2xldCBlPW5ldyBBcnJheUJ1ZmZlcihzKjQpLFQ9bmV3IFVpbnQzMkFycmF5KGUpO2ZvcihsZXQgcj0wO3I8cztyKyspVFtyXT1yO0UuSU5ESUNFUz17YnVmZmVyOmUsYXR0cmlidXRlOmkuSU5ESUNFU319e2xldCBlPXkudmVjdG9ycztmb3IobGV0IFQgb2YgZSl7bGV0e25hbWU6cixhdHRyaWJ1dGVzOm59PVQsYT1uLmxlbmd0aCxsPW5ldyBBcnJheUJ1ZmZlcihhKnMqNCksZj1uZXcgRmxvYXQzMkFycmF5KGwpLHU9MDtmb3IobGV0IG8gb2Ygbil7bGV0IFA9RVtvXSx7b2Zmc2V0OmMsc2NhbGU6aH09UCxMPW5ldyBEYXRhVmlldyhQLmJ1ZmZlcik7Y29uc3QgeD1MLmdldEZsb2F0MzIuYmluZChMKTtmb3IobGV0IHc9MDt3PHM7dysrKXtsZXQgdj14KHcqNCwhMCk7Zlt3KmErdV09di9oK2N9dSsrfWxldCBOPW5ldyBpKHIsdC5EQVRBX1RZUEVfRkxPQVQsMyk7RVtyXT17YnVmZmVyOmwsYXR0cmlidXRlOk59fX1sZXQgZD17YnVmZmVyOmIsYXR0cmlidXRlQnVmZmVyczpFLGRlbnNpdHk6Qn0sUz1bXTtmb3IobGV0IGUgaW4gZC5hdHRyaWJ1dGVCdWZmZXJzKVMucHVzaChkLmF0dHJpYnV0ZUJ1ZmZlcnNbZV0uYnVmZmVyKTtTLnB1c2goYikscG9zdE1lc3NhZ2UoZCxTKX19KSgpOwo=",Zl=typeof window!="undefined"&&window.Blob&&new Blob([atob(gl)],{type:"text/javascript;charset=utf-8"});function Cp(){const s=Zl&&(window.URL||window.webkitURL).createObjectURL(Zl);try{return s?new Worker(s,{}):new Worker("data:application/javascript;base64,"+gl,{type:"module"})}finally{s&&(window.URL||window.webkitURL).revokeObjectURL(s)}}var jr=(s=>(s.DECODER_WORKER_BROTLI="DECODER_WORKER_BROTLI",s.DECODER_WORKER="DECODER_WORKER",s))(jr||{});function Ap(s){switch(s){case"DECODER_WORKER_BROTLI":return new Bp;case"DECODER_WORKER":return new Cp;default:throw new Error("Unknown worker type")}}class _p{constructor(){this.workers={DECODER_WORKER:[],DECODER_WORKER_BROTLI:[]}}getWorker(t){if(this.workers[t]===void 0)throw new Error("Unknown worker type");if(this.workers[t].length===0){let n=Ap(t);this.workers[t].push(n)}let e=this.workers[t].pop();if(e===void 0)throw new Error("No workers available");return e}returnWorker(t,e){this.workers[t].push(e)}}const Gl=class{constructor(s,t,e){this.name=s,this.octreeGeometry=t,this.boundingBox=e,this.loaded=!1,this.loading=!1,this.parent=null,this.geometry=null,this.hasChildren=!1,this.isLeafNode=!0,this.isTreeNode=!1,this.isGeometryNode=!0,this.children=[null,null,null,null,null,null,null,null],this.id=Gl.IDCount++,this.index=parseInt(s.charAt(s.length-1)),this.boundingSphere=e.getBoundingSphere(new Re),this.numPoints=0,this.oneTimeDisposeHandlers=[]}getLevel(){return this.level}isLoaded(){return this.loaded}getBoundingSphere(){return this.boundingSphere}getBoundingBox(){return this.boundingBox}load(){this.octreeGeometry.numNodesLoading>=this.octreeGeometry.maxNumNodesLoading||this.octreeGeometry.loader&&this.octreeGeometry.loader.load(this)}getNumPoints(){return this.numPoints}dispose(){if(this.geometry&&this.parent!=null){this.geometry.dispose(),this.geometry=null,this.loaded=!1;for(let s=0;s<this.oneTimeDisposeHandlers.length;s++)this.oneTimeDisposeHandlers[s]();this.oneTimeDisposeHandlers=[]}}traverse(s,t=!0){const e=t?[this]:[];let n;for(;(n=e.pop())!==void 0;){s(n);for(const i of n.children)i!==null&&e.push(i)}}};let Ms=Gl;Ms.IDCount=0,Ms.IDCount=0;class Jp{constructor(t,e,n){this.url=t,this.workerPool=e,this.metadata=n}async load(t){if(!(t.loaded||t.loading)){t.loading=!0,t.octreeGeometry.numNodesLoading++;try{t.nodeType===2&&await this.loadHierarchy(t);let{byteOffset:e,byteSize:n}=t;if(e===void 0||n===void 0)throw new Error("byteOffset and byteSize are required");let i=`${this.url}/../octree.bin`,r=e,a=e+n-BigInt(1),o;n===BigInt(0)?(o=new ArrayBuffer(0),console.warn(`loaded node with 0 bytes: ${t.name}`)):o=await(await fetch(i,{headers:{"content-type":"multipart/byteranges",Range:`bytes=${r}-${a}`}})).arrayBuffer();const l=this.metadata.encoding==="BROTLI"?jr.DECODER_WORKER_BROTLI:jr.DECODER_WORKER,c=this.workerPool.getWorker(l);c.onmessage=Y=>{let y=Y.data,x=y.attributeBuffers;this.workerPool.returnWorker(l,c);let M=new Ot;for(let N in x){let Q=x[N].buffer;if(N==="position")M.setAttribute("position",new _t(new Float32Array(Q),3));else if(N==="rgba")M.setAttribute("rgba",new _t(new Uint8Array(Q),4,!0));else if(N==="NORMAL")M.setAttribute("normal",new _t(new Float32Array(Q),3));else if(N==="INDICES"){let rt=new _t(new Uint8Array(Q),4);rt.normalized=!0,M.setAttribute("indices",rt)}else{const rt=new _t(new Float32Array(Q),1);let E=x[N].attribute;rt.potree={offset:x[N].offset,scale:x[N].scale,preciseBuffer:x[N].preciseBuffer,range:E.range},M.setAttribute(N,rt)}}t.density=y.density,t.geometry=M,t.loaded=!0,t.loading=!1,t.octreeGeometry.numNodesLoading--};let d=t.octreeGeometry.pointAttributes,h=t.octreeGeometry.scale,u=t.boundingBox,m=t.octreeGeometry.offset.clone().add(u.min),b=u.max.clone().sub(u.min),g=m.clone().add(b),Z=t.numPoints,f=t.octreeGeometry.loader.offset,p={name:t.name,buffer:o,pointAttributes:d,scale:h,min:m,max:g,size:b,offset:f,numPoints:Z};c.postMessage(p,[p.buffer])}catch{t.loaded=!1,t.loading=!1,t.octreeGeometry.numNodesLoading--}}}parseHierarchy(t,e){let n=new DataView(e),i=22,r=e.byteLength/i,a=t.octreeGeometry,o=new Array(r);o[0]=t;let l=1;for(let c=0;c<r;c++){let d=o[c],h=n.getUint8(c*i+0),u=n.getUint8(c*i+1),m=n.getUint32(c*i+2,!0),b=n.getBigInt64(c*i+6,!0),g=n.getBigInt64(c*i+14,!0);if(d.nodeType===2?(d.byteOffset=b,d.byteSize=g,d.numPoints=m):h===2?(d.hierarchyByteOffset=b,d.hierarchyByteSize=g,d.numPoints=m):(d.byteOffset=b,d.byteSize=g,d.numPoints=m),d.nodeType=h,d.nodeType!==2)for(let Z=0;Z<8;Z++){if(!((1<<Z&u)!==0))continue;let p=d.name+Z,Y=Dp(d.boundingBox,Z),y=new Ms(p,a,Y);y.name=p,y.spacing=d.spacing/2,y.level=d.level+1,d.children[Z]=y,y.parent=d,o[l]=y,l++}}}async loadHierarchy(t){let{hierarchyByteOffset:e,hierarchyByteSize:n}=t;if(e===void 0||n===void 0)throw new Error(`hierarchyByteOffset and hierarchyByteSize are undefined for node ${t.name}`);let i=`${this.url}/../hierarchy.bin`,r=e,a=r+n-BigInt(1),l=await(await fetch(i,{headers:{"content-type":"multipart/byteranges",Range:`bytes=${r}-${a}`}})).arrayBuffer();this.parseHierarchy(t,l)}}let Tp=new R;function Dp(s,t){let e=s.min.clone(),n=s.max.clone(),i=Tp.subVectors(n,e);return(t&1)>0?e.z+=i.z/2:n.z-=i.z/2,(t&2)>0?e.y+=i.y/2:n.y-=i.y/2,(t&4)>0?e.x+=i.x/2:n.x-=i.x/2,new ae(e,n)}let zp={double:Qt.DATA_TYPE_DOUBLE,float:Qt.DATA_TYPE_FLOAT,int8:Qt.DATA_TYPE_INT8,uint8:Qt.DATA_TYPE_UINT8,int16:Qt.DATA_TYPE_INT16,uint16:Qt.DATA_TYPE_UINT16,int32:Qt.DATA_TYPE_INT32,uint32:Qt.DATA_TYPE_UINT32,int64:Qt.DATA_TYPE_INT64,uint64:Qt.DATA_TYPE_UINT64};class Ns{constructor(){this.workerPool=new _p}static parseAttributes(t){let e=new Ip,n={rgb:"rgba"};for(const i of t){let{name:r,numElements:a,min:o,max:l}=i,c=zp[i.type],d=n[r]?n[r]:r,h=new ge(d,c,a);a===1?h.range=[o[0],l[0]]:h.range=[o,l],r==="gps-time"&&typeof h.range[0]=="number"&&h.range[0]===h.range[1]&&(h.range[1]+=1),h.initialRange=h.range,e.add(h)}if(e.attributes.find(r=>r.name==="NormalX")!==void 0&&e.attributes.find(r=>r.name==="NormalY")!==void 0&&e.attributes.find(r=>r.name==="NormalZ")!==void 0){let r={name:"NORMAL",attributes:["NormalX","NormalY","NormalZ"]};e.addVector(r)}return e}async load(t,e){let i=await(await e(t)).json(),r=Ns.parseAttributes(i.attributes),a=new Jp(t,this.workerPool,i);a.attributes=r,a.scale=i.scale,a.offset=i.offset;let o=new el(a,new ae(new R(...i.boundingBox.min),new R(...i.boundingBox.max)));o.url=t,o.spacing=i.spacing,o.scale=i.scale;let l=new R(...i.boundingBox.min),c=new R(...i.boundingBox.max),d=new ae(l,c),h=l.clone();d.min.sub(h),d.max.sub(h),o.projection=i.projection,o.boundingBox=d,o.tightBoundingBox=d.clone(),o.boundingSphere=d.getBoundingSphere(new Re),o.tightBoundingSphere=d.getBoundingSphere(new Re),o.offset=h,o.pointAttributes=Ns.parseAttributes(i.attributes);let u=new Ms("r",o,d);return u.level=0,u.nodeType=2,u.hierarchyByteOffset=BigInt(0),u.hierarchyByteSize=BigInt(i.hierarchy.firstChunkSize),u.spacing=o.spacing,u.byteOffset=BigInt(0),o.root=u,a.load(u),{geometry:o}}}async function Ep(s,t,e){const n=await t(s),i=new Ns,{geometry:r}=await i.load(n,e);return r}const me=document.createElement("canvas").getContext("webgl"),Hp={SHADER_INTERPOLATION:Fs("EXT_frag_depth")&&Or(8),SHADER_SPLATS:Fs("EXT_frag_depth")&&Fs("OES_texture_float")&&Or(8),SHADER_EDL:Fs("OES_texture_float")&&Or(8),precision:Up()};function Fs(s){return me!==null&&Boolean(me.getExtension(s))}function Or(s){return me!==null&&me.getParameter(me.MAX_VARYING_VECTORS)>=s}function Up(){if(me===null)return"";const s=me.getShaderPrecisionFormat(me.VERTEX_SHADER,me.HIGH_FLOAT),t=me.getShaderPrecisionFormat(me.VERTEX_SHADER,me.MEDIUM_FLOAT),e=me.getShaderPrecisionFormat(me.FRAGMENT_SHADER,me.HIGH_FLOAT),n=me.getShaderPrecisionFormat(me.FRAGMENT_SHADER,me.MEDIUM_FLOAT),i=s&&e&&s.precision>0&&e.precision>0,r=t&&n&&t.precision>0&&n.precision>0;return i?"highp":r?"mediump":"lowp"}var Gn=(s=>(s[s.POSITION_CARTESIAN=0]="POSITION_CARTESIAN",s[s.COLOR_PACKED=1]="COLOR_PACKED",s[s.COLOR_FLOATS_1=2]="COLOR_FLOATS_1",s[s.COLOR_FLOATS_255=3]="COLOR_FLOATS_255",s[s.NORMAL_FLOATS=4]="NORMAL_FLOATS",s[s.FILLER=5]="FILLER",s[s.INTENSITY=6]="INTENSITY",s[s.CLASSIFICATION=7]="CLASSIFICATION",s[s.NORMAL_SPHEREMAPPED=8]="NORMAL_SPHEREMAPPED",s[s.NORMAL_OCT16=9]="NORMAL_OCT16",s[s.NORMAL=10]="NORMAL",s))(Gn||{});const He={DATA_TYPE_DOUBLE:{ordinal:0,size:8},DATA_TYPE_FLOAT:{ordinal:1,size:4},DATA_TYPE_INT8:{ordinal:2,size:1},DATA_TYPE_UINT8:{ordinal:3,size:1},DATA_TYPE_INT16:{ordinal:4,size:2},DATA_TYPE_UINT16:{ordinal:5,size:2},DATA_TYPE_INT32:{ordinal:6,size:4},DATA_TYPE_UINT32:{ordinal:7,size:4},DATA_TYPE_INT64:{ordinal:8,size:8},DATA_TYPE_UINT64:{ordinal:9,size:8}};function Ue(s,t,e){return{name:s,type:t,numElements:e,byteSize:e*t.size}}const Wl=Ue(1,He.DATA_TYPE_INT8,4),kp={POSITION_CARTESIAN:Ue(0,He.DATA_TYPE_FLOAT,3),RGBA_PACKED:Wl,COLOR_PACKED:Wl,RGB_PACKED:Ue(1,He.DATA_TYPE_INT8,3),NORMAL_FLOATS:Ue(4,He.DATA_TYPE_FLOAT,3),FILLER_1B:Ue(5,He.DATA_TYPE_UINT8,1),INTENSITY:Ue(6,He.DATA_TYPE_UINT16,1),CLASSIFICATION:Ue(7,He.DATA_TYPE_UINT8,1),NORMAL_SPHEREMAPPED:Ue(8,He.DATA_TYPE_UINT8,2),NORMAL_OCT16:Ue(9,He.DATA_TYPE_UINT8,2),NORMAL:Ue(10,He.DATA_TYPE_FLOAT,3)};class yl{constructor(t=[]){this.attributes=[],this.byteSize=0,this.size=0;for(let e=0;e<t.length;e++){const n=t[e],i=kp[n];this.attributes.push(i),this.byteSize+=i.byteSize,this.size++}}add(t){this.attributes.push(t),this.byteSize+=t.byteSize,this.size++}hasColors(){return this.attributes.find(Pp)!==void 0}hasNormals(){return this.attributes.find(Lp)!==void 0}}function Pp({name:s}){return s===1}function Lp({name:s}){return s===8||s===4||s===10||s===9}class oi{constructor(t){this.versionMinor=0,this.version=t;const e=t.indexOf(".")===-1?t.length:t.indexOf(".");this.versionMajor=parseInt(t.substr(0,e),10),this.versionMinor=parseInt(t.substr(e+1),10),isNaN(this.versionMinor)&&(this.versionMinor=0)}newerThan(t){const e=new oi(t);return this.versionMajor>e.versionMajor?!0:this.versionMajor===e.versionMajor&&this.versionMinor>e.versionMinor}equalOrHigher(t){const e=new oi(t);return this.versionMajor>e.versionMajor?!0:this.versionMajor===e.versionMajor&&this.versionMinor>=e.versionMinor}upTo(t){return!this.newerThan(t)}}const xl="KGZ1bmN0aW9uKCl7InVzZSBzdHJpY3QiO3ZhciBUPShlPT4oZVtlLlBPU0lUSU9OX0NBUlRFU0lBTj0wXT0iUE9TSVRJT05fQ0FSVEVTSUFOIixlW2UuQ09MT1JfUEFDS0VEPTFdPSJDT0xPUl9QQUNLRUQiLGVbZS5DT0xPUl9GTE9BVFNfMT0yXT0iQ09MT1JfRkxPQVRTXzEiLGVbZS5DT0xPUl9GTE9BVFNfMjU1PTNdPSJDT0xPUl9GTE9BVFNfMjU1IixlW2UuTk9STUFMX0ZMT0FUUz00XT0iTk9STUFMX0ZMT0FUUyIsZVtlLkZJTExFUj01XT0iRklMTEVSIixlW2UuSU5URU5TSVRZPTZdPSJJTlRFTlNJVFkiLGVbZS5DTEFTU0lGSUNBVElPTj03XT0iQ0xBU1NJRklDQVRJT04iLGVbZS5OT1JNQUxfU1BIRVJFTUFQUEVEPThdPSJOT1JNQUxfU1BIRVJFTUFQUEVEIixlW2UuTk9STUFMX09DVDE2PTldPSJOT1JNQUxfT0NUMTYiLGVbZS5OT1JNQUw9MTBdPSJOT1JNQUwiLGUpKShUfHx7fSk7Y29uc3QgST17REFUQV9UWVBFX0RPVUJMRTp7b3JkaW5hbDowLHNpemU6OH0sREFUQV9UWVBFX0ZMT0FUOntvcmRpbmFsOjEsc2l6ZTo0fSxEQVRBX1RZUEVfSU5UODp7b3JkaW5hbDoyLHNpemU6MX0sREFUQV9UWVBFX1VJTlQ4OntvcmRpbmFsOjMsc2l6ZToxfSxEQVRBX1RZUEVfSU5UMTY6e29yZGluYWw6NCxzaXplOjJ9LERBVEFfVFlQRV9VSU5UMTY6e29yZGluYWw6NSxzaXplOjJ9LERBVEFfVFlQRV9JTlQzMjp7b3JkaW5hbDo2LHNpemU6NH0sREFUQV9UWVBFX1VJTlQzMjp7b3JkaW5hbDo3LHNpemU6NH0sREFUQV9UWVBFX0lOVDY0OntvcmRpbmFsOjgsc2l6ZTo4fSxEQVRBX1RZUEVfVUlOVDY0OntvcmRpbmFsOjksc2l6ZTo4fX07ZnVuY3Rpb24gTyhlLHQscil7cmV0dXJue25hbWU6ZSx0eXBlOnQsbnVtRWxlbWVudHM6cixieXRlU2l6ZTpyKnQuc2l6ZX19Y29uc3QgUz1PKDEsSS5EQVRBX1RZUEVfSU5UOCw0KSxFPXtQT1NJVElPTl9DQVJURVNJQU46TygwLEkuREFUQV9UWVBFX0ZMT0FULDMpLFJHQkFfUEFDS0VEOlMsQ09MT1JfUEFDS0VEOlMsUkdCX1BBQ0tFRDpPKDEsSS5EQVRBX1RZUEVfSU5UOCwzKSxOT1JNQUxfRkxPQVRTOk8oNCxJLkRBVEFfVFlQRV9GTE9BVCwzKSxGSUxMRVJfMUI6Tyg1LEkuREFUQV9UWVBFX1VJTlQ4LDEpLElOVEVOU0lUWTpPKDYsSS5EQVRBX1RZUEVfVUlOVDE2LDEpLENMQVNTSUZJQ0FUSU9OOk8oNyxJLkRBVEFfVFlQRV9VSU5UOCwxKSxOT1JNQUxfU1BIRVJFTUFQUEVEOk8oOCxJLkRBVEFfVFlQRV9VSU5UOCwyKSxOT1JNQUxfT0NUMTY6Tyg5LEkuREFUQV9UWVBFX1VJTlQ4LDIpLE5PUk1BTDpPKDEwLEkuREFUQV9UWVBFX0ZMT0FULDMpfTtjbGFzcyBke2NvbnN0cnVjdG9yKHQpe3RoaXMudmVyc2lvbk1pbm9yPTAsdGhpcy52ZXJzaW9uPXQ7Y29uc3Qgcj10LmluZGV4T2YoIi4iKT09PS0xP3QubGVuZ3RoOnQuaW5kZXhPZigiLiIpO3RoaXMudmVyc2lvbk1ham9yPXBhcnNlSW50KHQuc3Vic3RyKDAsciksMTApLHRoaXMudmVyc2lvbk1pbm9yPXBhcnNlSW50KHQuc3Vic3RyKHIrMSksMTApLGlzTmFOKHRoaXMudmVyc2lvbk1pbm9yKSYmKHRoaXMudmVyc2lvbk1pbm9yPTApfW5ld2VyVGhhbih0KXtjb25zdCByPW5ldyBkKHQpO3JldHVybiB0aGlzLnZlcnNpb25NYWpvcj5yLnZlcnNpb25NYWpvcj8hMDp0aGlzLnZlcnNpb25NYWpvcj09PXIudmVyc2lvbk1ham9yJiZ0aGlzLnZlcnNpb25NaW5vcj5yLnZlcnNpb25NaW5vcn1lcXVhbE9ySGlnaGVyKHQpe2NvbnN0IHI9bmV3IGQodCk7cmV0dXJuIHRoaXMudmVyc2lvbk1ham9yPnIudmVyc2lvbk1ham9yPyEwOnRoaXMudmVyc2lvbk1ham9yPT09ci52ZXJzaW9uTWFqb3ImJnRoaXMudmVyc2lvbk1pbm9yPj1yLnZlcnNpb25NaW5vcn11cFRvKHQpe3JldHVybiF0aGlzLm5ld2VyVGhhbih0KX19Y2xhc3MgTntjb25zdHJ1Y3Rvcih0KXt0aGlzLnRtcD1uZXcgQXJyYXlCdWZmZXIoNCksdGhpcy50bXBmPW5ldyBGbG9hdDMyQXJyYXkodGhpcy50bXApLHRoaXMudG1wdTg9bmV3IFVpbnQ4QXJyYXkodGhpcy50bXApLHRoaXMudTg9bmV3IFVpbnQ4QXJyYXkodCl9Z2V0VWludDMyKHQpe3JldHVybiB0aGlzLnU4W3QrM108PDI0fHRoaXMudThbdCsyXTw8MTZ8dGhpcy51OFt0KzFdPDw4fHRoaXMudThbdF19Z2V0VWludDE2KHQpe3JldHVybiB0aGlzLnU4W3QrMV08PDh8dGhpcy51OFt0XX1nZXRGbG9hdDMyKHQpe2NvbnN0IHI9dGhpcy50bXB1OCxzPXRoaXMudTgsbj10aGlzLnRtcGY7cmV0dXJuIHJbMF09c1t0KzBdLHJbMV09c1t0KzFdLHJbMl09c1t0KzJdLHJbM109c1t0KzNdLG5bMF19Z2V0VWludDgodCl7cmV0dXJuIHRoaXMudThbdF19fWNvbnN0IGg9TWF0aC5zaWdufHxmdW5jdGlvbihlKXtyZXR1cm4oZT0rZSk9PTB8fGUhPWU/ZTplPDA/LTE6MX07ZnVuY3Rpb24gYihlKXtjb25zdCB0PWUuZGF0YS5idWZmZXIscj1lLmRhdGEucG9pbnRBdHRyaWJ1dGVzLHM9e2F0dHJpYnV0ZUJ1ZmZlcnM6e30sY3VycmVudE9mZnNldDowLGRhdGE6bmV3IE4odCksbWVhbjpbMCwwLDBdLG5vZGVPZmZzZXQ6ZS5kYXRhLm9mZnNldCxudW1Qb2ludHM6ZS5kYXRhLmJ1ZmZlci5ieXRlTGVuZ3RoL3IuYnl0ZVNpemUscG9pbnRBdHRyaWJ1dGVzOnIsc2NhbGU6ZS5kYXRhLnNjYWxlLHRpZ2h0Qm94TWF4OltOdW1iZXIuTkVHQVRJVkVfSU5GSU5JVFksTnVtYmVyLk5FR0FUSVZFX0lORklOSVRZLE51bWJlci5ORUdBVElWRV9JTkZJTklUWV0sdGlnaHRCb3hNaW46W051bWJlci5QT1NJVElWRV9JTkZJTklUWSxOdW1iZXIuUE9TSVRJVkVfSU5GSU5JVFksTnVtYmVyLlBPU0lUSVZFX0lORklOSVRZXSx0cmFuc2ZlcmFibGVzOltdLHZlcnNpb246bmV3IGQoZS5kYXRhLnZlcnNpb24pfTtmb3IoY29uc3QgaSBvZiBzLnBvaW50QXR0cmlidXRlcy5hdHRyaWJ1dGVzKVAoaSxzKSxzLmN1cnJlbnRPZmZzZXQrPWkuYnl0ZVNpemU7Y29uc3Qgbj1uZXcgQXJyYXlCdWZmZXIocy5udW1Qb2ludHMqNCksYT1uZXcgVWludDMyQXJyYXkobik7Zm9yKGxldCBpPTA7aTxzLm51bVBvaW50cztpKyspYVtpXT1pO3MuYXR0cmlidXRlQnVmZmVyc1tULkNMQVNTSUZJQ0FUSU9OXXx8eShzKTtjb25zdCB1PXtidWZmZXI6dCxtZWFuOnMubWVhbixhdHRyaWJ1dGVCdWZmZXJzOnMuYXR0cmlidXRlQnVmZmVycyx0aWdodEJvdW5kaW5nQm94OnttaW46cy50aWdodEJveE1pbixtYXg6cy50aWdodEJveE1heH0saW5kaWNlczpufTtwb3N0TWVzc2FnZSh1LHMudHJhbnNmZXJhYmxlcyl9ZnVuY3Rpb24geShlKXtjb25zdCB0PW5ldyBBcnJheUJ1ZmZlcihlLm51bVBvaW50cyo0KSxyPW5ldyBGbG9hdDMyQXJyYXkodCk7Zm9yKGxldCBzPTA7czxlLm51bVBvaW50cztzKyspcltzXT0wO2UuYXR0cmlidXRlQnVmZmVyc1tULkNMQVNTSUZJQ0FUSU9OXT17YnVmZmVyOnQsYXR0cmlidXRlOkUuQ0xBU1NJRklDQVRJT059fWZ1bmN0aW9uIFAoZSx0KXtjb25zdCByPWcoZSx0KTtyIT09dm9pZCAwJiYodC5hdHRyaWJ1dGVCdWZmZXJzW3IuYXR0cmlidXRlLm5hbWVdPXIsdC50cmFuc2ZlcmFibGVzLnB1c2goci5idWZmZXIpKX1mdW5jdGlvbiBnKGUsdCl7c3dpdGNoKGUubmFtZSl7Y2FzZSBULlBPU0lUSU9OX0NBUlRFU0lBTjpyZXR1cm4gTChlLHQpO2Nhc2UgVC5DT0xPUl9QQUNLRUQ6cmV0dXJuIG0oZSx0KTtjYXNlIFQuSU5URU5TSVRZOnJldHVybiBCKGUsdCk7Y2FzZSBULkNMQVNTSUZJQ0FUSU9OOnJldHVybiBDKGUsdCk7Y2FzZSBULk5PUk1BTF9TUEhFUkVNQVBQRUQ6cmV0dXJuIEYoZSx0KTtjYXNlIFQuTk9STUFMX09DVDE2OnJldHVybiBwKGUsdCk7Y2FzZSBULk5PUk1BTDpyZXR1cm4gUihlLHQpO2RlZmF1bHQ6cmV0dXJufX1mdW5jdGlvbiBMKGUsdCl7Y29uc3Qgcj1uZXcgQXJyYXlCdWZmZXIodC5udW1Qb2ludHMqNCozKSxzPW5ldyBGbG9hdDMyQXJyYXkocik7Zm9yKGxldCBuPTA7bjx0Lm51bVBvaW50cztuKyspe2xldCBhLHUsaTt0LnZlcnNpb24ubmV3ZXJUaGFuKCIxLjMiKT8oYT10LmRhdGEuZ2V0VWludDMyKHQuY3VycmVudE9mZnNldCtuKnQucG9pbnRBdHRyaWJ1dGVzLmJ5dGVTaXplKzApKnQuc2NhbGUsdT10LmRhdGEuZ2V0VWludDMyKHQuY3VycmVudE9mZnNldCtuKnQucG9pbnRBdHRyaWJ1dGVzLmJ5dGVTaXplKzQpKnQuc2NhbGUsaT10LmRhdGEuZ2V0VWludDMyKHQuY3VycmVudE9mZnNldCtuKnQucG9pbnRBdHRyaWJ1dGVzLmJ5dGVTaXplKzgpKnQuc2NhbGUpOihhPXQuZGF0YS5nZXRGbG9hdDMyKG4qdC5wb2ludEF0dHJpYnV0ZXMuYnl0ZVNpemUrMCkrdC5ub2RlT2Zmc2V0WzBdLHU9dC5kYXRhLmdldEZsb2F0MzIobip0LnBvaW50QXR0cmlidXRlcy5ieXRlU2l6ZSs0KSt0Lm5vZGVPZmZzZXRbMV0saT10LmRhdGEuZ2V0RmxvYXQzMihuKnQucG9pbnRBdHRyaWJ1dGVzLmJ5dGVTaXplKzgpK3Qubm9kZU9mZnNldFsyXSksc1szKm4rMF09YSxzWzMqbisxXT11LHNbMypuKzJdPWksdC5tZWFuWzBdKz1hL3QubnVtUG9pbnRzLHQubWVhblsxXSs9dS90Lm51bVBvaW50cyx0Lm1lYW5bMl0rPWkvdC5udW1Qb2ludHMsdC50aWdodEJveE1pblswXT1NYXRoLm1pbih0LnRpZ2h0Qm94TWluWzBdLGEpLHQudGlnaHRCb3hNaW5bMV09TWF0aC5taW4odC50aWdodEJveE1pblsxXSx1KSx0LnRpZ2h0Qm94TWluWzJdPU1hdGgubWluKHQudGlnaHRCb3hNaW5bMl0saSksdC50aWdodEJveE1heFswXT1NYXRoLm1heCh0LnRpZ2h0Qm94TWF4WzBdLGEpLHQudGlnaHRCb3hNYXhbMV09TWF0aC5tYXgodC50aWdodEJveE1heFsxXSx1KSx0LnRpZ2h0Qm94TWF4WzJdPU1hdGgubWF4KHQudGlnaHRCb3hNYXhbMl0saSl9cmV0dXJue2J1ZmZlcjpyLGF0dHJpYnV0ZTplfX1mdW5jdGlvbiBtKGUsdCl7Y29uc3Qgcj1uZXcgQXJyYXlCdWZmZXIodC5udW1Qb2ludHMqMykscz1uZXcgVWludDhBcnJheShyKTtmb3IobGV0IG49MDtuPHQubnVtUG9pbnRzO24rKylzWzMqbiswXT10LmRhdGEuZ2V0VWludDgodC5jdXJyZW50T2Zmc2V0K24qdC5wb2ludEF0dHJpYnV0ZXMuYnl0ZVNpemUrMCksc1szKm4rMV09dC5kYXRhLmdldFVpbnQ4KHQuY3VycmVudE9mZnNldCtuKnQucG9pbnRBdHRyaWJ1dGVzLmJ5dGVTaXplKzEpLHNbMypuKzJdPXQuZGF0YS5nZXRVaW50OCh0LmN1cnJlbnRPZmZzZXQrbip0LnBvaW50QXR0cmlidXRlcy5ieXRlU2l6ZSsyKTtyZXR1cm57YnVmZmVyOnIsYXR0cmlidXRlOmV9fWZ1bmN0aW9uIEIoZSx0KXtjb25zdCByPW5ldyBBcnJheUJ1ZmZlcih0Lm51bVBvaW50cyo0KSxzPW5ldyBGbG9hdDMyQXJyYXkocik7Zm9yKGxldCBuPTA7bjx0Lm51bVBvaW50cztuKyspc1tuXT10LmRhdGEuZ2V0VWludDE2KHQuY3VycmVudE9mZnNldCtuKnQucG9pbnRBdHRyaWJ1dGVzLmJ5dGVTaXplKTtyZXR1cm57YnVmZmVyOnIsYXR0cmlidXRlOmV9fWZ1bmN0aW9uIEMoZSx0KXtjb25zdCByPW5ldyBBcnJheUJ1ZmZlcih0Lm51bVBvaW50cykscz1uZXcgVWludDhBcnJheShyKTtmb3IobGV0IG49MDtuPHQubnVtUG9pbnRzO24rKylzW25dPXQuZGF0YS5nZXRVaW50OCh0LmN1cnJlbnRPZmZzZXQrbip0LnBvaW50QXR0cmlidXRlcy5ieXRlU2l6ZSk7cmV0dXJue2J1ZmZlcjpyLGF0dHJpYnV0ZTplfX1mdW5jdGlvbiBGKGUsdCl7Y29uc3Qgcj1uZXcgQXJyYXlCdWZmZXIodC5udW1Qb2ludHMqNCozKSxzPW5ldyBGbG9hdDMyQXJyYXkocik7Zm9yKGxldCBuPTA7bjx0Lm51bVBvaW50cztuKyspe2NvbnN0IGE9dC5kYXRhLmdldFVpbnQ4KHQuY3VycmVudE9mZnNldCtuKnQucG9pbnRBdHRyaWJ1dGVzLmJ5dGVTaXplKzApLHU9dC5kYXRhLmdldFVpbnQ4KHQuY3VycmVudE9mZnNldCtuKnQucG9pbnRBdHRyaWJ1dGVzLmJ5dGVTaXplKzEpLGk9YS8yNTUsbD11LzI1NTtsZXQgZj1pKjItMSxvPWwqMi0xLEE9MTtjb25zdCBfPS0xLE09ZiotZitvKi1vK0EqLV87QT1NLGY9ZipNYXRoLnNxcnQoTSksbz1vKk1hdGguc3FydChNKSxmPWYqMixvPW8qMixBPUEqMi0xLHNbMypuKzBdPWYsc1szKm4rMV09byxzWzMqbisyXT1BfXJldHVybntidWZmZXI6cixhdHRyaWJ1dGU6ZX19ZnVuY3Rpb24gcChlLHQpe2NvbnN0IHI9bmV3IEFycmF5QnVmZmVyKHQubnVtUG9pbnRzKjQqMykscz1uZXcgRmxvYXQzMkFycmF5KHIpO2ZvcihsZXQgbj0wO248dC5udW1Qb2ludHM7bisrKXtjb25zdCBhPXQuZGF0YS5nZXRVaW50OCh0LmN1cnJlbnRPZmZzZXQrbip0LnBvaW50QXR0cmlidXRlcy5ieXRlU2l6ZSswKSx1PXQuZGF0YS5nZXRVaW50OCh0LmN1cnJlbnRPZmZzZXQrbip0LnBvaW50QXR0cmlidXRlcy5ieXRlU2l6ZSsxKSxpPWEvMjU1KjItMSxsPXUvMjU1KjItMTtsZXQgZj0xLU1hdGguYWJzKGkpLU1hdGguYWJzKGwpLG89MCxBPTA7Zj49MD8obz1pLEE9bCk6KG89LShsL2gobCktMSkvaChpKSxBPS0oaS9oKGkpLTEpL2gobCkpO2NvbnN0IF89TWF0aC5zcXJ0KG8qbytBKkErZipmKTtvPW8vXyxBPUEvXyxmPWYvXyxzWzMqbiswXT1vLHNbMypuKzFdPUEsc1szKm4rMl09Zn1yZXR1cm57YnVmZmVyOnIsYXR0cmlidXRlOmV9fWZ1bmN0aW9uIFIoZSx0KXtjb25zdCByPW5ldyBBcnJheUJ1ZmZlcih0Lm51bVBvaW50cyo0KjMpLHM9bmV3IEZsb2F0MzJBcnJheShyKTtmb3IobGV0IG49MDtuPHQubnVtUG9pbnRzO24rKyl7Y29uc3QgYT10LmRhdGEuZ2V0RmxvYXQzMih0LmN1cnJlbnRPZmZzZXQrbip0LnBvaW50QXR0cmlidXRlcy5ieXRlU2l6ZSswKSx1PXQuZGF0YS5nZXRGbG9hdDMyKHQuY3VycmVudE9mZnNldCtuKnQucG9pbnRBdHRyaWJ1dGVzLmJ5dGVTaXplKzQpLGk9dC5kYXRhLmdldEZsb2F0MzIodC5jdXJyZW50T2Zmc2V0K24qdC5wb2ludEF0dHJpYnV0ZXMuYnl0ZVNpemUrOCk7c1szKm4rMF09YSxzWzMqbisxXT11LHNbMypuKzJdPWl9cmV0dXJue2J1ZmZlcjpyLGF0dHJpYnV0ZTplfX1vbm1lc3NhZ2U9Yn0pKCk7Cg==",Vl=typeof window!="undefined"&&window.Blob&&new Blob([atob(xl)],{type:"text/javascript;charset=utf-8"});function Qp(){const s=Vl&&(window.URL||window.webkitURL).createObjectURL(Vl);try{return s?new Worker(s,{}):new Worker("data:application/javascript;base64,"+xl,{type:"module"})}finally{s&&(window.URL||window.webkitURL).revokeObjectURL(s)}}class jp{constructor({getUrl:t=a=>Promise.resolve(a),version:e,boundingBox:n,scale:i,xhrRequest:r}){this.disposed=!1,this.workers=[],console.log([t,e,n,i,r]),typeof e=="string"?this.version=new oi(e):this.version=e,this.xhrRequest=r,this.getUrl=t,this.boundingBox=n,this.scale=i,this.callbacks=[]}dispose(){this.workers.forEach(t=>t.terminate()),this.workers=[],this.disposed=!0}load(t){return t.loaded||this.disposed?Promise.resolve():Promise.resolve(this.getUrl(this.getNodeUrl(t))).then(e=>this.xhrRequest(e,{mode:"cors"})).then(e=>e.arrayBuffer()).then(e=>new Promise(n=>this.parse(t,e,n)))}getNodeUrl(t){let e=t.getUrl();return this.version.equalOrHigher("1.4")&&(e+=".bin"),e}parse(t,e,n){if(this.disposed){n();return}const i=this.getWorker(),r=t.pcoGeometry.pointAttributes,a=e.byteLength/r.byteSize;this.version.upTo("1.5")&&(t.numPoints=a),i.onmessage=l=>{if(this.disposed){n();return}const c=l.data,d=t.geometry=t.geometry||new Ot;d.boundingBox=t.boundingBox,this.addBufferAttributes(d,c.attributeBuffers),this.addIndices(d,c.indices),this.addNormalAttribute(d,a),t.mean=new R().fromArray(c.mean),t.tightBoundingBox=this.getTightBoundingBox(c.tightBoundingBox),t.loaded=!0,t.loading=!1,t.failed=!1,t.pcoGeometry.numNodesLoading--,t.pcoGeometry.needsUpdate=!0,this.releaseWorker(i),this.callbacks.forEach(h=>h(t)),n()};const o={buffer:e,pointAttributes:r,version:this.version.version,min:t.boundingBox.min.toArray(),offset:t.pcoGeometry.offset.toArray(),scale:this.scale,spacing:t.spacing,hasChildren:t.hasChildren};i.postMessage(o,[o.buffer])}getWorker(){const t=this.workers.pop();return t||new Qp}releaseWorker(t){this.workers.push(t)}getTightBoundingBox({min:t,max:e}){const n=new ae(new R().fromArray(t),new R().fromArray(e));return n.max.sub(n.min),n.min.set(0,0,0),n}addBufferAttributes(t,e){Object.keys(e).forEach(n=>{const i=e[n].buffer;this.isAttribute(n,Gn.POSITION_CARTESIAN)?t.setAttribute("position",new _t(new Float32Array(i),3)):this.isAttribute(n,Gn.COLOR_PACKED)?t.setAttribute("color",new _t(new Uint8Array(i),3,!0)):this.isAttribute(n,Gn.INTENSITY)?t.setAttribute("intensity",new _t(new Float32Array(i),1)):this.isAttribute(n,Gn.CLASSIFICATION)?t.setAttribute("classification",new _t(new Uint8Array(i),1)):this.isAttribute(n,Gn.NORMAL_SPHEREMAPPED)?t.setAttribute("normal",new _t(new Float32Array(i),3)):this.isAttribute(n,Gn.NORMAL_OCT16)?t.setAttribute("normal",new _t(new Float32Array(i),3)):this.isAttribute(n,Gn.NORMAL)&&t.setAttribute("normal",new _t(new Float32Array(i),3))})}addIndices(t,e){const n=new Dl(e,4);n.normalized=!0,t.setAttribute("indices",n)}addNormalAttribute(t,e){if(!t.getAttribute("normal")){const n=new Float32Array(e*3);t.setAttribute("normal",new _t(new Float32Array(n),3))}}isAttribute(t,e){return parseInt(t,10)===e}}class Op{constructor(t,e,n,i,r){this.loader=t,this.boundingBox=e,this.tightBoundingBox=n,this.offset=i,this.xhrRequest=r,this.disposed=!1,this.needsUpdate=!0,this.octreeDir="",this.hierarchyStepSize=-1,this.nodes={},this.numNodesLoading=0,this.maxNumNodesLoading=3,this.spacing=0,this.pointAttributes=new yl([]),this.projection=null,this.url=null}dispose(){this.loader.dispose(),this.root.traverse(t=>t.dispose()),this.disposed=!0}addNodeLoadedCallback(t){this.loader.callbacks.push(t)}clearNodeLoadedCallbacks(){this.loader.callbacks=[]}}const vl=5,Kr=class extends Oe{constructor(s,t,e){super();this.id=Kr.idCount++,this.level=0,this.spacing=0,this.hasChildren=!1,this.children=[null,null,null,null,null,null,null,null],this.mean=new R,this.numPoints=0,this.loaded=!1,this.loading=!1,this.failed=!1,this.parent=null,this.oneTimeDisposeHandlers=[],this.isLeafNode=!0,this.isTreeNode=!1,this.isGeometryNode=!0,this.name=s,this.index=Lr(s),this.pcoGeometry=t,this.boundingBox=e,this.tightBoundingBox=e.clone(),this.boundingSphere=e.getBoundingSphere(new Re)}dispose(){!this.geometry||!this.parent||(this.geometry.dispose(),this.geometry=void 0,this.loaded=!1,this.oneTimeDisposeHandlers.forEach(s=>s()),this.oneTimeDisposeHandlers=[])}getUrl(){const s=this.pcoGeometry,t=s.loader.version,e=[s.octreeDir];return s.loader&&t.equalOrHigher("1.5")?(e.push(this.getHierarchyBaseUrl()),e.push(this.name)):t.equalOrHigher("1.4")?e.push(this.name):t.upTo("1.3")&&e.push(this.name),e.join("/")}getHierarchyUrl(){return`${this.pcoGeometry.octreeDir}/${this.getHierarchyBaseUrl()}/${this.name}.hrc`}addChild(s){this.children[s.index]=s,this.isLeafNode=!1,s.parent=this}traverse(s,t=!0){const e=t?[this]:[];let n;for(;(n=e.pop())!==void 0;){s(n);for(const i of n.children)i!==null&&e.push(i)}}load(){if(!this.canLoad())return Promise.resolve();this.loading=!0,this.pcoGeometry.numNodesLoading++,this.pcoGeometry.needsUpdate=!0;let s;return this.pcoGeometry.loader.version.equalOrHigher("1.5")&&this.level%this.pcoGeometry.hierarchyStepSize===0&&this.hasChildren?s=this.loadHierachyThenPoints():s=this.loadPoints(),s.catch(t=>{throw this.loading=!1,this.failed=!0,this.pcoGeometry.numNodesLoading--,t})}canLoad(){return!this.loading&&!this.loaded&&!this.pcoGeometry.disposed&&!this.pcoGeometry.loader.disposed&&this.pcoGeometry.numNodesLoading<this.pcoGeometry.maxNumNodesLoading}loadPoints(){return this.pcoGeometry.needsUpdate=!0,this.pcoGeometry.loader.load(this)}loadHierachyThenPoints(){return this.level%this.pcoGeometry.hierarchyStepSize!==0?Promise.resolve():Promise.resolve(this.pcoGeometry.loader.getUrl(this.getHierarchyUrl())).then(s=>this.pcoGeometry.xhrRequest(s,{mode:"cors"})).then(s=>s.arrayBuffer()).then(s=>this.loadHierarchy(this,s))}getHierarchyBaseUrl(){const s=this.pcoGeometry.hierarchyStepSize,t=this.name.substr(1),e=Math.floor(t.length/s);let n="r/";for(let i=0;i<e;i++)n+=`${t.substr(i*s,s)}/`;return n.slice(0,-1)}loadHierarchy(s,t){const e=new DataView(t),n=this.getNodeData(s.name,0,e);s.numPoints=n.numPoints;const i=[n],r=[];let a=vl;for(;i.length>0;){const l=i.shift();let c=1;for(let d=0;d<8&&a+1<t.byteLength;d++){if((l.children&c)!==0){const h=this.getNodeData(l.name+d,a,e);r.push(h),i.push(h),a+=vl}c=c*2}}s.pcoGeometry.needsUpdate=!0;const o=new Map;o.set(s.name,s),r.forEach(l=>this.addNode(l,s.pcoGeometry,o)),s.loadPoints()}getNodeData(s,t,e){const n=e.getUint8(t),i=e.getUint32(t+1,!0);return{children:n,numPoints:i,name:s}}addNode({name:s,numPoints:t,children:e},n,i){const r=Lr(s),a=s.substring(0,s.length-1),o=i.get(a),l=s.length-1,c=ml(o.boundingBox,r),d=new Kr(s,n,c);d.level=l,d.numPoints=t,d.hasChildren=e>0,d.spacing=n.spacing/Math.pow(2,l),o.addChild(d),i.set(s,d)}};let qr=Kr;qr.idCount=0;function Kp(s,t,e){return Promise.resolve(t(s)).then(n=>e(n,{mode:"cors"}).then(i=>i.json()).then(qp(n,t,e)))}function qp(s,t,e){return n=>{const{offset:i,boundingBox:r,tightBoundingBox:a}=$p(n),o=new jp({getUrl:t,version:n.version,boundingBox:r,scale:n.scale,xhrRequest:e}),l=new Op(o,r,a,i,e);l.url=s,l.octreeDir=n.octreeDir,l.needsUpdate=!0,l.spacing=n.spacing,l.hierarchyStepSize=n.hierarchyStepSize,l.projection=n.projection,l.offset=i,l.pointAttributes=new yl(n.pointAttributes),console.log(l.pointAttributes);const c={},d=new oi(n.version);return tf(l,n,c,d).then(()=>(d.upTo("1.4")&&ef(l,n,c),l.nodes=c,l))}}function $p(s){const t=new R(s.boundingBox.lx,s.boundingBox.ly,s.boundingBox.lz),e=new R(s.boundingBox.ux,s.boundingBox.uy,s.boundingBox.uz),n=new ae(t,e),i=n.clone(),r=t.clone();if(s.tightBoundingBox){const{lx:a,ly:o,lz:l,ux:c,uy:d,uz:h}=s.tightBoundingBox;i.min.set(a,o,l),i.max.set(c,d,h)}return n.min.sub(r),n.max.sub(r),i.min.sub(r),i.max.sub(r),{offset:r,boundingBox:n,tightBoundingBox:i}}function tf(s,t,e,n){const i="r",r=new qr(i,s,s.boundingBox);return r.hasChildren=!0,r.spacing=s.spacing,n.upTo("1.5")?r.numPoints=t.hierarchy[0][1]:r.numPoints=0,s.root=r,e[i]=r,s.root.load()}function ef(s,t,e){for(let n=1;n<t.hierarchy.length;n++){const[i,r]=t.hierarchy[n],{index:a,parentName:o,level:l}=nf(i),c=e[o],d=ml(c.boundingBox,a),h=new qr(i,s,d);h.level=l,h.numPoints=r,h.spacing=s.spacing/Math.pow(2,h.level),e[i]=h,c.addChild(h)}}function nf(s){return{index:Lr(s),parentName:s.substring(0,s.length-1),level:s.length-1}}function sf(s){return s!=null&&s.isGeometryNode}function $r(s){return s!=null&&s.isTreeNode}function Rl(s){this.content=[],this.scoreFunction=s}Rl.prototype={push:function(s){this.content.push(s),this.bubbleUp(this.content.length-1)},pop:function(){var s=this.content[0],t=this.content.pop();return this.content.length>0&&(this.content[0]=t,this.sinkDown(0)),s},remove:function(s){for(var t=this.content.length,e=0;e<t;e++)if(this.content[e]==s){var n=this.content.pop();if(e==t-1)break;this.content[e]=n,this.bubbleUp(e),this.sinkDown(e);break}},size:function(){return this.content.length},bubbleUp:function(s){for(var t=this.content[s],e=this.scoreFunction(t);s>0;){var n=Math.floor((s+1)/2)-1,i=this.content[n];if(e>=this.scoreFunction(i))break;this.content[n]=t,this.content[s]=i,s=n}},sinkDown:function(s){for(var t=this.content.length,e=this.content[s],n=this.scoreFunction(e);;){var i=(s+1)*2,r=i-1,a=null;if(r<t){var o=this.content[r],l=this.scoreFunction(o);l<n&&(a=r)}if(i<t){var c=this.content[i],d=this.scoreFunction(c);d<(a==null?n:l)&&(a=i)}if(a==null)break;this.content[s]=this.content[a],this.content[a]=e,s=a}}};class rf extends ps{constructor(t,e=new D(16776960)){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new Float32Array([t.min.x,t.min.y,t.min.z,t.max.x,t.min.y,t.min.z,t.max.x,t.min.y,t.max.z,t.min.x,t.min.y,t.max.z,t.min.x,t.max.y,t.min.z,t.max.x,t.max.y,t.min.z,t.max.x,t.max.y,t.max.z,t.min.x,t.max.y,t.max.z]),r=new Ot;r.setIndex(new _t(n,1)),r.setAttribute("position",new _t(i,3));const a=new Mn({color:e});super(r,a)}}class af{constructor(t){this.node=t,this.next=null,this.previous=null}}class of{constructor(t=1e6){this.pointBudget=t,this.first=null,this.last=null,this.numPoints=0,this.items=new Map}get size(){return this.items.size}has(t){return this.items.has(t.id)}touch(t){if(!t.loaded)return;const e=this.items.get(t.id);e?this.touchExisting(e):this.addNew(t)}addNew(t){const e=new af(t);e.previous=this.last,this.last=e,e.previous&&(e.previous.next=e),this.first||(this.first=e),this.items.set(t.id,e),this.numPoints+=t.numPoints}touchExisting(t){t.previous?t.next&&(t.previous.next=t.next,t.next.previous=t.previous,t.previous=this.last,t.next=null,this.last=t,t.previous&&(t.previous.next=t)):t.next&&(this.first=t.next,this.first.previous=null,t.previous=this.last,t.next=null,this.last=t,t.previous&&(t.previous.next=t))}remove(t){const e=this.items.get(t.id);!e||(this.items.size===1?(this.first=null,this.last=null):(e.previous||(this.first=e.next,this.first.previous=null),e.next||(this.last=e.previous,this.last.next=null),e.previous&&e.next&&(e.previous.next=e.next,e.next.previous=e.previous)),this.items.delete(t.id),this.numPoints-=t.numPoints)}getLRUItem(){return this.first?this.first.node:void 0}freeMemory(){if(!(this.items.size<=1))for(;this.numPoints>this.pointBudget*2;){const t=this.getLRUItem();t&&this.disposeSubtree(t)}}disposeSubtree(t){const e=[t];t.traverse(n=>{n.loaded&&e.push(n)});for(const n of e)n.dispose(),this.remove(n)}}class ta{constructor(t,e,n,i){this.pointCloudIndex=t,this.weight=e,this.node=n,this.parent=i}}class _i{constructor(){this._pointBudget=up,this._rendererSize=new q,this.maxNumNodesLoading=mp,this.features=Hp,this.lru=new of(this._pointBudget),this.updateVisibilityStructures=(()=>{const t=new ft,e=new ft,n=new ft;return(i,r)=>{var c;const a=[],o=[],l=new Rl(d=>1/d.weight);for(let d=0;d<i.length;d++){const h=i[d];if(!h.initialized())continue;h.numVisiblePoints=0,h.visibleNodes=[],h.visibleGeometry=[],r.updateMatrixWorld(!1);const u=r.matrixWorldInverse,m=h.matrixWorld;if(t.identity().multiply(r.projectionMatrix).multiply(u).multiply(m),a.push(new bi().setFromProjectionMatrix(t)),e.copy(m).invert(),n.identity().multiply(e).multiply(r.matrixWorld),o.push(new R().setFromMatrixPosition(n)),h.visible&&h.root!==null){const b=Number.MAX_VALUE;l.push(new ta(d,b,h.root))}$r(h.root)&&h.hideDescendants((c=h==null?void 0:h.root)==null?void 0:c.sceneNode);for(const b of h.boundingBoxNodes)b.visible=!1}return{frustums:a,cameraPositions:o,priorityQueue:l}}})()}async loadPointCloud(t,e,n=(i,r)=>fetch(i,r)){if(t==="cloud.js")return await Kp(t,e,n).then(i=>new Qr(this,i));if(t==="metadata.json")return await Ep(t,e,n).then(i=>new Qr(this,i));throw new Error("Unsupported file type")}updatePointClouds(t,e,n){const i=this.updateVisibility(t,e,n);for(let r=0;r<t.length;r++){const a=t[r];a.disposed||(a.material.updateMaterial(a,a.visibleNodes,e,n),a.updateVisibleBounds(),a.updateBoundingBoxes())}return this.lru.freeMemory(),i}static pick(t,e,n,i,r={}){return _i.picker=_i.picker||new Ci,_i.picker.pick(e,n,i,t,r)}get pointBudget(){return this._pointBudget}set pointBudget(t){t!==this._pointBudget&&(this._pointBudget=t,this.lru.pointBudget=t,this.lru.freeMemory())}updateVisibility(t,e,n){let i=0;const r=[],a=[],{frustums:o,cameraPositions:l,priorityQueue:c}=this.updateVisibilityStructures(t,e);let d=0,h=!1,u=!1,m;for(;(m=c.pop())!==void 0;){let Z=m.node;if(i+Z.numPoints>this.pointBudget)break;const f=m.pointCloudIndex,p=t[f],Y=p.maxLevel!==void 0?p.maxLevel:1/0;if(Z.level>Y||!o[f].intersectsBox(Z.boundingBox)||this.shouldClip(p,Z.boundingBox))continue;i+=Z.numPoints,p.numVisiblePoints+=Z.numPoints;const y=m.parent;if(sf(Z)&&(!y||$r(y)))if(Z.loaded&&d<rl)Z=p.toTreeNode(Z,y),d++;else if(!Z.failed)Z.loaded&&d>=rl&&(h=!0),a.push(Z),p.visibleGeometry.push(Z);else{u=!0;continue}$r(Z)&&(this.updateTreeNodeVisibility(p,Z,r),p.visibleGeometry.push(Z.geometryNode));const x=.5*n.getSize(this._rendererSize).height*n.getPixelRatio();this.updateChildVisibility(m,c,p,Z,l[f],e,x)}const b=Math.min(this.maxNumNodesLoading,a.length),g=[];for(let Z=0;Z<b;Z++)g.push(a[Z].load());return{visibleNodes:r,numVisiblePoints:i,exceededMaxLoadsToGPU:h,nodeLoadFailed:u,nodeLoadPromises:g}}updateTreeNodeVisibility(t,e,n){this.lru.touch(e.geometryNode);const i=e.sceneNode;i.visible=!0,i.material=t.material,i.updateMatrix(),i.matrixWorld.multiplyMatrices(t.matrixWorld,i.matrix),n.push(e),t.visibleNodes.push(e),this.updateBoundingBoxVisibility(t,e)}updateChildVisibility(t,e,n,i,r,a,o){const l=i.children;for(let c=0;c<l.length;c++){const d=l[c];if(d===null)continue;const h=d.boundingSphere,u=h.center.distanceTo(r),m=h.radius;let b=0;if(a.type===al){const p=a.fov*Math.PI/180,Y=Math.tan(p/2);b=o/(Y*u)}else{const f=a;b=2*o/(f.top-f.bottom)}const g=m*b;if(g<n.minNodePixelSize)continue;const Z=u<m?Number.MAX_VALUE:g+1/u;e.push(new ta(t.pointCloudIndex,Z,d,i))}}updateBoundingBoxVisibility(t,e){if(t.showBoundingBox&&!e.boundingBoxNode){const n=new rf(e.boundingBox);n.matrixAutoUpdate=!1,t.boundingBoxNodes.push(n),e.boundingBoxNode=n,e.boundingBoxNode.matrix.copy(t.matrixWorld)}else t.showBoundingBox&&e.boundingBoxNode?(e.boundingBoxNode.visible=!0,e.boundingBoxNode.matrix.copy(t.matrixWorld)):!t.showBoundingBox&&e.boundingBoxNode&&(e.boundingBoxNode.visible=!1)}shouldClip(t,e){const n=t.material;if(n.numClipBoxes===0||n.clipMode!==Zn.CLIP_OUTSIDE)return!1;const i=e.clone();t.updateMatrixWorld(!0),i.applyMatrix4(t.matrixWorld);const r=n.clipBoxes;for(let a=0;a<r.length;a++){const o=r[a].matrix,l=new ae(new R(-.5,-.5,-.5),new R(.5,.5,.5)).applyMatrix4(o);if(i.intersectsBox(l))return!1}return!0}}je.PointCloudOctree=Qr,je.Potree=_i,je.QueueItem=ta,je.Version=oi,Object.defineProperties(je,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});
